"use strict";(self.webpackChunk_player_ui_docs=self.webpackChunk_player_ui_docs||[]).push([[389],{83190:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>y});var a=t(52112);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),g=s(t),d=r,y=g["".concat(p,".").concat(d)]||g[d]||m[d]||l;return t?a.createElement(y,o(o({ref:n},c),{},{components:t})):a.createElement(y,o({ref:n},c))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[g]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},90389:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});t(52112);var a=t(83190),r=t(60742);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},l.apply(this,arguments)}const o=(i="PlatformTabs",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.yg)("div",e)});var i;const p={},s=(0,r.A)({title:"Multi-Flow Experiences",tableOfContents:[{text:"Multi-Flow Experiences",id:"multi-flow-experiences",level:1},{text:"Flow Manager",id:"flow-manager",level:2},{text:"Managed Player",id:"managed-player",level:2},{text:"Callbacks and Error Handling",id:"callbacks-and-error-handling",level:3},{text:"Error Handling",id:"error-handling",level:3}]});function c(e){let{components:n,...t}=e;return(0,a.yg)(s,l({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"multi-flow-experiences"},(0,a.yg)("a",{parentName:"h1",href:"#multi-flow-experiences"},"Multi-Flow Experiences")),(0,a.yg)("p",null,"One large use-case for Player involves orchestrating experiences that span multiple screens that may need to communicate with a back-end between stages. This is commonly used for stepped-flows, onboarding workflows, etc, and manifests as using the response from one Player flow to determine the next one. To facilitate this back-and-forth, Player ships with support for creating a flow-manager.  "),(0,a.yg)("h2",{id:"flow-manager"},(0,a.yg)("a",{parentName:"h2",href:"#flow-manager"},"Flow Manager")),(0,a.yg)("p",null,"A flow-manager is an interface for asynchronously stepping through a series of flows in a multi-flow experience. Its API mirrors that of the JavaScript ",(0,a.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols"},"iteration protocol"),"; each flow is loaded by calling ",(0,a.yg)("inlineCode",{parentName:"p"},".next()")," using the result of the previous flow (if one exists). Implementations are able to leverage this response to retrieve the ",(0,a.yg)("em",{parentName:"p"},"next")," flow in the series, or mark the cycle as complete by returning ",(0,a.yg)("inlineCode",{parentName:"p"},"done"),". "),(0,a.yg)("p",null,(0,a.yg)("img",{parentName:"p",src:"/flow-manager.png?darkModeInvert",alt:"Flow Manager"})),(0,a.yg)("p",null,"The standardization of this contract allows any client to manage a series of Player flows without needing to repeat the underlying Player-side orchestration."),(0,a.yg)("p",null,"An abridged version of the API is described below:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"interface FlowManager {\n  /**\n   * An iterator implementation that takes the result of the previous flow and returns a new one or completion marker.\n   * If `done: true` is returned, the multi-flow experience is completed.\n   *\n   * @param previousValue - The result of the previous flow.\n   */\n  next: (prevResponse: CompletedState) => Promise<FinalState | NextState<Flow>>;\n\n  /**\n   * Called when the flow is ended early (the react tree is torn down)\n   * Allows clients the opportunity to save-data before destroying the tree\n   */\n  terminate?: (player: Player) => void;\n}\n")),(0,a.yg)("p",null,"Shown above is also an optional ",(0,a.yg)("inlineCode",{parentName:"p"},"terminate")," callback. This is used when a flow is ended prematurely (user closes a view) as a means of gathering any critical information from the running player before shutting down. "),(0,a.yg)("h2",{id:"managed-player"},(0,a.yg)("a",{parentName:"h2",href:"#managed-player"},"Managed Player")),(0,a.yg)(o,{mdxType:"PlatformTabs"},(0,a.yg)("react",null,(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"ManagedPlayer")," component from the ",(0,a.yg)("inlineCode",{parentName:"p"},"@player-ui/react")," module orchestrates running flows through Player using a provided ",(0,a.yg)("inlineCode",{parentName:"p"},"flow-manager"),". Any provided configuration/plugins will be passed along to the underlying ",(0,a.yg)("inlineCode",{parentName:"p"},"ReactPlayer")," instance, and ",(0,a.yg)("inlineCode",{parentName:"p"},"React.Suspense")," is used while awaiting the next ",(0,a.yg)("inlineCode",{parentName:"p"},"flow-manager")," response. "),(0,a.yg)("p",null,"Simply render the ",(0,a.yg)("inlineCode",{parentName:"p"},"ManagedPlayer")," with a flow-manager: "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import { ManagedPlayer } from '@player-ui/react';\n\nexport const App = () => {\n  return <ManagedPlayer manager={myFlowManager} />\n}\n")),(0,a.yg)("h3",{id:"callbacks-and-error-handling"},(0,a.yg)("a",{parentName:"h3",href:"#callbacks-and-error-handling"},"Callbacks and Error Handling")),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"ManagedPlayer")," also includes callbacks for ",(0,a.yg)("inlineCode",{parentName:"p"},"onComplete")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"onError")," to handle the completion of a multi-flow experience. "),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"fallbackComponent")," is an optional prop that accepts a React component that will be rendered in case of an error. It’s given access to the thrown ",(0,a.yg)("inlineCode",{parentName:"p"},"Error")," object, as well as a ",(0,a.yg)("inlineCode",{parentName:"p"},"retry")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"reset")," callback: "),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"retry")," — Retries the last failed request (the last call to ",(0,a.yg)("inlineCode",{parentName:"li"},"next()"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"reset")," — Restarts the multi-flow from the begining, calling ",(0,a.yg)("inlineCode",{parentName:"li"},"next()")," with an empty context. "))),(0,a.yg)("ios",null,(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"ManagedPlayer")," SwiftUI Component from the ",(0,a.yg)("inlineCode",{parentName:"p"},"PlayerUI/SwiftUI")," subspec orchestrates running flows through Player using a provided ",(0,a.yg)("inlineCode",{parentName:"p"},"FlowManager"),". Any provided configuration or plugins are passed along to the underlying ",(0,a.yg)("inlineCode",{parentName:"p"},"SwiftUIPlayer")," instance. "),(0,a.yg)("p",null,"When constructing the ",(0,a.yg)("inlineCode",{parentName:"p"},"ManagedPlayer")," you supply views to be used for error scenarios, as well as what is displayed while the FlowManager is fetching flows."),(0,a.yg)("h3",{id:"error-handling"},(0,a.yg)("a",{parentName:"h3",href:"#error-handling"},"Error Handling")),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"fallback")," parameter receives a ",(0,a.yg)("inlineCode",{parentName:"p"},"ManagedPlayerErrorContext")," object when called, this object contains the ",(0,a.yg)("inlineCode",{parentName:"p"},"Error")," that was thrown, as well as ",(0,a.yg)("inlineCode",{parentName:"p"},"retry")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"reset")," functions."),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"retry")," — Retries the last failed request (the last call to ",(0,a.yg)("inlineCode",{parentName:"li"},"next()"),")"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"reset")," — Restarts the multi-flow from the begining, calling ",(0,a.yg)("inlineCode",{parentName:"li"},"next()")," with an empty context. ")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-swift"},'import PlayerUI\n\nstruct App: View {\n    var body: some View {\n        ManagedPlayer(\n            plugins: [...],\n            flowManager: myFlowManager,\n            onComplete: { result in },\n            fallback: { errorContext in Text("Error!") },\n            loading: { Text("Loading...") }\n        )\n    }\n}\n')))),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.dev/player-ui/player/blob/main/docs/site/pages/guides/multi-flow-experiences.mdx"},"Help to improve this page")))}c.isMDXComponent=!0},60742:(e,n,t)=>{t.d(n,{A:()=>E});var a=t(52112),r=t(9495),l=t(32532),o=t(83190),i=t(48884),p=t(90283),s=t(14769),c=t(63420),g=t(23013),m=t(47482),d=t(52947),y=t(4380),u=t(13516),f="chakra-skip-nav";function h(e){return{userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",...e,_focus:{clip:"auto",width:"auto",height:"auto",...e._focus}}}var w=(0,g.R)((function(e,n){const t=(0,m.Vl)("SkipLink",e),{id:a=f,...r}=(0,d.MN)(e);return(0,u.jsx)(y.B.a,{...r,ref:n,href:`#${a}`,__css:h(t)})}));w.displayName="SkipNavLink";var b=(0,g.R)((function(e,n){const{id:t=f,...a}=e;return(0,u.jsx)(y.B.div,{ref:n,id:t,tabIndex:-1,style:{outline:0},...a})}));b.displayName="SkipNavContent";var v=t(67435),x=t(63192);const N=e=>a.createElement(p.az,{display:{base:"none",xl:"block"}},"Table Of Contents",a.createElement(s._J,{spacing:1,ml:"0",mt:"4",styleType:"none"},e.tableOfContents?.map((e=>a.createElement("li",{key:e.text},a.createElement("a",{href:`#${e.id}`},e.text)))))),C=e=>{const{bannerExpanded:n}=a.useContext(v.BR),t="72px",l=`calc(100vh - 88px - ${n?t:"0px"})`,o=`calc(100vh - 88px - 105px - ${n?t:"0px"})`;return a.createElement(p.az,{minH:"100vh"},a.createElement(w,null,"Skip to Main Content"),a.createElement(r.s,{flexDir:"column",padding:"2"},a.createElement(x.IS,null),a.createElement(c.c,null),a.createElement(r.s,null,a.createElement(p.az,{as:"main",w:"100%",mx:"auto"},a.createElement(p.az,{display:{md:"flex"}},a.createElement(p.az,{display:{base:"none",md:"block"},overflow:"auto",maxH:l,pr:"8",ml:"4"},a.createElement(x.E1,null)),a.createElement(p.az,{flex:"1",minW:"0",overflow:"auto",maxH:l},a.createElement(p.az,{minH:o},a.createElement(b,null),e.children),a.createElement(p.az,{pt:"20"},a.createElement(x.wi,null))),e.tableOfContents&&a.createElement(N,{tableOfContents:e.tableOfContents}))))))};function E(e){return e=>a.createElement(C,null,a.createElement(r.s,{alignItems:"center"},a.createElement(l.m,{maxW:"container.lg"},a.createElement(o.xA,{components:i.Ul},e.children))))}}}]);
//# sourceMappingURL=389.f443bd411171ab32be28.js.map