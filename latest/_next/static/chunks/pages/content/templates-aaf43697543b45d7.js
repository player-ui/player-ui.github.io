(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3543],{30876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(2784);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"===typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=o(n),d=l,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||i;return n?a.createElement(f,r(r({ref:t},u),{},{components:n})):a.createElement(f,r({ref:t},u))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"===typeof e||l){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"===typeof e?e:l,r[1]=s;for(var o=2;o<i;o++)r[o]=n[o];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},84621:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/content/templates",function(){return n(37877)}])},43857:function(e,t,n){"use strict";n.d(t,{Z:function(){return w}});var a=n(52322),l=n(2784),i=n(97729),r=n(64033),s=n(30876),p=n(21925),o=n(76808),u=n(55165),c=n(63637),m=n.n(c);function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function f(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}var h=["id"],y=["id"],x="chakra-skip-nav",g={userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",_focus:{clip:"auto",width:"auto",height:"auto"}},v=(0,o.Gp)((function(e,t){var n=(0,o.mq)("SkipLink",e),a=(0,o.Lr)(e),i=a.id,r=void 0===i?x:i,s=f(a,h),p=m()({},g,n);return l.createElement(o.m$.a,d({},s,{ref:t,href:"#"+r,__css:p}))}));u.Ts&&(v.displayName="SkipNavLink");var k=(0,o.Gp)((function(e,t){var n=e.id,a=void 0===n?x:n,i=f(e,y);return l.createElement(o.m$.div,d({ref:t,id:a,tabIndex:-1,style:{outline:0}},i))}));u.Ts&&(k.displayName="SkipNavContent");var b=n(46977),j=n(96882),O=function(e){var t;return(0,a.jsxs)(r.xu,{display:{base:"none",xl:"block"},children:["Table Of Contents",(0,a.jsx)(r.GS,{spacing:1,ml:"0",mt:"4",styleType:"none",children:null===(t=e.tableOfContents)||void 0===t?void 0:t.map((function(e){return(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"#".concat(e.id),children:e.text})},e.text)}))})]})},N=function(e){var t=l.useContext(b.Il).bannerExpanded,n="72px",i="calc(100vh - 88px - ".concat(t?n:"0px",")"),s="calc(100vh - 88px - 105px - ".concat(t?n:"0px",")");return(0,a.jsxs)(r.xu,{minH:"100vh",children:[(0,a.jsx)(v,{children:"Skip to Main Content"}),(0,a.jsxs)(r.kC,{flexDir:"column",padding:"2",children:[(0,a.jsx)(j._g,{}),(0,a.jsx)(r.iz,{}),(0,a.jsx)(r.kC,{children:(0,a.jsx)(r.xu,{as:"main",w:"100%",mx:"auto",children:(0,a.jsxs)(r.xu,{display:{md:"flex"},children:[(0,a.jsx)(r.xu,{display:{base:"none",md:"block"},overflow:"auto",maxH:i,pr:"8",ml:"4",children:(0,a.jsx)(j.Hy,{})}),(0,a.jsxs)(r.xu,{flex:"1",minW:"0",overflow:"auto",maxH:i,children:[(0,a.jsxs)(r.xu,{minH:s,children:[(0,a.jsx)(k,{}),e.children]}),(0,a.jsx)(r.xu,{pt:"20",children:(0,a.jsx)(j.$_,{})})]}),e.tableOfContents&&(0,a.jsx)(O,{tableOfContents:e.tableOfContents})]})})})]})]})};function w(e){return function(t){return(0,a.jsxs)(N,{children:[(0,a.jsx)(i.default,{children:(0,a.jsxs)("title",{children:["Player - ",e.title]})}),(0,a.jsx)(r.kC,{alignItems:"center",children:(0,a.jsx)(r.W2,{maxW:"container.lg",children:(0,a.jsx)(s.Zo,{components:p.tl,children:t.children})})})]})}}},37877:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return p}});n(2784);var a=n(30876),l=n(43857);function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var r={},s=(0,l.Z)({title:"Templates",tableOfContents:[{text:"Templates",id:"templates",level:1},{text:"Usage",id:"usage",level:2},{text:"Example",id:"example",level:3},{text:"Multiple templates",id:"multiple-templates",level:2},{text:"Nested Templates",id:"nested-templates",level:3},{text:"Multiple Templates - Single Output",id:"multiple-templates---single-output",level:3},{text:"Dynamic and Static Templates",id:"dynamic-and-static-templates",level:2}]});function p(e){var t=e.components,n=i(e,["components"]);return(0,a.kt)(s,Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",Object.assign({},{id:"templates"}),(0,a.kt)("a",Object.assign({parentName:"h1"},{href:"#templates"}),"Templates")),(0,a.kt)("p",null,"Templates provide a way to dynamically create a list of assets, or ",(0,a.kt)("em",{parentName:"p"},"any")," object, based on data from the model. All of the templating semantics are removed by the time it reaches an asset\u2019s transform or UI layer."),(0,a.kt)("h2",Object.assign({},{id:"usage"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#usage"}),"Usage")),(0,a.kt)("p",null,"Within any asset, specify a ",(0,a.kt)("inlineCode",{parentName:"p"},"template")," property as an array of:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"data")," - A binding that points to an array in the model"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"output")," - A property to put the mapped objects"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"value")," - The template to use for each object/item in the data array."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dynamic")," - (optional, false by default) A boolean that specifies whether template should be recomputed when data changes")),(0,a.kt)("p",null,"Within a template, the ",(0,a.kt)("inlineCode",{parentName:"p"},"_index_")," string can be used to substitute the array-index of the item being mapped."),(0,a.kt)("h3",Object.assign({},{id:"example"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#example"}),"Example")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Authored")),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "asset": {\n    "id": "top-level",\n    "type": "collection",\n    "template": [\n      {\n        "data": "list.of.names",\n        "output": "values",\n        "value": {\n          "asset": {\n            "id": "value-_index_",\n            "type": "text",\n            "value": "{{list.of.names._index_}}"\n          }\n        }\n      }\n    ]\n  }\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Output")),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "asset": {\n    "id": "top-level",\n    "type": "collection",\n    "values": [\n      {\n        "asset": {\n          "id": "value-0",\n          "type": "text",\n          "value": "Adam"\n        }\n      },\n      {\n        "asset": {\n          "id": "value-1",\n          "type": "text",\n          "value": "Margie"\n        }\n      }\n    ]\n  }\n}\n')),(0,a.kt)("h2",Object.assign({},{id:"multiple-templates"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#multiple-templates"}),"Multiple templates")),(0,a.kt)("p",null,"There\u2019s a few ways to leverage multiple templates within a single asset. Templates can be ",(0,a.kt)("em",{parentName:"p"},"nested")," or multiple used on a single node. These can also be combined to build out super complicated nested expansion."),(0,a.kt)("h3",Object.assign({},{id:"nested-templates"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#nested-templates"}),"Nested Templates")),(0,a.kt)("p",null,"Templates can contain other templates. When referencing a nested template, append the template depth to the ",(0,a.kt)("inlineCode",{parentName:"p"},"_index_")," string to reference the correct data-item."),(0,a.kt)("p",null,"For example, if 1 template contains another, use ",(0,a.kt)("inlineCode",{parentName:"p"},"_index_")," to reference the outer-loop, and ",(0,a.kt)("inlineCode",{parentName:"p"},"_index1_")," to reference the inner loop."),(0,a.kt)("h3",Object.assign({},{id:"multiple-templates---single-output"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#multiple-templates---single-output"}),"Multiple Templates - Single Output")),(0,a.kt)("p",null,"Templates will, by default, create an array, if needed, for the ",(0,a.kt)("inlineCode",{parentName:"p"},"output")," property of each template. If that array already exits (either by manually writing it in the JSON, or from a previous template run), each item will be appended to the end of the existing array."),(0,a.kt)("p",null,"This can be leveraged by combining multiple template directives that use the same ",(0,a.kt)("inlineCode",{parentName:"p"},"output")," property, or by having an ",(0,a.kt)("inlineCode",{parentName:"p"},"output")," use an existing array:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Example"))),(0,a.kt)("p",null,"Both templates in the example below output to the ",(0,a.kt)("inlineCode",{parentName:"p"},"values")," array on the parent object. Since no ",(0,a.kt)("inlineCode",{parentName:"p"},"values")," array exists, the first template will create said array, and the second will append to that."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "asset": {\n    "id": "top-level",\n    "type": "collection",\n    "template": [\n      {\n        "data": "list.of.names",\n        "output": "values",\n        "value": {\n          "asset": {\n            "id": "name-_index_",\n            "type": "text",\n            "value": "{{list.of.names._index_}}"\n          }\n        }\n      },\n      {\n        "data": "list.of.other-names",\n        "output": "values",\n        "value": {\n          "asset": {\n            "id": "other-name-_index_",\n            "type": "text",\n            "value": "{{list.of.names._index_}}"\n          }\n        }\n      }\n    ]\n  }\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Example"))),(0,a.kt)("p",null,"The template below will append it\u2019s values to the pre-existing ",(0,a.kt)("inlineCode",{parentName:"p"},"values")," array."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "asset": {\n    "id": "top-level",\n    "type": "collection",\n    "values": [\n      {\n        "asset": {\n          "id": "existing-name",\n          "type": "text",\n          "value": "Something hard-coded"\n        }\n      }\n    ],\n    "template": [\n      {\n        "data": "list.of.names",\n        "output": "values",\n        "value": {\n          "asset": {\n            "id": "name-_index_",\n            "type": "text",\n            "value": "{{list.of.names._index_}}"\n          }\n        }\n      }\n    ]\n  }\n}\n')),(0,a.kt)("h2",Object.assign({},{id:"dynamic-and-static-templates"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#dynamic-and-static-templates"}),"Dynamic and Static Templates")),(0,a.kt)("p",null,"As in like switches, the only difference between a ",(0,a.kt)("inlineCode",{parentName:"p"},"static")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"dynamic")," template is the timing update behavior after the first rendering of a view. If not defined, the value of ",(0,a.kt)("inlineCode",{parentName:"p"},"dynamic")," is default to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"dynamic")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),", the template will be parsed when a view first renders. The template will not be parsed again as data in the view is updated."),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"dynamic")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", template will be always updated whenever data changes. If data is changed while a view is still showing, the template will be updated to reflect the new data."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Example"))),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "asset": {\n    "id": "top-level",\n    "type": "collection",\n    "template": [\n      {\n        "dynamic": true,\n        "data": "list.of.names",\n        "output": "values",\n        "value": {\n          "asset": {\n            "id": "value-_index_",\n            "type": "text",\n            "value": "{{list.of.names._index_}}"\n          }\n        }\n      }\n    ]\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),"model.set([['list.of.names', ['Jain']]]);\nmodel.set([['list.of.names', ['Jain', 'Erica']]]);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Output")),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "asset": {\n    "id": "top-level",\n    "type": "collection",\n    "values": [\n      {\n        "asset": {\n          "id": "value-0",\n          "type": "text",\n          "value": "Jain"\n        }\n      },\n      {\n        "asset": {\n          "id": "value-1",\n          "type": "text",\n          "value": "Erica"\n        }\n      }\n    ]\n  }\n}\n')))}p.isMDXComponent=!0}},function(e){e.O(0,[6525,204,3795,9774,2888,179],(function(){return t=84621,e(e.s=t);var t}));var t=e.O();_N_E=t}]);