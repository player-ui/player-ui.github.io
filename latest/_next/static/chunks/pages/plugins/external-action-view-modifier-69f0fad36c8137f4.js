(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7450],{30876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(2784);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=i,x=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(x,o(o({ref:t},u),{},{components:n})):r.createElement(x,o({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"===typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"===typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67455:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/plugins/external-action-view-modifier",function(){return n(25652)}])},43857:function(e,t,n){"use strict";n.d(t,{Z:function(){return E}});var r=n(52322),i=n(2784),a=n(97729),o=n(64033),l=n(30876),s=n(21925),c=n(76808),u=n(55165),p=n(63637),d=n.n(p);function f(){return(f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function x(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}var h=["id"],g=["id"],m="chakra-skip-nav",y={userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",_focus:{clip:"auto",width:"auto",height:"auto"}},v=(0,c.Gp)((function(e,t){var n=(0,c.mq)("SkipLink",e),r=(0,c.Lr)(e),a=r.id,o=void 0===a?m:a,l=x(r,h),s=d()({},y,n);return i.createElement(c.m$.a,f({},l,{ref:t,href:"#"+o,__css:s}))}));u.Ts&&(v.displayName="SkipNavLink");var b=(0,c.Gp)((function(e,t){var n=e.id,r=void 0===n?m:n,a=x(e,g);return i.createElement(c.m$.div,f({ref:t,id:r,tabIndex:-1,style:{outline:0}},a))}));u.Ts&&(b.displayName="SkipNavContent");var w=n(46977),O=n(55002),j=function(e){var t;return(0,r.jsxs)(o.xu,{display:{base:"none",xl:"block"},children:["Table Of Contents",(0,r.jsx)(o.GS,{spacing:1,ml:"0",mt:"4",styleType:"none",children:null===(t=e.tableOfContents)||void 0===t?void 0:t.map((function(e){return(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"#".concat(e.id),children:e.text})},e.text)}))})]})},k=function(e){var t=i.useContext(w.Il).bannerExpanded,n="72px",a="calc(100vh - 88px - ".concat(t?n:"0px",")"),l="calc(100vh - 88px - 105px - ".concat(t?n:"0px",")");return(0,r.jsxs)(o.xu,{minH:"100vh",children:[(0,r.jsx)(v,{children:"Skip to Main Content"}),(0,r.jsxs)(o.kC,{flexDir:"column",padding:"2",children:[(0,r.jsx)(O._g,{}),(0,r.jsx)(o.iz,{}),(0,r.jsx)(o.kC,{children:(0,r.jsx)(o.xu,{as:"main",w:"100%",mx:"auto",children:(0,r.jsxs)(o.xu,{display:{md:"flex"},children:[(0,r.jsx)(o.xu,{display:{base:"none",md:"block"},overflow:"auto",maxH:a,pr:"8",ml:"4",children:(0,r.jsx)(O.Hy,{})}),(0,r.jsxs)(o.xu,{flex:"1",minW:"0",overflow:"auto",maxH:a,children:[(0,r.jsxs)(o.xu,{minH:l,children:[(0,r.jsx)(b,{}),e.children]}),(0,r.jsx)(o.xu,{pt:"20",children:(0,r.jsx)(O.$_,{})})]}),e.tableOfContents&&(0,r.jsx)(j,{tableOfContents:e.tableOfContents})]})})})]})]})};function E(e){return function(t){return(0,r.jsxs)(k,{children:[(0,r.jsx)(a.default,{children:(0,r.jsxs)("title",{children:["Player - ",e.title]})}),(0,r.jsx)(o.kC,{alignItems:"center",children:(0,r.jsx)(o.W2,{maxW:"container.lg",children:(0,r.jsx)(l.Zo,{components:s.tl,children:t.children})})})]})}}},25652:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}});n(2784);var r=n(30876),i=n(43857);function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o={},l=(0,i.Z)({title:"External Action View Modifier",platform:"ios",tableOfContents:[{text:"External Action View Modifier Plugin",id:"external-action-view-modifier-plugin",level:1},{text:"CocoaPods",id:"cocoapods",level:3},{text:"Swift Usage",id:"swift-usage",level:3},{text:"ExternalStateViewModifier",id:"externalstateviewmodifier",level:4}]});function s(e){var t=e.components,n=a(e,["components"]);return(0,r.kt)(l,Object.assign({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",Object.assign({},{id:"external-action-view-modifier-plugin"}),(0,r.kt)("a",Object.assign({parentName:"h1"},{href:"#external-action-view-modifier-plugin"}),"External Action View Modifier Plugin")),(0,r.kt)("p",null,"This plugin is used to handle EXTERNAL states, allowing you to asynchronously tell Player when, and what to transition with once you have finished processing the external state request."),(0,r.kt)("h3",Object.assign({},{id:"cocoapods"}),(0,r.kt)("a",Object.assign({parentName:"h3"},{href:"#cocoapods"}),"CocoaPods")),(0,r.kt)("p",null,"Add the subspec to your ",(0,r.kt)("inlineCode",{parentName:"p"},"Podfile")),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"pod 'PlayerUI/ExternalActionViewModifierPlugin'\n")),(0,r.kt)("h3",Object.assign({},{id:"swift-usage"}),(0,r.kt)("a",Object.assign({parentName:"h3"},{href:"#swift-usage"}),"Swift Usage")),(0,r.kt)("p",null,"For an example flow with an external state such as:"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "id": "test-flow",\n  "data": {\n    "transitionValue": "Next"\n  },\n  "navigation": {\n    "BEGIN": "FLOW_1",\n    "FLOW_1": {\n      "startState": "EXT_1",\n      "EXT_1": {\n        "state_type": "EXTERNAL",\n        "ref": "test-1",\n        "transitions": {\n          "Next": "END_FWD",\n          "Prev": "END_BCK"\n        },\n        "extraProperty": "extraValue"\n      },\n      "END_FWD": {\n        "state_type": "END",\n        "outcome": "FWD"\n      },\n      "END_BCK": {\n        "state_type": "END",\n        "outcome": "BCK"\n      }\n    }\n  }\n}\n')),(0,r.kt)("p",null,"The plugin can be declared to handle this external state by showing some user interface, and letting the user trigger the transition to the next state:"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),'let plugin = ExternalActionViewModifierPlugin<ExternalStateSheetModifier> { state, options, transition in\n        return AnyView(\n      VStack {\n        Text("External State")\n        Button(action: {transition("Next")}) { Text("Continue") }\n      }\n    )\n}\n\nvar body: some View {\n  SwiftUIPlayer(\n    flow: flow,\n    plugins: [\n      plugin\n    ],\n    result: $resultBinding\n  )\n}\n')),(0,r.kt)("h4",Object.assign({},{id:"externalstateviewmodifier"}),(0,r.kt)("a",Object.assign({parentName:"h4"},{href:"#externalstateviewmodifier"}),"ExternalStateViewModifier")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ExternalStateSheetModifier")," is a provided modifier to present the external content with the ",(0,r.kt)("inlineCode",{parentName:"p"},".sheet")," SwiftUI ViewModifier, however, you can easily define your own."),(0,r.kt)("p",null,"Adhere to the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalStateViewModifier")," protocol:"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),"struct ExternalAlertModifier: ExternalStateViewModifier {\n    @ObservedObject var plugin: ExternalStateViewModifierPlugin<Self>\n    init(plugin: ExternalStateViewModifierPlugin<Self>) {\n      self.plugin = plugin\n    }\n\n    func body(content: Content) -> some View {\n      // content is the SwiftUIPlayer root view\n\n      // plugin.content is the external state content\n\n      content.alert(isPresented: $plugin.isExternalState) {\n        plugin.content\n      }\n    }\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("a",Object.assign({parentName:"p"},{href:"https://github.dev/player-ui/player/blob/main/docs/site/pages/plugins/external-action-view-modifier.mdx"}),"Help to improve this page")))}s.isMDXComponent=!0}},function(e){e.O(0,[6525,7882,3832,9774,2888,179],(function(){return t=67455,e(e.s=t);var t}));var t=e.O();_N_E=t}]);