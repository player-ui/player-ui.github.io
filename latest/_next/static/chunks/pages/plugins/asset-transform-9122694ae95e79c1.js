(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2012],{30876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"===typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),f=a,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||o;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"===typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},46347:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/plugins/asset-transform",function(){return n(20136)}])},43857:function(e,t,n){"use strict";n.d(t,{Z:function(){return N}});var r=n(52322),a=n(2784),o=n(97729),s=n(64033),i=n(30876),l=n(21925),c=n(76808),p=n(55165),u=n(63637),m=n.n(u);function f(){return(f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function d(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}var h=["id"],g=["id"],b="chakra-skip-nav",y={userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",_focus:{clip:"auto",width:"auto",height:"auto"}},x=(0,c.Gp)((function(e,t){var n=(0,c.mq)("SkipLink",e),r=(0,c.Lr)(e),o=r.id,s=void 0===o?b:o,i=d(r,h),l=m()({},y,n);return a.createElement(c.m$.a,f({},i,{ref:t,href:"#"+s,__css:l}))}));p.Ts&&(x.displayName="SkipNavLink");var k=(0,c.Gp)((function(e,t){var n=e.id,r=void 0===n?b:n,o=d(e,g);return a.createElement(c.m$.div,f({ref:t,id:r,tabIndex:-1,style:{outline:0}},o))}));p.Ts&&(k.displayName="SkipNavContent");var v=n(46977),j=n(96882),O=function(e){var t;return(0,r.jsxs)(s.xu,{display:{base:"none",xl:"block"},children:["Table Of Contents",(0,r.jsx)(s.GS,{spacing:1,ml:"0",mt:"4",styleType:"none",children:null===(t=e.tableOfContents)||void 0===t?void 0:t.map((function(e){return(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"#".concat(e.id),children:e.text})},e.text)}))})]})},w=function(e){var t=a.useContext(v.Il).bannerExpanded,n="72px",o="calc(100vh - 88px - ".concat(t?n:"0px",")"),i="calc(100vh - 88px - 105px - ".concat(t?n:"0px",")");return(0,r.jsxs)(s.xu,{minH:"100vh",children:[(0,r.jsx)(x,{children:"Skip to Main Content"}),(0,r.jsxs)(s.kC,{flexDir:"column",padding:"2",children:[(0,r.jsx)(j._g,{}),(0,r.jsx)(s.iz,{}),(0,r.jsx)(s.kC,{children:(0,r.jsx)(s.xu,{as:"main",w:"100%",mx:"auto",children:(0,r.jsxs)(s.xu,{display:{md:"flex"},children:[(0,r.jsx)(s.xu,{display:{base:"none",md:"block"},overflow:"auto",maxH:o,pr:"8",ml:"4",children:(0,r.jsx)(j.Hy,{})}),(0,r.jsxs)(s.xu,{flex:"1",minW:"0",overflow:"auto",maxH:o,children:[(0,r.jsxs)(s.xu,{minH:i,children:[(0,r.jsx)(k,{}),e.children]}),(0,r.jsx)(s.xu,{pt:"20",children:(0,r.jsx)(j.$_,{})})]}),e.tableOfContents&&(0,r.jsx)(O,{tableOfContents:e.tableOfContents})]})})})]})]})};function N(e){return function(t){return(0,r.jsxs)(w,{children:[(0,r.jsx)(o.default,{children:(0,r.jsxs)("title",{children:["Player - ",e.title]})}),(0,r.jsx)(s.kC,{alignItems:"center",children:(0,r.jsx)(s.W2,{maxW:"container.lg",children:(0,r.jsx)(i.Zo,{components:l.tl,children:t.children})})})]})}}},20136:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return p}});n(2784);var r=n(30876),a=n(43857);function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s,i=(s="PlatformTabs",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",Object.assign({},e))}),l={},c=(0,a.Z)({title:"Asset Transform",platform:"core,react",tableOfContents:[{text:"Asset Transform Plugin",id:"asset-transform-plugin",level:1},{text:"What are transforms?",id:"what-are-transforms",level:2},{text:"Partial Matching",id:"partial-matching",level:2},{text:"Usage",id:"usage",level:2},{text:"Transform Arguments",id:"transform-arguments",level:2},{text:"State Management",id:"state-management",level:3},{text:"Example",id:"example",level:2}]});function p(e){var t=e.components,n=o(e,["components"]);return(0,r.kt)(c,Object.assign({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",Object.assign({},{id:"asset-transform-plugin"}),(0,r.kt)("a",Object.assign({parentName:"h1"},{href:"#asset-transform-plugin"}),"Asset Transform Plugin")),(0,r.kt)("h2",Object.assign({},{id:"what-are-transforms"}),(0,r.kt)("a",Object.assign({parentName:"h2"},{href:"#what-are-transforms"}),"What are ",(0,r.kt)("em",{parentName:"a"},"transforms"),"?")),(0,r.kt)("p",null,"Transforms are functions that map the authored JSON representation of an asset into a stateful JavaScript object, including all of the properties required for that asset to interact with the data-model, navigation, and the rest of Player. This allows UI implementations to have consistent treatment and behavior. While the transform plugin is registered in the ",(0,r.kt)("em",{parentName:"p"},"core")," layer, it can be wrapped by the native platforms. "),(0,r.kt)("h2",Object.assign({},{id:"partial-matching"}),(0,r.kt)("a",Object.assign({parentName:"h2"},{href:"#partial-matching"}),"Partial Matching")),(0,r.kt)("p",null,"The transform plugin makes use of the ",(0,r.kt)("inlineCode",{parentName:"p"},"partial-match-registry")," which ranks matching templates by the number of matching key-value pairs. This allows users to overwrite the implementation of the lookup, if more specific search criteria is provided. This registry/lookup pattern is also utilized in the web-player for the React Component to Asset mapping."),(0,r.kt)("h2",Object.assign({},{id:"usage"}),(0,r.kt)("a",Object.assign({parentName:"h2"},{href:"#usage"}),"Usage")),(0,r.kt)(i,{mdxType:"PlatformTabs"},(0,r.kt)("core",null,(0,r.kt)("h2",Object.assign({},{id:"transform-arguments"}),(0,r.kt)("a",Object.assign({parentName:"h2"},{href:"#transform-arguments"}),"Transform Arguments")),(0,r.kt)("p",null,"Each ",(0,r.kt)("inlineCode",{parentName:"p"},"transform")," is a function that is passed 3 arguments: the current ",(0,r.kt)("inlineCode",{parentName:"p"},"asset")," node, and an ",(0,r.kt)("em",{parentName:"p"},"options")," object containing a data-model, expression-evaluator, binding-parser, and a flow transition function, and a store for state management. The transforms should return an immutable representation of the asset, including any means of interacting with the ",(0,r.kt)("em",{parentName:"p"},"player"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import { Player } from '@player-ui/player';\nimport { AssetTransformPlugin } from '@player-ui/asset-transform-plugin';\n\n// Add it to Player\n\nconst player = new Player({\n  plugins: [\n    new AssetTransformPlugin(\n      new Registry([\n        // Register a match for any _action_ type with a custom transform.\n        [\n          { type: 'action' },\n          value => {\n            return {\n              ...value,\n              hello: () => console.log('hello world')\n            };\n          }\n        ]\n      ])\n    )\n  ]\n});\n")),(0,r.kt)("h3",Object.assign({},{id:"state-management"}),(0,r.kt)("a",Object.assign({parentName:"h3"},{href:"#state-management"}),"State Management")),(0,r.kt)("p",null,"Often times node transforms require some state to be stored between updates. Historically this state was put in the data-model under ",(0,r.kt)("inlineCode",{parentName:"p"},"local")," (to not send it back to the server), but updates became difficult to manage, and namespace collisions under ",(0,r.kt)("em",{parentName:"p"},"local")," were up to the transforms to discern."),(0,r.kt)("p",null,"The third argument to the transform functions expose a store for data, that mirrors the usage of ",(0,r.kt)("inlineCode",{parentName:"p"},"React")," hooks. This allow transforms to store state information in an automatically scoped store outside of the normal data tree."),(0,r.kt)("p",null,"A simple transform to manage a counter might look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"const transform = (asset, options, store) => {\n  const [count, setCount] = store.useState(0);\n  return {\n    ...asset,\n    count,\n    increment() {\n      setCount(count + 1);\n    }\n  };\n};\n")))),(0,r.kt)("h2",Object.assign({},{id:"example"}),(0,r.kt)("a",Object.assign({parentName:"h2"},{href:"#example"}),"Example")),(0,r.kt)(i,{mdxType:"PlatformTabs"},(0,r.kt)("core",null,(0,r.kt)("p",null,"If the authored JSON is:"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "actions": [\n    {\n      "asset": {\n        "id": "foo",\n        "type": "action"\n      }\n    }\n  ]\n}\n')),(0,r.kt)("p",null,"the transform-plugin would run the transform on the ",(0,r.kt)("inlineCode",{parentName:"p"},"action")," asset, attaching a new ",(0,r.kt)("inlineCode",{parentName:"p"},"hello()")," method. This can be invoked by any consumer of the current ",(0,r.kt)("em",{parentName:"p"},"view"),", as a means of interacting with the ",(0,r.kt)("em",{parentName:"p"},"player"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"{\n  actions: [\n    {\n      asset: {\n        id: 'foo',\n        type: 'action',\n        hello: () => console.log('hello world')\n      }\n    }\n  ];\n}\n")))))}p.isMDXComponent=!0}},function(e){e.O(0,[6525,204,3795,9774,2888,179],(function(){return t=46347,e(e.s=t);var t}));var t=e.O();_N_E=t}]);