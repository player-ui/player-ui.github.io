"use strict";(self.webpackChunkplayer=self.webpackChunkplayer||[]).push([[154],{"./node_modules/raw-loader/dist/cjs.js!./node_modules/@player-ui/reference-assets-plugin-mocks/action/action-basic.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__="import React from 'react';\nimport { Action } from '@player-ui/reference-assets-components';\nimport type { DSLFlow } from '@player-tools/dsl';\nimport {\n  binding as b,\n  expression as e,\n  makeBindingsForObject,\n} from '@player-tools/dsl';\n\nconst schema = {\n  count: {\n    type: 'NumberType',\n  },\n};\n\nconst data = makeBindingsForObject(schema);\n\nconst view1 = (\n  <Action exp={e`${data.count} = ${data.count} + 1`}>\n    <Action.Label>Count: {b`count`}</Action.Label>\n  </Action>\n);\n\nconst flow: DSLFlow = {\n  id: 'test-flow',\n  views: [view1],\n  data: {\n    count: 0,\n  },\n  schema,\n  navigation: {\n    BEGIN: 'FLOW_1',\n    FLOW_1: {\n      startState: 'VIEW_1',\n      VIEW_1: {\n        state_type: 'VIEW',\n        ref: view1,\n        transitions: {\n          '*': 'END_Done',\n        },\n      },\n      END_Done: {\n        state_type: 'END',\n        outcome: 'DONE',\n      },\n    },\n  },\n};\n\nexport default flow;\n"}}]);