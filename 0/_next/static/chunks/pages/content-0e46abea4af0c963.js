(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9163],{30876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"===typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"===typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},41016:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/content",function(){return n(29386)}])},43857:function(e,t,n){"use strict";n.d(t,{Z:function(){return w}});var r=n(52322),a=n(2784),i=n(97729),o=n(64033),s=n(30876),l=n(21925),c=n(76808),p=n(55165),u=n(63637),d=n.n(u);function f(){return(f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function m(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}var h=["id"],x=["id"],v="chakra-skip-nav",b={userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",_focus:{clip:"auto",width:"auto",height:"auto"}},y=(0,c.Gp)((function(e,t){var n=(0,c.mq)("SkipLink",e),r=(0,c.Lr)(e),i=r.id,o=void 0===i?v:i,s=m(r,h),l=d()({},b,n);return a.createElement(c.m$.a,f({},s,{ref:t,href:"#"+o,__css:l}))}));p.Ts&&(y.displayName="SkipNavLink");var O=(0,c.Gp)((function(e,t){var n=e.id,r=void 0===n?v:n,i=m(e,x);return a.createElement(c.m$.div,f({ref:t,id:r,tabIndex:-1,style:{outline:0}},i))}));p.Ts&&(O.displayName="SkipNavContent");var g=n(46977),j=n(96882),k=function(e){var t;return(0,r.jsxs)(o.xu,{display:{base:"none",xl:"block"},children:["Table Of Contents",(0,r.jsx)(o.GS,{spacing:1,ml:"0",mt:"4",styleType:"none",children:null===(t=e.tableOfContents)||void 0===t?void 0:t.map((function(e){return(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"#".concat(e.id),children:e.text})},e.text)}))})]})},N=function(e){var t=a.useContext(g.Il).bannerExpanded,n="72px",i="calc(100vh - 88px - ".concat(t?n:"0px",")"),s="calc(100vh - 88px - 105px - ".concat(t?n:"0px",")");return(0,r.jsxs)(o.xu,{minH:"100vh",children:[(0,r.jsx)(y,{children:"Skip to Main Content"}),(0,r.jsxs)(o.kC,{flexDir:"column",padding:"2",children:[(0,r.jsx)(j._g,{}),(0,r.jsx)(o.iz,{}),(0,r.jsx)(o.kC,{children:(0,r.jsx)(o.xu,{as:"main",w:"100%",mx:"auto",children:(0,r.jsxs)(o.xu,{display:{md:"flex"},children:[(0,r.jsx)(o.xu,{display:{base:"none",md:"block"},overflow:"auto",maxH:i,pr:"8",ml:"4",children:(0,r.jsx)(j.Hy,{})}),(0,r.jsxs)(o.xu,{flex:"1",minW:"0",overflow:"auto",maxH:i,children:[(0,r.jsxs)(o.xu,{minH:s,children:[(0,r.jsx)(O,{}),e.children]}),(0,r.jsx)(o.xu,{pt:"20",children:(0,r.jsx)(j.$_,{})})]}),e.tableOfContents&&(0,r.jsx)(k,{tableOfContents:e.tableOfContents})]})})})]})]})};function w(e){return function(t){return(0,r.jsxs)(N,{children:[(0,r.jsx)(i.default,{children:(0,r.jsxs)("title",{children:["Player - ",e.title]})}),(0,r.jsx)(o.kC,{alignItems:"center",children:(0,r.jsx)(o.W2,{maxW:"container.lg",children:(0,r.jsx)(s.Zo,{components:l.tl,children:t.children})})})]})}}},29386:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return l}});n(2784);var r=n(30876),a=n(43857);function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o={},s=(0,a.Z)({title:"Content",tableOfContents:[{text:"Content",id:"content",level:1},{text:"Structure",id:"structure",level:2},{text:"Example",id:"example",level:2}]});function l(e){var t=e.components,n=i(e,["components"]);return(0,r.kt)(s,Object.assign({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",Object.assign({},{id:"content"}),(0,r.kt)("a",Object.assign({parentName:"h1"},{href:"#content"}),"Content")),(0,r.kt)("p",null,"Player is driven off of JSON content that describes the user interactions. It mainly consists of a state-machine, some views to drive display, data, and a schema. Player, once started with the JSON content, will ",(0,r.kt)("em",{parentName:"p"},"play")," the flow until it reaches a terminal state in the state-machine, and return the outcome, data, and other relevant information about the flow\u2019s execution."),(0,r.kt)("p",null,"The structure of the JSON payload is described below."),(0,r.kt)("h2",Object.assign({},{id:"structure"}),(0,r.kt)("a",Object.assign({parentName:"h2"},{href:"#structure"}),"Structure")),(0,r.kt)("p",null,"The high level JSON payload for Player to render consists of: ",(0,r.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"views"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"schema"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"navigation")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"id")," - (required) - A string that identifies the payload."),(0,r.kt)("p",null,(0,r.kt)("a",Object.assign({parentName:"p"},{href:"./data-expressions"}),(0,r.kt)("strong",{parentName:"a"},"data"))," - (optional) - A JSON object that contains data you can reference in the ",(0,r.kt)("inlineCode",{parentName:"p"},"navigation")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"views")," section."),(0,r.kt)("p",null,(0,r.kt)("a",Object.assign({parentName:"p"},{href:"./schema"}),(0,r.kt)("strong",{parentName:"a"},"schema"))," - (optional) - A schema that describes the structure of the ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," model, including default values, validation rules, etc."),(0,r.kt)("p",null,(0,r.kt)("a",Object.assign({parentName:"p"},{href:"./assets-views"}),(0,r.kt)("strong",{parentName:"a"},"views"))," - (optional) - The views section is an array of assets that are meant to display pages to the user. These can be referenced by ID in the navigation section, and can transition between states in the state machine. Assets are typically semantic in nature, as they are used to render content with dissimilar UIs depending on the context of the user."),(0,r.kt)("p",null,(0,r.kt)("a",Object.assign({parentName:"p"},{href:"./navigation"}),(0,r.kt)("strong",{parentName:"a"},"navigation"))," - (required) - The ",(0,r.kt)("inlineCode",{parentName:"p"},"navigation")," section describes a finite state machine that is responsible driving the core Player experience. The nodes can either be: ",(0,r.kt)("inlineCode",{parentName:"p"},"VIEW"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ACTION"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTERNAL"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"FLOW")),(0,r.kt)("h2",Object.assign({},{id:"example"}),(0,r.kt)("a",Object.assign({parentName:"h2"},{href:"#example"}),"Example")),(0,r.kt)("p",null,"Below is a minimal example of Player content that loads a view."),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "id": "example-flow",\n  "views": [\n    {\n      "id": "view-1",\n      "type": "text",\n      "value": "{{label}}"\n    }\n  ],\n  "data": {\n    "label": "Some Text"\n  },\n  "navigation": {\n    "BEGIN": "FLOW_1",\n    "FLOW_1": {\n      "startState": "VIEW_1",\n      "VIEW_1": {\n        "state_type": "VIEW",\n        "ref": "view-1",\n        "transitions": {}\n      }\n    }\n  }\n}\n')))}l.isMDXComponent=!0}},function(e){e.O(0,[6525,204,3795,9774,2888,179],(function(){return t=41016,e(e.s=t);var t}));var t=e.O();_N_E=t}]);