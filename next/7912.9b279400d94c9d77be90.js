"use strict";(self.webpackChunk_player_ui_docs=self.webpackChunk_player_ui_docs||[]).push([[7912],{83190:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>y});var a=n(52112);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,y=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return n?a.createElement(y,o(o({ref:t},c),{},{components:n})):a.createElement(y,o({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},57912:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});n(52112);var a=n(83190),r=n(4478);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},i.apply(this,arguments)}const o={},l=(0,r.A)({title:"XLR Concepts",tableOfContents:[{text:"XLR Definitions",id:"xlr-definitions",level:1},{text:"Capability",id:"capability",level:2},{text:"XLR Objects",id:"xlr-objects",level:2},{text:"XLR Nodes",id:"xlr-nodes",level:3},{text:"Named Types",id:"named-types",level:3},{text:"XLR SDK",id:"xlr-sdk",level:1},{text:"Transform Functions",id:"transform-functions",level:2}]});function s(e){let{components:t,...n}=e;return(0,a.yg)(l,i({},o,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"xlr-definitions"},(0,a.yg)("a",{parentName:"h1",href:"#xlr-definitions"},"XLR Definitions")),(0,a.yg)("p",null,"When talking about anything its helpful to make sure everyone is on the same page, XLR is no exception. In this section we’ll explore some concepts related to XLRs, how they work, and how they’re used. "),(0,a.yg)("h2",{id:"capability"},(0,a.yg)("a",{parentName:"h2",href:"#capability"},"Capability")),(0,a.yg)("p",null,"When we talk about a Capability, we are essentially talking about what it provides to Player. Most, if not all, capabilities are provided by Plugins. Capabilities are described in the manifest file in the ",(0,a.yg)("inlineCode",{parentName:"p"},"xlr")," folder of a distribution. The manifest file, provided as both a ",(0,a.yg)("inlineCode",{parentName:"p"},".json")," and a ",(0,a.yg)("inlineCode",{parentName:"p"},".js")," file for static or dynamic use, contains the mapping of capabilities to a list of the XLRs. "),(0,a.yg)("h2",{id:"xlr-objects"},(0,a.yg)("a",{parentName:"h2",href:"#xlr-objects"},"XLR Objects")),(0,a.yg)("p",null,"XLRs contain all of the information about a TypeScript type or interface. For an interface it will have the information on what parameters it has, the types of those parameters, and if those parameters are optional. For a type, it will similarly describe the properties/types that compose it. There is no distinction in XLR on whether the XLR came from a type or an interface as everything is just represented by a Node. "),(0,a.yg)("h3",{id:"xlr-nodes"},(0,a.yg)("a",{parentName:"h3",href:"#xlr-nodes"},"XLR Nodes")),(0,a.yg)("p",null,"XLR nodes are similar to TypeScripts internal AST nodes but a bit simpler. Almost every type/language feature you would use in TypeScript has an equivalent XLR node type. The definitions for these types are available in the ",(0,a.yg)("inlineCode",{parentName:"p"},"@player-tools/xlr")," ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/player-ui/tools/tree/main/xlr/types"},"package"),". "),(0,a.yg)("h3",{id:"named-types"},(0,a.yg)("a",{parentName:"h3",href:"#named-types"},"Named Types")),(0,a.yg)("p",null,"Named Types represent a top level interface/type and can be ",(0,a.yg)("em",{parentName:"p"},"any")," XLR Node. Named types are generated from interfaces/types that are exported from a source file or plugin. It should be noted that when generating a Named Type, all referenced types are also serialized and included in place in the Named Type and ",(0,a.yg)("em",{parentName:"p"},"not")," exported separately. That is unless The type is listed as a ",(0,a.yg)("em",{parentName:"p"},"Custom Primitive"),". A reason to do this would be if that type definition changes based on use case or platform. For example, in the Player ecosystem ",(0,a.yg)("inlineCode",{parentName:"p"},"Asset")," is considered a Custom Primitive because depending on the context, we might need to swap it out with a different type. "),(0,a.yg)("h1",{id:"xlr-sdk"},(0,a.yg)("a",{parentName:"h1",href:"#xlr-sdk"},"XLR SDK")),(0,a.yg)("p",null,"The XLR SDK is used to abstract away the more tedious interactions XLRs like loading them from their package, managing them when they’re loaded, and validating content against them. The SDK does include an simple object store so that it can be used out of the box, however if your use case requires some different logic it can be extended quite easily. In fact, ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/player-ui/tools/blob/main/language/service/src/xlr/registry.ts"},"we do that in the Player LSP"),"."),(0,a.yg)("h2",{id:"transform-functions"},(0,a.yg)("a",{parentName:"h2",href:"#transform-functions"},"Transform Functions")),(0,a.yg)("p",null,"Transform functions can be used to modify XLRs when they’re loaded and when they’re exported. There is no real limit to what you can do in a transform function but typical use cases are things like adding new properties to object and substituting type references with different ones. "),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.dev/player-ui/player/blob/main/docs/site/pages/xlr/concepts.mdx"},"Help to improve this page")))}s.isMDXComponent=!0},4478:(e,t,n)=>{n.d(t,{A:()=>N});var a=n(52112),r=n(95055),i=n(69724),o=n(83190),l=n(31021),s=n(4323),p=n(377),c=n(11716),d=n(34787),m=n(38484),u=n(52947),y=n(39325),f=n(13516),h="chakra-skip-nav";function g(e){return{userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",...e,_focus:{clip:"auto",width:"auto",height:"auto",...e._focus}}}var b=(0,d.R)((function(e,t){const n=(0,m.Vl)("SkipLink",e),{id:a=h,...r}=(0,u.MN)(e);return(0,f.jsx)(y.B.a,{...r,ref:t,href:`#${a}`,__css:g(n)})}));b.displayName="SkipNavLink";var x=(0,d.R)((function(e,t){const{id:n=h,...a}=e;return(0,f.jsx)(y.B.div,{ref:t,id:n,tabIndex:-1,style:{outline:0},...a})}));x.displayName="SkipNavContent";var v=n(11049),w=n(51856);const O=e=>a.createElement(s.az,{display:{base:"none",xl:"block"}},"Table Of Contents",a.createElement(p._J,{spacing:1,ml:"0",mt:"4",styleType:"none"},e.tableOfContents?.map((e=>a.createElement("li",{key:e.text},a.createElement("a",{href:`#${e.id}`},e.text)))))),E=e=>{const{bannerExpanded:t}=a.useContext(v.BR),n="72px",i=`calc(100vh - 88px - ${t?n:"0px"})`,o=`calc(100vh - 88px - 105px - ${t?n:"0px"})`;return a.createElement(s.az,{minH:"100vh"},a.createElement(b,null,"Skip to Main Content"),a.createElement(r.s,{flexDir:"column",padding:"2"},a.createElement(w.IS,null),a.createElement(c.c,null),a.createElement(r.s,null,a.createElement(s.az,{as:"main",w:"100%",mx:"auto"},a.createElement(s.az,{display:{md:"flex"}},a.createElement(s.az,{display:{base:"none",md:"block"},overflow:"auto",maxH:i,pr:"8",ml:"4"},a.createElement(w.E1,null)),a.createElement(s.az,{flex:"1",minW:"0",overflow:"auto",maxH:i},a.createElement(s.az,{minH:o},a.createElement(x,null),e.children),a.createElement(s.az,{pt:"20"},a.createElement(w.wi,null))),e.tableOfContents&&a.createElement(O,{tableOfContents:e.tableOfContents}))))))};function N(e){return e=>a.createElement(E,null,a.createElement(r.s,{alignItems:"center"},a.createElement(i.m,{maxW:"container.lg"},a.createElement(o.xA,{components:l.Ul},e.children))))}}}]);
//# sourceMappingURL=7912.9b279400d94c9d77be90.js.map