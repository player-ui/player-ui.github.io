{"version":3,"file":"7025.1c8e66dd87c1882f1041.js","mappings":"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","sources":["webpack://@player-ui/docs/./components/ColorSchemeSwitch.tsx","webpack://@player-ui/docs/./components/Image.tsx","webpack://@player-ui/docs/./components/AlgoliaSearch.tsx","webpack://@player-ui/docs/./components/Search.tsx","webpack://@player-ui/docs/./components/gh-icon.tsx","webpack://@player-ui/docs/./components/SiteBanner.tsx","webpack://@player-ui/docs/./components/Navigation.tsx","webpack://@player-ui/docs/./config/constants.ts","webpack://@player-ui/docs/./components/code-highlight/prism-colors.ts","webpack://@player-ui/docs/./components/code-highlight/index.tsx","webpack://@player-ui/docs/./components/PlayerTeam.tsx","webpack://@player-ui/docs/./components/mdx-components.tsx"],"sourcesContent":["import React from 'react';\nimport { IconButton, useColorMode, useColorModeValue } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorSchemeSwitch = () => {\n  const { toggleColorMode } = useColorMode();\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  const text = useColorModeValue('dark', 'light');\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      ml={{ base: '0', md: '3' }}\n      icon={<SwitchIcon />}\n      onClick={toggleColorMode}\n    />\n  );\n};\n","// import path from \"path-browserify\";\n\nexport function withBasePrefix(location?: string): string | undefined {\n  if (!location) {\n    return location;\n  }\n\n  // if (process.env.NEXT_PUBLIC_BASE_PATH) {\n  //   return path.join(process.env.NEXT_PUBLIC_BASE_PATH, location);\n  // }\n\n  return location;\n}\n","/* eslint-disable import/no-unassigned-import */\nimport React from 'react';\nimport { DocSearch } from '@docsearch/react';\n\nimport '@docsearch/css';\n\nexport const AlgoliaSearch = () => {\n  return (\n    <DocSearch\n      appId=\"OX3UZKXCOH\"\n      apiKey=\"{STABLE_ALGOLIA_SEARCH_API_KEY}\" // readonly specific to search queries\n      indexName=\"player-ui\"\n    />\n  );\n};\n","import React from \"react\";\nimport {\n  Input,\n  Box,\n  Popover,\n  PopoverContent,\n  PopoverAnchor,\n  Button,\n  chakra,\n  Heading,\n  Text,\n  InputGroup,\n  useOutsideClick,\n  UnorderedList,\n  InputLeftElement,\n  HStack,\n} from \"@chakra-ui/react\";\nimport { SearchIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport lunr from \"lunr\";\nimport { AlgoliaSearch } from \"./AlgoliaSearch\";\n\ninterface SearchIndex {\n  /** The title of the page */\n  title: string;\n\n  /** The closest heading */\n  header: string;\n\n  /** the route to the page */\n  path: string;\n\n  /** The raw content */\n  // eslint-disable-next-line react/no-unused-prop-types\n  content: string;\n}\n\nconst createSearchIndex = async () => {\n  const searchIndex = (await import(\n    \"../config/search-index.json\"\n  )) as unknown as {\n    default: Record<string, SearchIndex>;\n  };\n\n  const idx = lunr((builder) => {\n    builder.ref(\"path\");\n    builder.field(\"title\");\n    builder.field(\"header\");\n    builder.field(\"content\");\n\n    Object.values(searchIndex.default).forEach((page) => {\n      builder.add(page);\n    });\n  });\n\n  return {\n    searchIndex: searchIndex.default,\n    idx,\n  };\n};\n\nconst useSearch = () => {\n  const index = React.useMemo(() => createSearchIndex(), []);\n  const [results, setResults] = React.useState<SearchIndex[]>([]);\n\n  return {\n    search: async (query: string) => {\n      if (query === \"\") {\n        setResults([]);\n      } else {\n        const searchIndex = await index;\n        const searchResults = searchIndex.idx\n          .search(query)\n          .slice(0, 10)\n          .map((r) => {\n            return searchIndex.searchIndex[r.ref];\n          })\n          .filter((e) => e !== undefined);\n\n        setResults(searchResults);\n      }\n    },\n    clear: () => {\n      setResults([]);\n    },\n    results,\n  };\n};\n\nconst SearchResult = (props: SearchIndex) => {\n  return (\n    <chakra.li overflow=\"hidden\">\n      <Link to={props.path}>\n        <Button as=\"a\" variant=\"link\" colorScheme=\"blue\">\n          <HStack gap=\"2px\" divider={<ChevronRightIcon border=\"none\" />}>\n            <Heading as=\"h4\" size=\"sm\">\n              {props.title}\n            </Heading>\n            {props.header && <Text>{props.header}</Text>}\n          </HStack>\n        </Button>\n      </Link>\n    </chakra.li>\n  );\n};\n\nexport const FallbackSearchInput = (): React.JSX.Element => {\n  const { search, results, clear } = useSearch();\n  const [searchActive, setSearchActive] = React.useState(false);\n  const [query, setQuery] = React.useState(\"\");\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const searchRef = React.useRef<HTMLDivElement>(null);\n\n  const reset = React.useCallback(() => {\n    clear();\n    setQuery(\"\");\n    setSearchActive(false);\n  }, [clear, setQuery, setSearchActive]);\n\n  useOutsideClick({\n    ref: searchRef,\n    handler: reset,\n  });\n\n  return (\n    <Box ref={searchRef}>\n      <Popover initialFocusRef={inputRef} isOpen={searchActive} onClose={reset}>\n        <PopoverAnchor>\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <SearchIcon />\n            </InputLeftElement>\n            <Input\n              ref={inputRef}\n              placeholder=\"Search\"\n              value={query}\n              onChange={(e) => {\n                if (searchActive) {\n                  search(e.target.value);\n                }\n\n                setQuery(e.target.value);\n              }}\n              onFocus={() => {\n                setSearchActive(true);\n              }}\n            />\n          </InputGroup>\n        </PopoverAnchor>\n        {searchActive && results.length > 0 && (\n          <PopoverContent width=\"md\">\n            <Box p=\"4\">\n              <UnorderedList spacing=\"4\" styleType=\"none\" ml=\"0\">\n                {results.map((r) => (\n                  <SearchResult key={r.path} {...r} />\n                ))}\n              </UnorderedList>\n            </Box>\n          </PopoverContent>\n        )}\n      </Popover>\n    </Box>\n  );\n};\n\nexport const SearchInput = (): React.JSX.Element => {\n  // Only use algolia search if we're on the /latest/ version\n  // it's the only one that's indexed\n  if (\n    typeof window !== \"undefined\" &&\n    window.location.pathname.includes(\"/latest/\")\n  ) {\n    return <AlgoliaSearch />;\n  }\n\n  return <FallbackSearchInput />;\n};\n","import React from 'react';\n\n// https://github.com/chakra-ui/chakra-ui-docs/blob/main/src/components/header.tsx\nexport const GithubIcon = React.forwardRef<SVGSVGElement>(\n  (props: React.ComponentProps<'svg'>, ref) => (\n    <svg ref={ref} viewBox=\"0 0 20 20\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10 0a10 10 0 0 0-3.16 19.49c.5.1.68-.22.68-.48l-.01-1.7c-2.78.6-3.37-1.34-3.37-1.34-.46-1.16-1.11-1.47-1.11-1.47-.9-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.9 1.52 2.34 1.08 2.91.83.1-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.94 0-1.1.39-1.99 1.03-2.69a3.6 3.6 0 0 1 .1-2.64s.84-.27 2.75 1.02a9.58 9.58 0 0 1 5 0c1.91-1.3 2.75-1.02 2.75-1.02.55 1.37.2 2.4.1 2.64.64.7 1.03 1.6 1.03 2.69 0 3.84-2.34 4.68-4.57 4.93.36.31.68.92.68 1.85l-.01 2.75c0 .26.18.58.69.48A10 10 0 0 0 10 0\"\n      />\n    </svg>\n  )\n);\n","import React from 'react';\nimport { Alert, AlertIcon, Box, CloseButton } from '@chakra-ui/react';\nimport { AppContext } from './Context';\n\nexport const WarningBanner = (props: React.PropsWithChildren<unknown>) => {\n  const { bannerExpanded, setBannerExpanded } = React.useContext(AppContext);\n\n  if (!bannerExpanded) {\n    return null;\n  }\n\n  return (\n    <Alert status=\"warning\">\n      <AlertIcon />\n      <Box flex={1}>{props.children}</Box>\n      <CloseButton\n        justifySelf=\"flex-end\"\n        onClick={() => {\n          setBannerExpanded(false);\n        }}\n      />\n    </Alert>\n  );\n};\n","import React from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  Flex,\n  Image,\n  Button,\n  Box,\n  HStack,\n  useColorModeValue,\n  Icon,\n  Link as CLink,\n  IconButton,\n  chakra,\n  Drawer,\n  Heading,\n  Text,\n  UnorderedList,\n  useDisclosure,\n  useBreakpointValue,\n  DrawerContent,\n  AlertTitle,\n  AlertDescription,\n  Select,\n} from \"@chakra-ui/react\";\nimport { FaReact, FaApple, FaAndroid, FaPuzzlePiece } from \"react-icons/fa\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport type { Route } from \"../config/navigation\";\nimport NAV, { PATH_TO_NAV, Platform } from \"../config/navigation\";\nimport { ColorSchemeSwitch } from \"./ColorSchemeSwitch\";\nimport { DOCS_BASE_URL, GITHUB_URL } from \"../config/constants\";\nimport { withBasePrefix } from \"./Image\";\nimport { SearchInput } from \"./Search\";\nimport { GithubIcon } from \"./gh-icon\";\nimport { WarningBanner } from \"./SiteBanner\";\n\nconst getPathFromRoute = (route: Route): string => {\n  if (route.path) {\n    return route.path;\n  }\n\n  if (route.routes) {\n    for (const r of route.routes) {\n      const nestedRoute = getPathFromRoute(r);\n      if (nestedRoute) {\n        return nestedRoute;\n      }\n    }\n  }\n\n  return \"\";\n};\n\nconst PlatformIcon = (props: any) => {\n  if (props.platform === Platform.core) {\n    return <FaPuzzlePiece />;\n  }\n  if (props.platform === Platform.react) {\n    return <FaReact />;\n  }\n  if (props.platform === Platform.ios) {\n    return <FaApple />;\n  }\n  if (props.platform === Platform.android) {\n    return <FaAndroid />;\n  }\n  return <div />;\n};\n\nconst NavTitleOrLink = (props: { route: Route }) => {\n  const { route } = props;\n  const { pathname, search } = useLocation();\n  const selectedButtonColor = useColorModeValue(\"blue.800\", \"blue.600\");\n\n  if (route.path) {\n    return (\n      <Button\n        as={Link}\n        size=\"sm\"\n        variant=\"ghost\"\n        mx=\"3\"\n        colorScheme={pathname === route.path ? \"blue\" : \"gray\"}\n        to={{\n          pathname: route.path,\n          search,\n        }}\n        color={pathname === route.path ? selectedButtonColor : undefined}\n      >\n        <HStack spacing=\"2\">\n          <Text>{route.title}</Text>\n          {route.metaData?.platform?.map((p) => (\n            <PlatformIcon key={p} platform={p} />\n          ))}\n        </HStack>\n      </Button>\n    );\n  }\n\n  return (\n    <Heading as=\"h4\" size=\"md\" mt=\"8\">\n      {route.title}\n    </Heading>\n  );\n};\n\nconst SideNavigationList = (props: { route: Route }) => {\n  const { route } = props;\n\n  return (\n    <Box>\n      <NavTitleOrLink route={route} />\n\n      {route.routes && (\n        <UnorderedList spacing={1} ml=\"0\" mt=\"2\" styleType=\"none\">\n          {route.routes.map((r) => (\n            <SideNavigationList key={r.title} route={r} />\n          ))}\n        </UnorderedList>\n      )}\n    </Box>\n  );\n};\n\nexport const SideNavigation = () => {\n  const { pathname } = useLocation();\n  const subRoutes = PATH_TO_NAV.get(pathname);\n\n  const route = NAV.routes.find((r) => r.title === subRoutes?.[0]);\n\n  if (!route) {\n    return null;\n  }\n\n  return (\n    <Box as=\"nav\">\n      <SideNavigationList route={route} />\n    </Box>\n  );\n};\n\nexport const Footer = () => {\n  return null;\n};\n\nexport const GitHubButton = () => {\n  return (\n    <Link aria-label=\"Go to our GitHub page\" to={GITHUB_URL}>\n      <IconButton\n        variant=\"ghost\"\n        aria-label=\"Go to our Github page\"\n        icon={\n          <Icon\n            as={GithubIcon}\n            display=\"block\"\n            transition=\"color 0.2s\"\n            w=\"5\"\n            h=\"5\"\n          />\n        }\n      />\n    </Link>\n  );\n};\n\nconst useGetReleasedVersions = () => {\n  const [releasedVersions, setReleasedVersions] = React.useState<\n    {\n      label: string;\n      path: string;\n    }[]\n  >([]);\n\n  React.useEffect(() => {\n    const send = async () => {\n      const response = await fetch(\n        \"https://api.github.com/repos/player-ui/player-ui.github.io/contents/\",\n      );\n\n      const data = await response.json();\n      const versions = data\n        .filter((d: any) => d.type === \"dir\" && d.name.match(/^v\\d/))\n        .map((d: any) => ({\n          label: d.name,\n          path: d.name,\n        }));\n\n      setReleasedVersions(versions);\n    };\n\n    send().catch(() => {});\n  }, []);\n\n  return releasedVersions;\n};\n\nexport const VersionSelector = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const released = useGetReleasedVersions();\n\n  return (\n    <Select\n      aria-label=\"Select the version of the Player docs you with to see\"\n      variant=\"unstyled\"\n      rootProps={{\n        width: \"auto\",\n        display: \"flex\",\n        flexShrink: \"0\",\n      }}\n      value={location.pathname || \"/latest\"}\n      onChange={(e) => {\n        navigate(`${DOCS_BASE_URL}/${e.target.value}`);\n      }}\n    >\n      <option value=\"latest\">Latest</option>\n      <option value=\"next\">Next</option>\n      {released.map((r) => (\n        <option key={r.label} value={r.path}>\n          {r.label}\n        </option>\n      ))}\n    </Select>\n  );\n};\n\nexport const TopNavigation = () => {\n  const { pathname, search } = useLocation();\n  const subRoutes = PATH_TO_NAV.get(pathname);\n  const mobileNavDisclosure = useDisclosure();\n\n  const currentTopLevelRoute = NAV.routes.find(\n    (r) => r.title === subRoutes?.[0],\n  );\n\n  const logoSrc = useBreakpointValue({\n    base: useColorModeValue(\n      withBasePrefix(\"/logo/logo-light-small.png\"),\n      withBasePrefix(\"/logo/logo-dark-small.png\"),\n    ),\n    lg: useColorModeValue(\n      withBasePrefix(\"/logo/logo-light-large.png\"),\n      withBasePrefix(\"/logo/logo-dark-large.png\"),\n    ),\n  });\n\n  const selectedButtonColor = useColorModeValue(\"blue.800\", \"blue.600\");\n\n  return (\n    <Flex w=\"100%\" h=\"100%\" direction=\"column\" align=\"center\">\n      <Flex px=\"6\" w=\"100%\" h=\"100%\" align=\"center\" justify=\"space-between\">\n        <HStack>\n          <IconButton\n            variant=\"ghost\"\n            icon={<HamburgerIcon />}\n            display={{ base: \"flex\", md: \"none\" }}\n            aria-label=\"Open Side Navigation Menu\"\n            onClick={mobileNavDisclosure.onOpen}\n          />\n          <CLink\n            as={Link}\n            to=\"/\"\n            display={{\n              base: \"none\",\n              md: \"block\",\n            }}\n            py=\"2\"\n          >\n            <Image alt=\"Player Logo\" height=\"48px\" src={logoSrc} />\n          </CLink>\n        </HStack>\n\n        <Box>\n          <HStack spacing=\"4\">\n            <Box display={{ base: \"none\", lg: \"block\" }}>\n              <SearchInput />\n            </Box>\n            {NAV.routes.map((topRoute) => {\n              const navRoute = getPathFromRoute(topRoute);\n              const isSelected = currentTopLevelRoute?.title === topRoute.title;\n\n              return (\n                <Button\n                  as={Link}\n                  key={topRoute.title}\n                  to={{\n                    pathname: navRoute,\n                    search,\n                  }}\n                  variant=\"ghost\"\n                  colorScheme={isSelected ? \"blue\" : \"gray\"}\n                  color={isSelected ? selectedButtonColor : undefined}\n                  size=\"md\"\n                  ml=\"0\"\n                >\n                  {topRoute.title}\n                </Button>\n              );\n            })}\n            <VersionSelector />\n            <ColorSchemeSwitch />\n            <GitHubButton />\n          </HStack>\n        </Box>\n        <Drawer\n          isOpen={mobileNavDisclosure.isOpen}\n          placement=\"left\"\n          onOverlayClick={mobileNavDisclosure.onClose}\n          onClose={mobileNavDisclosure.onClose}\n        >\n          <DrawerContent>\n            <Box px=\"10\" maxH=\"100vh\" overflowY=\"auto\">\n              <SideNavigation />\n            </Box>\n          </DrawerContent>\n        </Drawer>\n      </Flex>\n      <WarningBanner>\n        <AlertTitle>\n          Player and its documentation are still in early development.\n        </AlertTitle>\n        <AlertDescription>\n          If you find any issues, please report them to us on{\" \"}\n          <CLink\n            color={useColorModeValue(\"blue.800\", \"blue.600\")}\n            href=\"https://github.com/player-ui/player/issues\"\n          >\n            GitHub\n          </CLink>\n          .\n        </AlertDescription>\n      </WarningBanner>\n    </Flex>\n  );\n};\n","export const GITHUB_URL = 'https://github.com/player-ui/player';\nexport const DOCS_BASE_URL = 'https://player-ui.github.io/';\n","import {\n  coy,\n  vscDarkPlus,\n} from 'react-syntax-highlighter/dist/cjs/styles/prism';\n\nexport const light = {\n  ...coy,\n  pre: {\n    margin: '.5em 0',\n  },\n  'pre[class*=\"language-\"]': {\n    fontSize: '13px',\n    textShadow: 'none',\n    fontFamily:\n      'Menlo, Monaco, Consolas, \"Andale Mono\", \"Ubuntu Mono\", \"Courier New\", monospace',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    lineHeight: '1.5',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n    padding: '1em',\n    margin: '.5em 0',\n    overflow: 'auto',\n  },\n  'code[class*=\"language-\"]': {\n    fontSize: '13px',\n    textShadow: 'none',\n    fontFamily:\n      'Menlo, Monaco, Consolas, \"Andale Mono\", \"Ubuntu Mono\", \"Courier New\", monospace',\n    direction: 'ltr',\n    textAlign: 'left',\n    whiteSpace: 'pre',\n    wordSpacing: 'normal',\n    wordBreak: 'normal',\n    lineHeight: '1.5',\n    MozTabSize: '4',\n    OTabSize: '4',\n    tabSize: '4',\n    WebkitHyphens: 'none',\n    MozHyphens: 'none',\n    msHyphens: 'none',\n    hyphens: 'none',\n  },\n};\n\nexport const dark = {\n  ...vscDarkPlus,\n};\n","import React from \"react\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\nimport {\n  Prism as SyntaxHighlighter,\n  SyntaxHighlighterProps,\n} from \"react-syntax-highlighter\";\n\nimport { light, dark } from \"./prism-colors\";\n\nexport const useCodeStyle = () => {\n  const style = useColorModeValue(light, dark);\n\n  return style;\n};\n\nexport const CodeHighlight = (props: SyntaxHighlighterProps) => {\n  const borderColor = useColorModeValue(\"gray.100\", \"gray.800\");\n\n  return (\n    <Box borderWidth=\"1px\" borderColor={borderColor} borderRadius=\"base\" my=\"4\">\n      <SyntaxHighlighter\n        wrapLongLines\n        style={useCodeStyle() as any}\n        {...props}\n        customStyle={{\n          margin: 0,\n        }}\n      />\n    </Box>\n  );\n};\n","import React from 'react';\nimport { Avatar, SimpleGrid, VStack, Text } from '@chakra-ui/react';\nimport teamdata from '../config/team.json';\n\n/**\n * Individual Profile card with avatar, name and domain vertically stacked\n */\nconst ProfileCard = (props: any) => {\n  return (\n    <VStack>\n      <Avatar size=\"2xl\" name={props.profile.name} src={props.profile.avatar} />\n      <Text fontSize=\"lg\">{props.profile.name}</Text>\n      <Text fontSize=\"md\">{props.profile.domain.join(', ')}</Text>\n    </VStack>\n  );\n};\n\n/**\n * Component to render Player Team cards\n */\nexport const PlayerTeam = () => {\n  return (\n    <SimpleGrid columns={[2, null, 3]} spacing=\"40px\">\n      {teamdata\n        .sort(() => 0.5 - Math.random())\n        .map((element) => {\n          return <ProfileCard key={element.name} profile={element} />;\n        })}\n    </SimpleGrid>\n  );\n};\n","import React from \"react\";\nimport {\n  Alert as ChakraAlert,\n  AlertStatus,\n  Heading,\n  Text,\n  UnorderedList,\n  OrderedList,\n  ListItem,\n  Code as ChakraCode,\n  useColorMode,\n  useColorModeValue,\n  Tabs as ChakraTabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Progress,\n  Image,\n  HStack,\n  Table,\n  Th,\n  Tr,\n  Td,\n  Link as CLink,\n  AlertIcon,\n  Box,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/react\";\nimport { MDXProviderComponents } from \"@mdx-js/react\";\nimport { useNavigate } from \"react-router\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { CodeHighlight } from \"./code-highlight\";\nimport { withBasePrefix } from \"./Image\";\nimport { PlayerTeam } from \"./PlayerTeam\";\n\n/**\n * Generic Tab Component that extends Chakra's Tab\n */\nconst GenericTab = (props: any) => {\n  const name = props.nameMap?.get(props.mdxType.toLowerCase()) ?? props.mdxType;\n  return <Tab key={props.mdxType}>{name}</Tab>;\n};\n\n/**\n * Tab Component specifically for Gradle to handle its multiple languages\n */\nconst GradleTab = (props: any) => {\n  const scriptLang = props.language;\n  return <Tab key={`gradle-${scriptLang}`}>{`Gradle ${scriptLang}`}</Tab>;\n};\n\nconst CodeTabsNameMap = new Map([\n  [\"core\", \"Core\"],\n  [\"react\", \"React\"],\n  [\"ios\", \"iOS\"],\n  [\"android\", \"Android\"],\n]);\n\nconst ContentTabsNameMap = new Map([\n  ['json', 'JSON'],\n  ['tsx', 'TSX'],\n]);\n\nconst CodeTabsMap = new Map([['gradle', GradleTab]]);\n\n/**\n * Generic wrapper around Chakra's tab to make use in mdx easier.\n */\nconst Tabs = (props: any) => {\n  return (\n    <ChakraTabs\n      colorScheme=\"blue\"\n      index={props.defaultTab}\n      onChange={(index) => props.callback?.(index)}\n    >\n      <TabList>\n        {React.Children.map(props.children, (child: any) => {\n          const TabComponent =\n            CodeTabsMap.get(child.props.mdxType.toLowerCase()) ?? GenericTab;\n          return (\n            <TabComponent\n              key={child.props.mdxType}\n              nameMap={props.nameMap}\n              {...child.props}\n            />\n          );\n        })}\n      </TabList>\n      <TabPanels>\n        {React.Children.map(props.children, (child: any) => {\n          return (\n            <TabPanel key={child.props.mdxType}>\n              {child.props.children}\n            </TabPanel>\n          );\n        })}\n      </TabPanels>\n    </ChakraTabs>\n  );\n};\n\n/**\n * Tabs specifically for plugin docs that only allow certain tabs\n */\nconst PlatformTabs = (props: React.PropsWithChildren<unknown>) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const children = React.Children.toArray(props.children).filter((c: any) =>\n    CodeTabsNameMap.has(c.props.mdxType.toLowerCase()),\n  );\n\n  const langPrefIndex = children.findIndex(\n    (c: any) => c.props.mdxType.toLowerCase() === searchParams.get(\"lang\"),\n  );\n\n  const defaultTab = Math.max(langPrefIndex, 0);\n\n  return (\n    <Tabs\n      defaultTab={defaultTab}\n      nameMap={CodeTabsNameMap}\n      callback={(tabIndex: number) => {\n        const lang = (children[tabIndex] as any).props.mdxType.toLowerCase();\n\n        setSearchParams(\n          Object.fromEntries([...searchParams.entries(), [\"lang\", lang]]),\n        );\n      }}\n    >\n      {children}\n    </Tabs>\n  );\n};\n\n/**\n * Tab section for Content Authoring. This should include tsx and/or example JSON files.\n */\nconst ContentTabs = (props: React.PropsWithChildren<unknown>) => {\n  const children = React.Children.toArray(props.children).filter((c: any) => {\n    return ContentTabsNameMap.has(c.props.mdxType.toLowerCase());\n  });\n\n  return <Tabs nameMap={ContentTabsNameMap}>{children}</Tabs>;\n};\n\nconst langMap: Record<string, string> = {\n  js: \"javascript\",\n  ts: \"typescript\",\n};\n\n/**\n * Code Block comopnent\n */\nconst Code = (props: any) => {\n  let lang = props.className?.split(\"-\")[1];\n  if (langMap[lang] !== undefined) {\n    lang = langMap[lang];\n  }\n\n  return (\n    <CodeHighlight language={lang} {...props}>\n      {props.children.trim()}\n    </CodeHighlight>\n  );\n};\n\n/**\n * Image Component\n */\nexport const Img = (props: JSX.IntrinsicElements[\"img\"]) => {\n  const darkModeInvert = props.src?.includes(\"darkModeInvert\");\n  const darkModeOnly = props.src?.includes(\"darkModeOnly\");\n  const lightModeOnly = props.src?.includes(\"lightModeOnly\");\n\n  const { colorMode } = useColorMode();\n\n  const filterStyles = useColorModeValue(\n    undefined,\n    \"invert(80%) hue-rotate(180deg);\",\n  );\n\n  if (\n    (colorMode === \"light\" && darkModeOnly) ||\n    (colorMode === \"dark\" && lightModeOnly)\n  ) {\n    return null;\n  }\n\n  return (\n    <HStack justifyContent=\"center\">\n      <Image\n        {...props}\n        src={withBasePrefix(props.src)}\n        filter={darkModeInvert ? filterStyles : undefined}\n      />\n    </HStack>\n  );\n};\n\n/**\n * Normalize URL to conform to local path rules\n */\nexport const useNormalizedUrl = (url: string) => {\n  return url;\n\n  // const router = useRouter();\n\n  // if (!url.startsWith(\".\")) {\n  //   return url;\n  // }\n\n  // const ext = path.extname(url);\n  // let withoutExt = url;\n  // if (ext) {\n  //   withoutExt = path.join(path.dirname(url), path.basename(url, ext));\n  // }\n\n  // return path.join(path.dirname(router.pathname), withoutExt);\n};\n\nexport const InlineCode = (props: JSX.IntrinsicElements[\"code\"]) => {\n  return (\n    <ChakraCode\n      colorScheme=\"gray\"\n      bg={useColorModeValue(\"blue.50\", \"gray.800\")}\n      {...props}\n    />\n  );\n};\n\ntype ChakraAlertProps = React.PropsWithChildren<{\n  status?: AlertStatus;\n  title?: string;\n  description?: string;\n}>\n\nexport const Alert = (props: ChakraAlertProps) => {\n  return (\n      <ChakraAlert status={props.status} variant='left-accent'>\n        <AlertIcon />\n        <Box flex={1}>\n          {props.title && <AlertTitle>{props.title}</AlertTitle>}\n          {props.description && <AlertDescription>{props.description}</AlertDescription>}\n          {props.children}\n        </Box>\n      </ChakraAlert>\n  );\n};\n\n\n/**\n * Anchor tab component wrapping Chakra's\n */\nconst A = (props: JSX.IntrinsicElements[\"a\"]) => {\n  const { href, ...other } = props;\n  return (\n    <CLink\n      as={Link}\n      to={useNormalizedUrl(href || \"\")}\n      color={useColorModeValue(\"blue.800\", \"blue.600\")}\n      {...other}\n    />\n  );\n};\n\nexport const MDXComponents: MDXProviderComponents = {\n  h1: (props: any) => <Heading my=\"1.5rem\" as=\"h1\" size=\"xl\" {...props} />,\n  h2: (props: any) => <Heading my=\"1.5rem\" as=\"h2\" size=\"lg\" {...props} />,\n  h3: (props: any) => <Heading my=\"1.5rem\" as=\"h3\" size=\"md\" {...props} />,\n  h4: (props: any) => <Heading my=\"1.5rem\" as=\"h4\" size=\"sm\" {...props} />,\n\n  p: (props: any) => <Text as=\"div\" my=\"1.5rem\" {...props} />,\n  ul: UnorderedList,\n  ol: OrderedList,\n  li: ListItem,\n  img: Img,\n  code: Code,\n\n  a: A,\n\n  Tabs,\n\n  PlayerTeam,\n\n  PlatformTabs,\n\n  ContentTabs,\n\n  table: Table,\n  th: Th,\n  tr: Tr,\n  td: Td,\n\n  inlineCode: InlineCode,\n\n  Alert,\n  AlertTitle,\n  AlertDescription,\n};\n"],"names":["ColorSchemeSwitch","toggleColorMode","SwitchIcon","text","size","fontSize","variant","color","ml","base","md","icon","onClick","withBasePrefix","location","AlgoliaSearch","DocSearch","appId","apiKey","indexName","useSearch","index","async","searchIndex","idx","builder","ref","field","Object","values","default","forEach","page","add","createSearchIndex","results","setResults","search","query","searchResults","slice","map","r","filter","e","undefined","clear","SearchResult","props","li","overflow","to","path","as","colorScheme","gap","divider","border","title","header","FallbackSearchInput","searchActive","setSearchActive","setQuery","inputRef","searchRef","reset","handler","initialFocusRef","isOpen","onClose","pointerEvents","placeholder","value","onChange","target","onFocus","length","width","p","spacing","styleType","key","SearchInput","window","pathname","includes","GithubIcon","viewBox","fill","d","WarningBanner","bannerExpanded","setBannerExpanded","status","flex","children","justifySelf","getPathFromRoute","route","routes","nestedRoute","PlatformIcon","platform","NavTitleOrLink","selectedButtonColor","mx","metaData","mt","SideNavigationList","SideNavigation","subRoutes","get","find","Footer","GitHubButton","I","display","transition","w","h","VersionSelector","navigate","released","releasedVersions","setReleasedVersions","response","fetch","versions","json","type","name","match","label","send","catch","useGetReleasedVersions","rootProps","flexShrink","TopNavigation","mobileNavDisclosure","currentTopLevelRoute","logoSrc","lg","direction","align","px","justify","onOpen","py","alt","height","src","topRoute","navRoute","isSelected","placement","onOverlayClick","maxH","overflowY","href","light","pre","margin","textShadow","fontFamily","textAlign","whiteSpace","wordSpacing","wordBreak","lineHeight","MozTabSize","OTabSize","tabSize","WebkitHyphens","MozHyphens","msHyphens","hyphens","padding","dark","CodeHighlight","borderColor","borderWidth","borderRadius","my","wrapLongLines","style","customStyle","ProfileCard","profile","avatar","domain","join","GenericTab","nameMap","mdxType","toLowerCase","CodeTabsNameMap","Map","ContentTabsNameMap","CodeTabsMap","scriptLang","language","Tabs","defaultTab","callback","child","TabComponent","T","langMap","js","ts","Img","darkModeInvert","darkModeOnly","lightModeOnly","colorMode","filterStyles","justifyContent","MDXComponents","h1","h2","h3","h4","ul","ol","img","code","lang","className","split","trim","a","other","PlayerTeam","columns","sort","Math","random","element","PlatformTabs","searchParams","setSearchParams","toArray","c","has","langPrefIndex","findIndex","max","tabIndex","fromEntries","entries","ContentTabs","table","th","Th","tr","Tr","td","Td","inlineCode","C","bg","Alert","description","AlertTitle","AlertDescription"],"sourceRoot":""}