{"version":3,"file":"925.71da147a26981b580f3e.js","mappings":"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","sources":["webpack://@player-ui/docs/../../node_modules/.aspect_rules_js/@mdx-js+react@1.6.22_react_18.3.1/node_modules/@mdx-js/react/dist/esm.js","webpack://@player-ui/docs/./pages/plugins/async-node.mdx","webpack://@player-ui/docs/../../node_modules/.aspect_rules_js/@chakra-ui+skip-nav@2.1.0_1916995689/node_modules/@chakra-ui/skip-nav/dist/chunk-IZODFAGU.mjs","webpack://@player-ui/docs/./components/Page.tsx","webpack://@player-ui/docs/./components/Layout/MDXPageLayout.tsx"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport withLayout from '../../components/Layout/MDXPageLayout';\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst PlatformTabs = makeShortcode(\"PlatformTabs\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = withLayout({\"title\":\"AsyncNode Plugin\",\"platform\":\"core,react,ios,android\",\"tableOfContents\":[{\"text\":\"Async Node Plugin\",\"id\":\"async-node-plugin\",\"level\":1},{\"text\":\"Continuous Streaming\",\"id\":\"continuous-streaming\",\"level\":3},{\"text\":\"Usage\",\"id\":\"usage\",\"level\":2},{\"text\":\"CocoaPods\",\"id\":\"cocoapods\",\"level\":3},{\"text\":\"Swift Usage\",\"id\":\"swift-usage\",\"level\":3}]})\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"async-node-plugin\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#async-node-plugin\"\n      }}>{`Async Node Plugin`}</a></h1>\n    <p>{`The AsyncNode Plugin is used to enable streaming additional content into a flow that has already been loaded and rendered.`}<br parentName=\"p\"></br>{`\n`}{`A common use case for this plugin is conversational UI, as the users input more dialogue, new content must be streamed into Player in order to keep the UI up to date.`}</p>\n    <p>{`The pillar that makes this possible is the concept of an `}<inlineCode parentName=\"p\">{`AsyncNode`}</inlineCode>{`. An `}<inlineCode parentName=\"p\">{`AsyncNode`}</inlineCode>{` is any tree node with the property `}<inlineCode parentName=\"p\">{`async: true`}</inlineCode>{`, it represents a placeholder node that will be replaced by a concrete node in the future.`}</p>\n    <p>{`In the example below, node with the id “some-async-node” will not be rendered on first render, but will be replaced with a UI asset node at a later time:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"id\": \"flow-1\",\n    \"views\": [\n      {\n        \"id\": 'action',\n        \"actions\": [\n          {\n            \"id\": \"some-async-node\",\n            \"async\": true,\n          },\n        ],\n      },\n    ],\n  ...\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AsyncNodePlugin`}</inlineCode>{` exposes an `}<inlineCode parentName=\"p\">{`onAsyncNode`}</inlineCode>{` hook on all platforms. The `}<inlineCode parentName=\"p\">{`onAsyncNode`}</inlineCode>{` hook will be invoked with the current node when the plugin is available and an `}<inlineCode parentName=\"p\">{`AsyncNode`}</inlineCode>{` is detected during the resolve process. The node used to call the hook with could contain metadata according to content spec.`}</p>\n    <p>{`User should tap into the `}<inlineCode parentName=\"p\">{`onAsyncNode`}</inlineCode>{` hook to examine the node’s metadata before making a decision on what to replace the async node with. The return could be a single asset node or an array of asset nodes, or the return could be even a null|undefined if the async node is no longer relevant.`}</p>\n    <p>{`Returning a value in the above context enables uses cases where the async node only needs to be resolved once. For use cases where the async node needs to be updated multiple times, the onAsyncNode hook provides a second callback argument that can be used to update the value multiple times. For example, if the async node is used to represent some placeholder for toasts, or notifications, the async node handler could initially resolve with some content, and then update with null after some time to remove those views.`}</p>\n    <h3 {...{\n      \"id\": \"continuous-streaming\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#continuous-streaming\"\n      }}>{`Continuous Streaming`}</a></h3>\n    <p>{`In order to keep streaming in new content, there must be at least 1 or more `}<inlineCode parentName=\"p\">{`AsyncNode`}</inlineCode>{`s in the view tree at all times.`}<br parentName=\"p\"></br>{`\n`}{`This means there must be a constant renewal of new `}<inlineCode parentName=\"p\">{`AsyncNode`}</inlineCode>{`s after the previous ones are resolved by the user.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#usage\"\n      }}>{`Usage`}</a></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AsyncNodePlugin`}</inlineCode>{` itself accepts an options object with a `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` array, enabling the integration of multiple view plugins for extended functionality.\nThe `}<inlineCode parentName=\"p\">{`AsyncNodePluginPlugin`}</inlineCode>{` is provided as a default way of handling asset-async nodes, it is just one handler for one possible way of using async nodes. If the default behavior does not align with the desired usage, users are able to provide their own implementation of the handler in the form of a plugin to be passed to the base `}<inlineCode parentName=\"p\">{`AsyncNodePlugin`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`AsyncNodePluginPlugin`}</inlineCode>{` also comes from the `}<inlineCode parentName=\"p\">{`'@player-ui/async-node-plugin'`}</inlineCode>{` and contains the resolver and parser functionality.`}</p>\n    <PlatformTabs mdxType=\"PlatformTabs\">\n  <core>\n        <p>{`Add the plugin to Player:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`import { Player } from '@player-ui/player';\nimport { AsyncNodePlugin, AsyncNodePluginPlugin } from '@player-ui/async-node-plugin';\n\nconst asyncNodePlugin = new AsyncNodePlugin({\n    plugins: [new AsyncNodePluginPlugin()],\n});\n\n// Configuring async node behaviour\nasyncNodePlugin.hooks.onAsyncNode.tap('handleAsync', async (node: Node.Node) => {\n  ...\n  // Determine what to return to be parsed into a concrete UI asset\n});\n\n// For use cases where the async node needs to be updated multiple times\n\nasyncNodePlugin.hooks.onAsyncNode.tap(\"toast-provider\", async (node: Node.Async, update: (content) => void) => {\n    ...\n  // do some async task to get content\n  const toastContent = await makeToastFor(node.id);\n  // set timer for 5 seconds to remove the toast content from the view\n  setTimeout(() => update(null), 5000);\n  // uses same mechanism as before\n  return toastContent;\n});\n\nconst player = new Player({\n  plugins: [\n    asyncNodePlugin\n  ]\n})\n`}</code></pre>\n  </core>\n  <react>\n        <p>{`The `}<inlineCode parentName=\"p\">{`react`}</inlineCode>{` version of the AsyncNodePlugin is identical to using the core plugin. Refer to core usage for handler configuration:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`import { ReactPlayer } from '@player-ui/react';\nimport { AsyncNodePlugin, AsyncNodePluginPlugin } from '@player-ui/async-node-plugin';\n\nconst asyncNodePlugin = new AsyncNodePlugin({\n    plugins: [new AsyncNodePluginPlugin()],\n});\n\nconst player = new ReactPlayer({\n  plugins: [\n    asyncNodePlugin\n  ]\n})\n`}</code></pre>\n  </react>\n  <ios>\n        <h3 {...{\n          \"id\": \"cocoapods\"\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#cocoapods\"\n          }}>{`CocoaPods`}</a></h3>\n        <p>{`Add the subspec to your `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode></p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-ruby\"\n          }}>{`pod 'PlayerUI/AsyncNodePlugin'\n`}</code></pre>\n        <h3 {...{\n          \"id\": \"swift-usage\"\n        }}><a parentName=\"h3\" {...{\n            \"href\": \"#swift-usage\"\n          }}>{`Swift Usage`}</a></h3>\n        <p>{`In integration code`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-swift\"\n          }}>{`var body: some View {\n    SwiftUIPlayer(\n        flow: flow,\n        plugins: [\n          AsyncNodePlugin(plugins: [AsyncNodePluginPlugin()]) { node in\n              // Determine what to return either using the singleNode or multiNode case\n              // Then JSON can be provided using the concrete case, see below for using the encodable case\n              return .singleNode(.concrete(jsContext?.evaluateScript(\"\"\"\n                  ({\"asset\": {\"id\": \"text\", \"type\": \"text\", \"value\":\"new node from the hook\"}})\n                  \"\"\") ?? JSValue()))\n\n              // OR\n              return .multiNode([\n                .concrete(jsContext?.evaluateScript(\"\"\"\n                  ({\"asset\": {\"id\": \"text\", \"type\": \"text\", \"value\":\"1st value in the multinode\"}})\n                  \"\"\") ?? JSValue()),\n                .concrete(jsContext?.evaluateScript(\"\"\"\n                  ({\"asset\": {\"id\": \"async-node-2\", \"async\": \"true\" }})\n                  \"\"\") ?? JSValue())\n              ])\n\n          }\n        ],\n        result: $resultBinding\n    )\n}\n`}</code></pre>\n        <p>{`The plugin also provides a default asset placeholder struct that is encodable, instead of passing in the JSON string users can use\n`}<inlineCode parentName=\"p\">{`AssetPlaceholderNode`}</inlineCode>{` which includes an `}<inlineCode parentName=\"p\">{`asset`}</inlineCode>{` key that takes any user defined Encodable struct as the value. Assuming the following encodable struct is defined:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-swift\"\n          }}>{`struct PlaceholderNode: Codable, Equatable, AssetData {\n    public var id: String\n    public var type: String\n    var value: String?\n\n    public init(id: String, type: String, value: String? = nil) {\n        self.id = id\n        self.type = type\n        self.value = value\n    }\n}\n`}</code></pre>\n        <p>{`Instead of using the JSON string above, the following can be used:`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-swift\"\n          }}>{`return .singleNode(.encodable(PlaceholderNode(id: \"text\", type: \"text\", value: \"new node from the hook\")))\n\n// OR\n\nreturn .multiNode([\n    ReplacementNode.encodable(PlaceholderNode(id: \"text\", type: \"text\", value: \"1st value in the multinode\")),\n    ReplacementNode.encodable(AsyncNode(id: \"id\"))])\n`}</code></pre>\n        <p>{`Note: the AsyncNode struct is already defined in the plugin with the `}<inlineCode parentName=\"p\">{`async`}</inlineCode>{` property defaulted to true so only `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` needs to be passed in`}</p>\n        <p>{`As a convenience to the user, the AsyncNodePlugin just takes a callback which has the content to be returned, this is provided to the plugin which calls the the `}<inlineCode parentName=\"p\">{`onAsyncNode`}</inlineCode>{` hook tap method. The return could be a single asset node or an array of asset nodes, or null if the async node is no longer relevant.`}</p>\n  </ios>\n  <android>\n        <p>{`In build.gradle`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-kotlin\"\n          }}>{`implementation \"com.intuit.playerui.plugins:async-node:$PLAYER_VERSION\"\n`}</code></pre>\n        <p>{`In integration code`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-kotlin\"\n          }}>{`import com.intuit.playerui.plugins.asyncnode.AsyncNodePlugin\n\nval asyncNodePlugin = AsyncNodePlugin(plugins: [AsyncNodePluginPlugin()])\n\n// Configuring async node behaviour\nasyncNodePlugin.hooks.onAsyncNode.tap(\"handleAsync\") { hookContext, node ->\n    ...\n    // Determine what to return in the form of a list of maps representing UI asset to be parsed\n    // e.g.\n    // listOf(\n    //  mapOf(\n    //    \"asset\" to mapOf(\n    //      \"id\" to \"asset-1\",\n    //      \"type\" to \"text\",\n    //      \"value\" to \"new asset!\"\n    //    )\n    //  )\n    // )\n}\n\nAndroidPlayer(asyncNodePlugin)\n`}</code></pre>\n  </android>\n    </PlatformTabs>\n    <hr></hr>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.dev/player-ui/player/blob/main/docs/site/pages/plugins/async-node.mdx\"\n      }}>{`Help to improve this page`}</a></p>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;","'use client'\n\n// src/skip-nav.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar fallbackId = \"chakra-skip-nav\";\nfunction getStyles(styles) {\n  return {\n    userSelect: \"none\",\n    border: \"0\",\n    height: \"1px\",\n    width: \"1px\",\n    margin: \"-1px\",\n    padding: \"0\",\n    outline: \"0\",\n    overflow: \"hidden\",\n    position: \"absolute\",\n    clip: \"rect(0 0 0 0)\",\n    ...styles,\n    _focus: {\n      clip: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      ...styles[\"_focus\"]\n    }\n  };\n}\nvar SkipNavLink = forwardRef(\n  function SkipNavLink2(props, ref) {\n    const styles = useStyleConfig(\"SkipLink\", props);\n    const { id = fallbackId, ...rest } = omitThemingProps(props);\n    return /* @__PURE__ */ jsx(chakra.a, { ...rest, ref, href: `#${id}`, __css: getStyles(styles) });\n  }\n);\nSkipNavLink.displayName = \"SkipNavLink\";\nvar SkipNavContent = forwardRef(\n  function SkipNavContent2(props, ref) {\n    const { id = fallbackId, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        id,\n        tabIndex: -1,\n        style: { outline: 0 },\n        ...rest\n      }\n    );\n  }\n);\nSkipNavContent.displayName = \"SkipNavContent\";\n\nexport {\n  SkipNavLink,\n  SkipNavContent\n};\n//# sourceMappingURL=chunk-IZODFAGU.mjs.map","import { Box, Flex, Divider, OrderedList } from '@chakra-ui/react';\nimport { SkipNavContent, SkipNavLink } from '@chakra-ui/skip-nav';\nimport React from 'react';\nimport { AppContext } from './Context';\nimport { TopNavigation, SideNavigation, Footer } from './Navigation';\n\nconst TableOfContents = (props: PageProps) => {\n  return (\n    <Box display={{ base: 'none', xl: 'block' }}>\n      Table Of Contents\n      <OrderedList spacing={1} ml=\"0\" mt=\"4\" styleType=\"none\">\n        {props.tableOfContents?.map((h) => {\n          return (\n            <li key={h.text}>\n              <a href={`#${h.id}`}>{h.text}</a>\n            </li>\n          );\n        })}\n      </OrderedList>\n    </Box>\n  );\n};\n\ninterface PageProps {\n  tableOfContents?: Array<{\n    text: string;\n    id: string;\n    level: string;\n  }>;\n}\n\nexport const Page = (props: React.PropsWithChildren<PageProps>) => {\n  const { bannerExpanded } = React.useContext(AppContext);\n\n  const bannerHeight = '72px';\n  const maxH = `calc(100vh - 88px - ${bannerExpanded ? bannerHeight : '0px'})`;\n  const minH = `calc(100vh - 88px - 105px - ${\n    bannerExpanded ? bannerHeight : '0px'\n  })`;\n\n  return (\n    <Box minH=\"100vh\">\n      <SkipNavLink>Skip to Main Content</SkipNavLink>\n\n      <Flex flexDir=\"column\" padding=\"2\">\n        <TopNavigation />\n        <Divider />\n        <Flex>\n          <Box as=\"main\" w=\"100%\" mx=\"auto\">\n            <Box display={{ md: 'flex' }}>\n              <Box\n                display={{\n                  base: 'none',\n                  md: 'block',\n                }}\n                overflow=\"auto\"\n                maxH={maxH}\n                pr=\"8\"\n                ml=\"4\"\n              >\n                <SideNavigation />\n              </Box>\n              <Box flex=\"1\" minW=\"0\" overflow=\"auto\" maxH={maxH}>\n                <Box minH={minH}>\n                  <SkipNavContent />\n                  {props.children}\n                </Box>\n                <Box pt=\"20\">\n                  <Footer />\n                </Box>\n              </Box>\n              {props.tableOfContents && (\n                <TableOfContents tableOfContents={props.tableOfContents} />\n              )}\n            </Box>\n          </Box>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n","import * as React from \"react\";\n// import Head from 'next/head';\nimport { Container, Flex } from \"@chakra-ui/react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport { MDXComponents } from \"../mdx-components\";\nimport { Page } from \"../Page\";\n\ninterface PageFrontmatter {\n  title: string;\n\n  tableOfContents: any;\n}\n\nexport default function withDocs(p: PageFrontmatter) {\n  const LayoutHome = (props: React.PropsWithChildren<unknown>) => {\n    return (\n      <Page>\n        {/* <Head>\n          <title>Player - {p.title}</title>\n        </Head> */}\n        <Flex alignItems=\"center\">\n          <Container maxW=\"container.lg\">\n            <MDXProvider components={MDXComponents}>\n              {props.children}\n            </MDXProvider>\n          </Container>\n        </Flex>\n      </Page>\n    );\n  };\n\n  return LayoutHome;\n}\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","TYPE_PROP_NAME","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","PlatformTabs","name","console","warn","mdx","layoutProps","MDXLayout","withLayout","MDXContent","_extends","isMDXComponent","fallbackId","getStyles","styles","userSelect","border","height","width","margin","padding","outline","overflow","position","clip","_focus","SkipNavLink","id","rest","jsx","a","href","__css","SkipNavContent","div","tabIndex","style","TableOfContents","display","base","xl","spacing","ml","mt","styleType","tableOfContents","map","h","text","Page","bannerExpanded","bannerHeight","maxH","minH","flexDir","as","w","mx","md","pr","flex","minW","pt","withDocs","p","alignItems","maxW"],"sourceRoot":""}