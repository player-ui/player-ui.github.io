"use strict";(self.webpackChunk_player_ui_docs=self.webpackChunk_player_ui_docs||[]).push([[349],{83190:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>h});var a=n(52112);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),f=r,h=u["".concat(s,".").concat(f)]||u[f]||m[f]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},349:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});n(52112);var a=n(83190),r=n(60742);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},i.apply(this,arguments)}const o={},l=(0,r.A)({title:"User Player Across Platforms",tableOfContents:[{text:"Using Player Across Multiple Platforms",id:"using-player-across-multiple-platforms",level:1},{text:"Use Core Plugins to Share Functionality",id:"use-core-plugins-to-share-functionality",level:2},{text:"Use the meta-plugin to simplify plugin sets",id:"use-the-meta-plugin-to-simplify-plugin-sets",level:2}]});function s(e){let{components:t,...n}=e;return(0,a.yg)(l,i({},o,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"using-player-across-multiple-platforms"},(0,a.yg)("a",{parentName:"h1",href:"#using-player-across-multiple-platforms"},"Using Player Across Multiple Platforms")),(0,a.yg)("p",null,"One of the major benefits of adopting Player for rendering a UI is it’s ability to function across all the platforms Player supports (React, Android, iOS) using the same content. In order to facilitate this, and get the most out of Player’s architecture, here’s a few things to keep in mind as you integrate Player into multiple platforms."),(0,a.yg)("h2",{id:"use-core-plugins-to-share-functionality"},(0,a.yg)("a",{parentName:"h2",href:"#use-core-plugins-to-share-functionality"},"Use Core Plugins to Share Functionality")),(0,a.yg)("p",null,"One of the easiest, and most beneficial thing to do when integrating Player is to organize feature sets into plugins. Keeping each plugin small and concise allows for easy sharing of features with other Player integrations. Player Core, as well as each of the platform integration, supplies an interface for users to augment/extend the functionality of Player. This can be used to author validations, formatters, expressions, etc once, and be shared across Player implementations across platforms. As Player Core runs on every platform, any core Player plugin will also run on every platform which allows for shared functionality to be authored once and shared across every platform. "),(0,a.yg)("p",null,"Plugins such as the ",(0,a.yg)("a",{parentName:"p",href:"../plugins/common-types"},"common-types plugin")," is a great example of a plugin used to add a feature to Player in a reusable way. Since the validations, formats, and data-types present in this plugin are authored in Player Core, we eliminate the need to rewrite them to target each individual platform. Using this mechanism, we also guaranteed that the React, iOS, and Android Player configurations are able to process the same content in the same way across the systems. The most important usecase of this is the asset transforms. Writing the logic to transform the asset as authored in content to the UI representation in the shared transform layer moves repeated functionality to the shared layer decreasing the implementation complexity of each asset on every platform but still leaves room for rendering variability for each platform."),(0,a.yg)("h2",{id:"use-the-meta-plugin-to-simplify-plugin-sets"},(0,a.yg)("a",{parentName:"h2",href:"#use-the-meta-plugin-to-simplify-plugin-sets"},"Use the meta-plugin to simplify plugin sets")),(0,a.yg)("p",null,"In the previous example, two things were mentioned that may initially seem to contradict each other:"),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"Keeping each plugin small and concise allows for easy sharing of features with other applications.")),(0,a.yg)("p",null,"and"),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"features/expressions/validations added in 1 are automatically present in the other platforms without any additional work.")),(0,a.yg)("p",null,(0,a.yg)("em",{parentName:"p"},"If each plugin implements a single, small feature, how are we able to add new features to each platform without requiring additional work?")),(0,a.yg)("p",null,"One pattern that we’ve found to work well is to continue to organize each feature into individual plugins/modules. This allows any application to opt-in to an individual feature, and makes sharing much, much simpler. In addition to this, we also create 1 more plugin using the meta-plugin to wrap all of the application’s feature requirements into 1 plugin. This allows additional plugins to to be added to the meta-plugin and each platform will still only require 1 plugin registered (which makes integration easy) while still allowing the individual pieces to be consumed if desired (which makes extensibility easy)"),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.dev/player-ui/player/blob/main/docs/site/pages/assets/cross-platform.mdx"},"Help to improve this page")))}s.isMDXComponent=!0},60742:(e,t,n)=>{n.d(t,{A:()=>E});var a=n(52112),r=n(9495),i=n(32532),o=n(83190),l=n(48884),s=n(90283),p=n(14769),c=n(63420),u=n(23013),m=n(47482),f=n(52947),h=n(4380),y=n(13516),d="chakra-skip-nav";function g(e){return{userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",...e,_focus:{clip:"auto",width:"auto",height:"auto",...e._focus}}}var b=(0,u.R)((function(e,t){const n=(0,m.Vl)("SkipLink",e),{id:a=d,...r}=(0,f.MN)(e);return(0,y.jsx)(h.B.a,{...r,ref:t,href:`#${a}`,__css:g(n)})}));b.displayName="SkipNavLink";var v=(0,u.R)((function(e,t){const{id:n=d,...a}=e;return(0,y.jsx)(h.B.div,{ref:t,id:n,tabIndex:-1,style:{outline:0},...a})}));v.displayName="SkipNavContent";var w=n(67435),x=n(63192);const O=e=>a.createElement(s.az,{display:{base:"none",xl:"block"}},"Table Of Contents",a.createElement(p._J,{spacing:1,ml:"0",mt:"4",styleType:"none"},e.tableOfContents?.map((e=>a.createElement("li",{key:e.text},a.createElement("a",{href:`#${e.id}`},e.text)))))),P=e=>{const{bannerExpanded:t}=a.useContext(w.BR),n="72px",i=`calc(100vh - 88px - ${t?n:"0px"})`,o=`calc(100vh - 88px - 105px - ${t?n:"0px"})`;return a.createElement(s.az,{minH:"100vh"},a.createElement(b,null,"Skip to Main Content"),a.createElement(r.s,{flexDir:"column",padding:"2"},a.createElement(x.IS,null),a.createElement(c.c,null),a.createElement(r.s,null,a.createElement(s.az,{as:"main",w:"100%",mx:"auto"},a.createElement(s.az,{display:{md:"flex"}},a.createElement(s.az,{display:{base:"none",md:"block"},overflow:"auto",maxH:i,pr:"8",ml:"4"},a.createElement(x.E1,null)),a.createElement(s.az,{flex:"1",minW:"0",overflow:"auto",maxH:i},a.createElement(s.az,{minH:o},a.createElement(v,null),e.children),a.createElement(s.az,{pt:"20"},a.createElement(x.wi,null))),e.tableOfContents&&a.createElement(O,{tableOfContents:e.tableOfContents}))))))};function E(e){return e=>a.createElement(P,null,a.createElement(r.s,{alignItems:"center"},a.createElement(i.m,{maxW:"container.lg"},a.createElement(o.xA,{components:l.Ul},e.children))))}}}]);
//# sourceMappingURL=349.003b47b41f5faea6148d.js.map