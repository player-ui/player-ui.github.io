{"version":3,"file":"7123.8609ef994119ceac96e4.js","mappings":"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","sources":["webpack://@player-ui/docs/../../node_modules/.aspect_rules_js/@mdx-js+react@1.6.22_react_18.3.1/node_modules/@mdx-js/react/dist/esm.js","webpack://@player-ui/docs/./pages/content/assets-views.mdx","webpack://@player-ui/docs/../../node_modules/.aspect_rules_js/@chakra-ui+skip-nav@2.1.0_1916995689/node_modules/@chakra-ui/skip-nav/dist/chunk-IZODFAGU.mjs","webpack://@player-ui/docs/./components/Page.tsx","webpack://@player-ui/docs/./components/Layout/MDXPageLayout.tsx"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport withLayout from '../../components/Layout/MDXPageLayout';\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = withLayout({\"title\":\"Assets & Views\",\"tableOfContents\":[{\"text\":\"Assets\",\"id\":\"assets\",\"level\":1},{\"text\":\"Views\",\"id\":\"views\",\"level\":1},{\"text\":\"Cross-field validation\",\"id\":\"cross-field-validation\",\"level\":2},{\"text\":\"Applicability\",\"id\":\"applicability\",\"level\":2},{\"text\":\"Switches\",\"id\":\"switches\",\"level\":1},{\"text\":\"Usage\",\"id\":\"usage\",\"level\":2},{\"text\":\"Static v Dynamic Switches\",\"id\":\"static-v-dynamic-switches\",\"level\":2},{\"text\":\"Example\",\"id\":\"example\",\"level\":2},{\"text\":\"Templates\",\"id\":\"templates\",\"level\":1},{\"text\":\"Usage\",\"id\":\"usage\",\"level\":2},{\"text\":\"Example\",\"id\":\"example\",\"level\":3},{\"text\":\"Multiple templates\",\"id\":\"multiple-templates\",\"level\":2},{\"text\":\"Nested Templates\",\"id\":\"nested-templates\",\"level\":3},{\"text\":\"Multiple Templates - Single Output\",\"id\":\"multiple-templates---single-output\",\"level\":3},{\"text\":\"Dynamic and Static Templates\",\"id\":\"dynamic-and-static-templates\",\"level\":2}]})\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"assets\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#assets\"\n      }}>{`Assets`}</a></h1>\n    <p>{`An asset is a generic term given to a semantic bit of information that we wish to convey to the user. Assets are the primitive elements that make up the content Player presents as user experiences. Though there are many different types of assets, they all follow the same basic principles:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`assets are uniquely identified within their view`}</li>\n      <li parentName=\"ul\">{`assets are semantically meaningful in and of themselves, not relying on any other asset to have meaning`}</li>\n    </ul>\n    <p>{`In some cases assets will contain other assets, however the contained assets can also stand on their own. If a complex asset requires information that is specific to itself, then that information is expressed as an object, not an asset.`}</p>\n    <p>{`Each asset must have 2 properties: an `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{` - Unique ID for the asset. It must be unique per view.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` - A descriptive name for the asset type. This is used for handling rendering and transforms.`}</li>\n    </ul>\n    <p>{`Nested assets are represented as objects containing an `}<inlineCode parentName=\"p\">{`asset`}</inlineCode>{` property. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"id\": \"parent\",\n  \"type\": \"parent\",\n  \"label\": {\n    \"asset\": {\n      \"id\": \"child-asset\",\n      \"type\": \"child\"\n    }\n  }\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` of the parent contains a nested asset reference. These are `}<em parentName=\"p\">{`slots`}</em>{` that can usually contain any asset type.`}</p>\n    <h1 {...{\n      \"id\": \"views\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#views\"\n      }}>{`Views`}</a></h1>\n    <p>{`Views are `}<em parentName=\"p\">{`assets`}</em>{` that exist at the top level of the tree. They typically include the navigation actions, a title, or other top-level information.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` of the views are used in the navigation section to reference a specific view from the list.`}</p>\n    <h2 {...{\n      \"id\": \"cross-field-validation\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#cross-field-validation\"\n      }}>{`Cross-field validation`}</a></h2>\n    <p>{`The other special property of a `}<inlineCode parentName=\"p\">{`view`}</inlineCode>{` vs. an `}<inlineCode parentName=\"p\">{`asset`}</inlineCode>{` is the addition of a `}<inlineCode parentName=\"p\">{`validation`}</inlineCode>{` property on the view. These contain `}<a parentName=\"p\" {...{\n        \"href\": \"/schema\"\n      }}><inlineCode parentName=\"a\">{`validation`}</inlineCode>{` objects`}</a>{` that are used for validations crossing multiple fields, and are ran on user navigation rather than data change.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  ...\n  \"views\": [\n    {\n      \"id\": \"view-1\",\n      \"validation\": [\n        {\n          \"type\": \"expression\",\n          \"ref\": \"foo.data.thing1\",\n          \"message\": \"Both need to equal 100\",\n          \"exp\": \"{{foo.data.thing1}} + {{foo.data.thing2}} == 100\",\n        }\n      ]\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`They follow the same guidelines for normal validation references, with the addition of a `}<inlineCode parentName=\"p\">{`ref`}</inlineCode>{` property that points to the binding that this validation is tied to.`}</p>\n    <h2 {...{\n      \"id\": \"applicability\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#applicability\"\n      }}>{`Applicability`}</a></h2>\n    <p>{`Any object in the tree (including `}<em parentName=\"p\">{`assets`}</em>{`) may contain an `}<inlineCode parentName=\"p\">{`applicability`}</inlineCode>{` property. This is an `}<em parentName=\"p\">{`expression`}</em>{` that may conditionally show or hide an asset (and all of it’s children) from the view tree. Applicability is dynamically calculated and will automatically update as data changes on the page.`}</p>\n    <h1 {...{\n      \"id\": \"switches\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#switches\"\n      }}>{`Switches`}</a></h1>\n    <p>{`Switches are ways of dynamically changing the structure of the view based on data. There are 2 types of switches: `}<inlineCode parentName=\"p\">{`static`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`dynamic`}</inlineCode>{`, but their structures are identical. `}<inlineCode parentName=\"p\">{`switches`}</inlineCode>{` can appear anywhere you’d find a normal asset, and (similar to `}<a parentName=\"p\" {...{\n        \"href\": \"./templates\"\n      }}>{`templates`}</a>{`) are removed from the view before it reaches the UI layer.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#usage\"\n      }}>{`Usage`}</a></h2>\n    <p>{`The switch is simply a list of objects with `}<inlineCode parentName=\"p\">{`case`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`asset`}</inlineCode>{` properties:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`asset`}</inlineCode>{` - The asset that will replace the switch if the case is true`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`case`}</inlineCode>{` - An `}<a parentName=\"li\" {...{\n          \"href\": \"./expression\"\n        }}>{`expression`}</a>{` to evaluate.`}</li>\n    </ul>\n    <p>{`The switch will run through each `}<em parentName=\"p\">{`case`}</em>{` statement until the first case expression evaluates to true. For the `}<em parentName=\"p\">{`default`}</em>{` case, simple use a value of `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` at the end of the array.`}</p>\n    <h2 {...{\n      \"id\": \"static-v-dynamic-switches\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#static-v-dynamic-switches\"\n      }}>{`Static v Dynamic Switches`}</a></h2>\n    <p>{`The only difference between a `}<inlineCode parentName=\"p\">{`static`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`dynamic`}</inlineCode>{` switch is the timing update behavior after the first rendering of a view.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`staticSwitch`}</inlineCode>{` calculates the applicable case when a view first renders. It will not re-calculate any of the case statements as data in the view is updated. If you transition away from view-node, and revisit it later-on in the flow, the switch will re-compute the appropriate case statement.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`dynamicSwitch`}</inlineCode>{` will always update the applicable case statement whenever data changes. If data is changed while a view is still showing, the switch will be updated to reflect the new case.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#example\"\n      }}>{`Example`}</a></h2>\n    <p>{`Anywhere you can place an `}<inlineCode parentName=\"p\">{`asset`}</inlineCode>{` node, a `}<inlineCode parentName=\"p\">{`dynamicSwitch`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`staticSwitch`}</inlineCode>{` can be placed instead.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"staticSwitch\": [\n    {\n      \"case\": \"{{name.first}} == 'adam'\",\n      \"asset\": {\n        \"id\": \"name\",\n        \"type\": \"text\",\n        \"value\": \"Yay\"\n      }\n    },\n    {\n      \"case\": \"{{name.first}} == 'notadam'\",\n      \"asset\": {\n        \"id\": \"name\",\n        \"type\": \"text\",\n        \"value\": \"Nay\"\n      }\n    },\n    {\n      \"case\": true,\n      \"asset\": {\n        \"id\": \"name\",\n        \"type\": \"text\",\n        \"value\": \"🤷\"\n      }\n    }\n  ]\n}\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"templates\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#templates\"\n      }}>{`Templates`}</a></h1>\n    <p>{`Templates provide a way to dynamically create a list of assets, or `}<em parentName=\"p\">{`any`}</em>{` object, based on data from the model. All of the templating semantics are removed by the time it reaches an asset’s transform or UI layer.`}</p>\n    <h2 {...{\n      \"id\": \"usage-1\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#usage-1\"\n      }}>{`Usage`}</a></h2>\n    <p>{`Within any asset, specify a `}<inlineCode parentName=\"p\">{`template`}</inlineCode>{` property as an array of:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{` - A binding that points to an array in the model`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`output`}</inlineCode>{` - A property to put the mapped objects`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`value`}</inlineCode>{` - The template to use for each object/item in the data array.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dynamic`}</inlineCode>{` - (optional, false by default) A boolean that specifies whether template should be recomputed when data changes`}</li>\n    </ul>\n    <p>{`Within a template, the `}<inlineCode parentName=\"p\">{`_index_`}</inlineCode>{` string can be used to substitute the array-index of the item being mapped.`}</p>\n    <h3 {...{\n      \"id\": \"example-1\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#example-1\"\n      }}>{`Example`}</a></h3>\n    <p><strong parentName=\"p\">{`Authored`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"asset\": {\n    \"id\": \"top-level\",\n    \"type\": \"collection\",\n    \"template\": [\n      {\n        \"data\": \"list.of.names\",\n        \"output\": \"values\",\n        \"value\": {\n          \"asset\": {\n            \"id\": \"value-_index_\",\n            \"type\": \"text\",\n            \"value\": \"{{list.of.names._index_}}\"\n          }\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Output`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"asset\": {\n    \"id\": \"top-level\",\n    \"type\": \"collection\",\n    \"values\": [\n      {\n        \"asset\": {\n          \"id\": \"value-0\",\n          \"type\": \"text\",\n          \"value\": \"Adam\"\n        }\n      },\n      {\n        \"asset\": {\n          \"id\": \"value-1\",\n          \"type\": \"text\",\n          \"value\": \"Not Adam\"\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"multiple-templates\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#multiple-templates\"\n      }}>{`Multiple templates`}</a></h2>\n    <p>{`There’s a few ways to leverage multiple templates within a single asset. Templates can be `}<em parentName=\"p\">{`nested`}</em>{` or multiple used on a single node. These can also be combined to build out complicated nested expansion.`}</p>\n    <h3 {...{\n      \"id\": \"nested-templates\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#nested-templates\"\n      }}>{`Nested Templates`}</a></h3>\n    <p>{`Templates can contain other templates. When referencing a nested template, append the template depth to the `}<inlineCode parentName=\"p\">{`_index_`}</inlineCode>{` string to reference the correct data-item.`}</p>\n    <p>{`For example, if 1 template contains another, use `}<inlineCode parentName=\"p\">{`_index_`}</inlineCode>{` to reference the outer-loop, and `}<inlineCode parentName=\"p\">{`_index1_`}</inlineCode>{` to reference the inner loop. Furthermore, if templates are nested three levels deep, the first level loop will still be referenced by `}<inlineCode parentName=\"p\">{`_index_`}</inlineCode>{`, the second level will be referenced by `}<inlineCode parentName=\"p\">{`_index1_`}</inlineCode>{` and the bottom most loop will be referenced by `}<inlineCode parentName=\"p\">{`_index2_`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"multiple-templates---single-output\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#multiple-templates---single-output\"\n      }}>{`Multiple Templates - Single Output`}</a></h3>\n    <p>{`Templates will, by default, create an array, if needed, for the `}<inlineCode parentName=\"p\">{`output`}</inlineCode>{` property of each template. If that array already exits (either by manually writing it in the JSON, or from a previous template run), each item will be appended to the end of the existing array.`}</p>\n    <p>{`This can be leveraged by combining multiple template directives that use the same `}<inlineCode parentName=\"p\">{`output`}</inlineCode>{` property, or by having an `}<inlineCode parentName=\"p\">{`output`}</inlineCode>{` use an existing array:`}</p>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Example`}</em></strong></p>\n    <p>{`Both templates in the example below output to the `}<inlineCode parentName=\"p\">{`values`}</inlineCode>{` array on the parent object. Since no `}<inlineCode parentName=\"p\">{`values`}</inlineCode>{` array exists, the first template will create said array, and the second will append to that.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"asset\": {\n    \"id\": \"top-level\",\n    \"type\": \"collection\",\n    \"template\": [\n      {\n        \"data\": \"list.of.names\",\n        \"output\": \"values\",\n        \"value\": {\n          \"asset\": {\n            \"id\": \"name-_index_\",\n            \"type\": \"text\",\n            \"value\": \"{{list.of.names._index_}}\"\n          }\n        }\n      },\n      {\n        \"data\": \"list.of.other-names\",\n        \"output\": \"values\",\n        \"value\": {\n          \"asset\": {\n            \"id\": \"other-name-_index_\",\n            \"type\": \"text\",\n            \"value\": \"{{list.of.names._index_}}\"\n          }\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Example`}</em></strong></p>\n    <p>{`The template below will append it’s values to the pre-existing `}<inlineCode parentName=\"p\">{`values`}</inlineCode>{` array.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"asset\": {\n    \"id\": \"top-level\",\n    \"type\": \"collection\",\n    \"values\": [\n      {\n        \"asset\": {\n          \"id\": \"existing-name\",\n          \"type\": \"text\",\n          \"value\": \"Something hard-coded\"\n        }\n      }\n    ],\n    \"template\": [\n      {\n        \"data\": \"list.of.names\",\n        \"output\": \"values\",\n        \"value\": {\n          \"asset\": {\n            \"id\": \"name-_index_\",\n            \"type\": \"text\",\n            \"value\": \"{{list.of.names._index_}}\"\n          }\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"dynamic-and-static-templates\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#dynamic-and-static-templates\"\n      }}>{`Dynamic and Static Templates`}</a></h2>\n    <p>{`Like switches, the only difference between a `}<inlineCode parentName=\"p\">{`static`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`dynamic`}</inlineCode>{` template is the timing update behavior after the first rendering of a view. If not defined, the value of `}<inlineCode parentName=\"p\">{`dynamic`}</inlineCode>{` is default to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`.`}</p>\n    <p>{`If `}<inlineCode parentName=\"p\">{`dynamic`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{`, the template will be parsed when a view first renders. The template will not be parsed again as data in the view is updated.`}</p>\n    <p>{`If `}<inlineCode parentName=\"p\">{`dynamic`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`, template will be always updated whenever data changes. If data is changed while a view is still showing, the template will be updated to reflect the new data.`}</p>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Example`}</em></strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"asset\": {\n    \"id\": \"top-level\",\n    \"type\": \"collection\",\n    \"template\": [\n      {\n        \"dynamic\": true,\n        \"data\": \"list.of.names\",\n        \"output\": \"values\",\n        \"value\": {\n          \"asset\": {\n            \"id\": \"value-_index_\",\n            \"type\": \"text\",\n            \"value\": \"{{list.of.names._index_}}\"\n          }\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`model.set([['list.of.names', ['Jain']]]);\nmodel.set([['list.of.names', ['Jain', 'Erica']]]);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Output`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"asset\": {\n    \"id\": \"top-level\",\n    \"type\": \"collection\",\n    \"values\": [\n      {\n        \"asset\": {\n          \"id\": \"value-0\",\n          \"type\": \"text\",\n          \"value\": \"Jain\"\n        }\n      },\n      {\n        \"asset\": {\n          \"id\": \"value-1\",\n          \"type\": \"text\",\n          \"value\": \"Erica\"\n        }\n      }\n    ]\n  }\n}\n`}</code></pre>\n    <hr></hr>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.dev/player-ui/player/blob/main/docs/site/pages/content/assets-views.mdx\"\n      }}>{`Help to improve this page`}</a></p>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;","'use client'\n\n// src/skip-nav.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar fallbackId = \"chakra-skip-nav\";\nfunction getStyles(styles) {\n  return {\n    userSelect: \"none\",\n    border: \"0\",\n    height: \"1px\",\n    width: \"1px\",\n    margin: \"-1px\",\n    padding: \"0\",\n    outline: \"0\",\n    overflow: \"hidden\",\n    position: \"absolute\",\n    clip: \"rect(0 0 0 0)\",\n    ...styles,\n    _focus: {\n      clip: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      ...styles[\"_focus\"]\n    }\n  };\n}\nvar SkipNavLink = forwardRef(\n  function SkipNavLink2(props, ref) {\n    const styles = useStyleConfig(\"SkipLink\", props);\n    const { id = fallbackId, ...rest } = omitThemingProps(props);\n    return /* @__PURE__ */ jsx(chakra.a, { ...rest, ref, href: `#${id}`, __css: getStyles(styles) });\n  }\n);\nSkipNavLink.displayName = \"SkipNavLink\";\nvar SkipNavContent = forwardRef(\n  function SkipNavContent2(props, ref) {\n    const { id = fallbackId, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        id,\n        tabIndex: -1,\n        style: { outline: 0 },\n        ...rest\n      }\n    );\n  }\n);\nSkipNavContent.displayName = \"SkipNavContent\";\n\nexport {\n  SkipNavLink,\n  SkipNavContent\n};\n//# sourceMappingURL=chunk-IZODFAGU.mjs.map","import { Box, Flex, Divider, OrderedList } from '@chakra-ui/react';\nimport { SkipNavContent, SkipNavLink } from '@chakra-ui/skip-nav';\nimport React from 'react';\nimport { AppContext } from './Context';\nimport { TopNavigation, SideNavigation, Footer } from './Navigation';\n\nconst TableOfContents = (props: PageProps) => {\n  return (\n    <Box display={{ base: 'none', xl: 'block' }}>\n      Table Of Contents\n      <OrderedList spacing={1} ml=\"0\" mt=\"4\" styleType=\"none\">\n        {props.tableOfContents?.map((h) => {\n          return (\n            <li key={h.text}>\n              <a href={`#${h.id}`}>{h.text}</a>\n            </li>\n          );\n        })}\n      </OrderedList>\n    </Box>\n  );\n};\n\ninterface PageProps {\n  tableOfContents?: Array<{\n    text: string;\n    id: string;\n    level: string;\n  }>;\n}\n\nexport const Page = (props: React.PropsWithChildren<PageProps>) => {\n  const { bannerExpanded } = React.useContext(AppContext);\n\n  const bannerHeight = '72px';\n  const maxH = `calc(100vh - 88px - ${bannerExpanded ? bannerHeight : '0px'})`;\n  const minH = `calc(100vh - 88px - 105px - ${\n    bannerExpanded ? bannerHeight : '0px'\n  })`;\n\n  return (\n    <Box minH=\"100vh\">\n      <SkipNavLink>Skip to Main Content</SkipNavLink>\n\n      <Flex flexDir=\"column\" padding=\"2\">\n        <TopNavigation />\n        <Divider />\n        <Flex>\n          <Box as=\"main\" w=\"100%\" mx=\"auto\">\n            <Box display={{ md: 'flex' }}>\n              <Box\n                display={{\n                  base: 'none',\n                  md: 'block',\n                }}\n                overflow=\"auto\"\n                maxH={maxH}\n                pr=\"8\"\n                ml=\"4\"\n              >\n                <SideNavigation />\n              </Box>\n              <Box flex=\"1\" minW=\"0\" overflow=\"auto\" maxH={maxH}>\n                <Box minH={minH}>\n                  <SkipNavContent />\n                  {props.children}\n                </Box>\n                <Box pt=\"20\">\n                  <Footer />\n                </Box>\n              </Box>\n              {props.tableOfContents && (\n                <TableOfContents tableOfContents={props.tableOfContents} />\n              )}\n            </Box>\n          </Box>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n","import * as React from \"react\";\n// import Head from 'next/head';\nimport { Container, Flex } from \"@chakra-ui/react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport { MDXComponents } from \"../mdx-components\";\nimport { Page } from \"../Page\";\n\ninterface PageFrontmatter {\n  title: string;\n\n  tableOfContents: any;\n}\n\nexport default function withDocs(p: PageFrontmatter) {\n  const LayoutHome = (props: React.PropsWithChildren<unknown>) => {\n    return (\n      <Page>\n        {/* <Head>\n          <title>Player - {p.title}</title>\n        </Head> */}\n        <Flex alignItems=\"center\">\n          <Container maxW=\"container.lg\">\n            <MDXProvider components={MDXComponents}>\n              {props.children}\n            </MDXProvider>\n          </Container>\n        </Flex>\n      </Page>\n    );\n  };\n\n  return LayoutHome;\n}\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","TYPE_PROP_NAME","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","layoutProps","MDXLayout","withLayout","MDXContent","mdx","_extends","isMDXComponent","fallbackId","getStyles","styles","userSelect","border","height","width","margin","padding","outline","overflow","position","clip","_focus","SkipNavLink","id","rest","jsx","a","href","__css","SkipNavContent","div","tabIndex","style","TableOfContents","display","base","xl","spacing","ml","mt","styleType","tableOfContents","map","h","text","Page","bannerExpanded","bannerHeight","maxH","minH","flexDir","as","w","mx","md","pr","flex","minW","pt","withDocs","p","alignItems","maxW"],"sourceRoot":""}