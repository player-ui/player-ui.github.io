"use strict";(self.webpackChunk_player_ui_docs=self.webpackChunk_player_ui_docs||[]).push([[9109],{83190:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>h});var n=a(52112);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),y=r,h=u["".concat(s,".").concat(y)]||u[y]||d[y]||i;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"},89109:(e,t,a)=>{a.r(t),a.d(t,{default:()=>s});a(52112);var n=a(83190),r=a(4478);function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},i.apply(this,arguments)}const o={},l=(0,r.A)({title:"Into to XLR",tableOfContents:[{text:"What is XLR",id:"what-is-xlr",level:1},{text:"Why Do We Need it",id:"why-do-we-need-it",level:1},{text:"How Do I Leverage XLR",id:"how-do-i-leverage-xlr",level:1},{text:"As a TypeScript Plugin/Capability Author",id:"as-a-typescript-plugincapability-author",level:2},{text:"As Someone Building Capabilities Around Player",id:"as-someone-building-capabilities-around-player",level:2}]});function s(e){let{components:t,...a}=e;return(0,n.yg)(l,i({},o,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"what-is-xlr"},(0,n.yg)("a",{parentName:"h1",href:"#what-is-xlr"},"What is XLR")),(0,n.yg)("p",null,"XLR, short for cross(x) language representation, is a way to export a static and language agnostic description of a TypeScript type or interface packaged along with the original type or interface. XLR started as a fork of ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/grantila/core-types"},"core-types")," to add support for some missing features (generics, supported types, inheritance) that are heavily used in Player but has evolved into a superset of its features with some opinionated functionality to support Player specific conventions. XLR now powers a majority of the Player language features such as content validation, editor suggestions, and in editor documentation.  "),(0,n.yg)("h1",{id:"why-do-we-need-it"},(0,n.yg)("a",{parentName:"h1",href:"#why-do-we-need-it"},"Why Do We Need it")),(0,n.yg)("p",null,"XLR was developed to fill in one of the major gaps in the Player ecosystem: Because everything is dynamic, there is no way to statically/programmatically know what plugin provides what capabilities (assets, data types, validations, etc) to Player and what that capability looks like. This becomes a real issue in the tooling around Player when things like content authoring and validation. In both use-cases information on what assets are available for use, what parameters do those assets require, what types are those parameters, etc. is required but cannot be assumed. Historically we have seen this gap bridged by hardcoding the set of capabilities that are available but that has proven to be a never ending cycle of keeping those definitions updated when things change and knowing about the ",(0,n.yg)("em",{parentName:"p"},"entire")," set of capabilities, even those that people develop silently. With XLR, a static description of all capabilities provided by a plugin can be compiled at build time, included in the package, and used at any point in the future for a multitude of capabilities."),(0,n.yg)("h1",{id:"how-do-i-leverage-xlr"},(0,n.yg)("a",{parentName:"h1",href:"#how-do-i-leverage-xlr"},"How Do I Leverage XLR")),(0,n.yg)("p",null,"How much you use XLR is pretty dependant on your niche in the Player ecosystem. "),(0,n.yg)("h2",{id:"as-a-typescript-plugincapability-author"},(0,n.yg)("a",{parentName:"h2",href:"#as-a-typescript-plugincapability-author"},"As a TypeScript Plugin/Capability Author")),(0,n.yg)("p",null,"If you are developing Player capabilities for Core/React, all you need to do is have your Plugin fill in the ",(0,n.yg)("inlineCode",{parentName:"p"},"ExtendedPlayerPlugin")," interface and run the Player CLI during build time and the CLI will take care of compiling and bundling the capabilities. You can see an example of this in the ",(0,n.yg)("a",{parentName:"p",href:"./usage#exporting-plugin-capabilities"},"Exporting Plugin Capabilities")," section."),(0,n.yg)("h2",{id:"as-someone-building-capabilities-around-player"},(0,n.yg)("a",{parentName:"h2",href:"#as-someone-building-capabilities-around-player"},"As Someone Building Capabilities Around Player")),(0,n.yg)("p",null,"If you want to leverage XLRs to develop capabilities around Player, youâ€™ll want to start with the ",(0,n.yg)("a",{parentName:"p",href:"./concepts#xlr-sdk"},"SDK")," and use it to load the XLRs from published packages. Then, using the SDK, you can access all the loaded types and information about them for use in your application. "),(0,n.yg)("hr",null),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"https://github.dev/player-ui/player/blob/main/docs/site/pages/xlr/intro.mdx"},"Help to improve this page")))}s.isMDXComponent=!0},4478:(e,t,a)=>{a.d(t,{A:()=>P});var n=a(52112),r=a(95055),i=a(69724),o=a(83190),l=a(31021),s=a(4323),p=a(377),c=a(11716),u=a(34787),d=a(38484),y=a(52947),h=a(39325),m=a(13516),g="chakra-skip-nav";function f(e){return{userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",...e,_focus:{clip:"auto",width:"auto",height:"auto",...e._focus}}}var b=(0,u.R)((function(e,t){const a=(0,d.Vl)("SkipLink",e),{id:n=g,...r}=(0,y.MN)(e);return(0,m.jsx)(h.B.a,{...r,ref:t,href:`#${n}`,__css:f(a)})}));b.displayName="SkipNavLink";var v=(0,u.R)((function(e,t){const{id:a=g,...n}=e;return(0,m.jsx)(h.B.div,{ref:t,id:a,tabIndex:-1,style:{outline:0},...n})}));v.displayName="SkipNavContent";var w=a(11049),x=a(51856);const E=e=>n.createElement(s.az,{display:{base:"none",xl:"block"}},"Table Of Contents",n.createElement(p._J,{spacing:1,ml:"0",mt:"4",styleType:"none"},e.tableOfContents?.map((e=>n.createElement("li",{key:e.text},n.createElement("a",{href:`#${e.id}`},e.text)))))),O=e=>{const{bannerExpanded:t}=n.useContext(w.BR),a="72px",i=`calc(100vh - 88px - ${t?a:"0px"})`,o=`calc(100vh - 88px - 105px - ${t?a:"0px"})`;return n.createElement(s.az,{minH:"100vh"},n.createElement(b,null,"Skip to Main Content"),n.createElement(r.s,{flexDir:"column",padding:"2"},n.createElement(x.IS,null),n.createElement(c.c,null),n.createElement(r.s,null,n.createElement(s.az,{as:"main",w:"100%",mx:"auto"},n.createElement(s.az,{display:{md:"flex"}},n.createElement(s.az,{display:{base:"none",md:"block"},overflow:"auto",maxH:i,pr:"8",ml:"4"},n.createElement(x.E1,null)),n.createElement(s.az,{flex:"1",minW:"0",overflow:"auto",maxH:i},n.createElement(s.az,{minH:o},n.createElement(v,null),e.children),n.createElement(s.az,{pt:"20"},n.createElement(x.wi,null))),e.tableOfContents&&n.createElement(E,{tableOfContents:e.tableOfContents}))))))};function P(e){return e=>n.createElement(O,null,n.createElement(r.s,{alignItems:"center"},n.createElement(i.m,{maxW:"container.lg"},n.createElement(o.xA,{components:l.Ul},e.children))))}}}]);
//# sourceMappingURL=9109.177f3f7642550ea291cb.js.map