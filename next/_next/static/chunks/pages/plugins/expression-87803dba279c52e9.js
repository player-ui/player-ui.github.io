(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5908],{30876:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return g}});var r=t(2784);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"===typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(t),g=s,m=d["".concat(l,".").concat(g)]||d[g]||c[g]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function g(e,n){var t=arguments,s=n&&n.mdxType;if("string"===typeof e||s){var a=t.length,i=new Array(a);i[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"===typeof e?e:s,i[1]=o;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},44415:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/plugins/expression",function(){return t(37373)}])},43857:function(e,n,t){"use strict";t.d(n,{Z:function(){return P}});var r=t(52322),s=t(2784),a=t(97729),i=t(64033),o=t(30876),l=t(21925),p=t(76808),u=t(55165),c=t(63637),d=t.n(c);function g(){return(g=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function m(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}var x=["id"],f=["id"],y="chakra-skip-nav",h={userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",_focus:{clip:"auto",width:"auto",height:"auto"}},b=(0,p.Gp)((function(e,n){var t=(0,p.mq)("SkipLink",e),r=(0,p.Lr)(e),a=r.id,i=void 0===a?y:a,o=m(r,x),l=d()({},h,t);return s.createElement(p.m$.a,g({},o,{ref:n,href:"#"+i,__css:l}))}));u.Ts&&(b.displayName="SkipNavLink");var k=(0,p.Gp)((function(e,n){var t=e.id,r=void 0===t?y:t,a=m(e,f);return s.createElement(p.m$.div,g({ref:n,id:r,tabIndex:-1,style:{outline:0}},a))}));u.Ts&&(k.displayName="SkipNavContent");var v=t(46977),j=t(55002),O=function(e){var n;return(0,r.jsxs)(i.xu,{display:{base:"none",xl:"block"},children:["Table Of Contents",(0,r.jsx)(i.GS,{spacing:1,ml:"0",mt:"4",styleType:"none",children:null===(n=e.tableOfContents)||void 0===n?void 0:n.map((function(e){return(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"#".concat(e.id),children:e.text})},e.text)}))})]})},w=function(e){var n=s.useContext(v.Il).bannerExpanded,t="72px",a="calc(100vh - 88px - ".concat(n?t:"0px",")"),o="calc(100vh - 88px - 105px - ".concat(n?t:"0px",")");return(0,r.jsxs)(i.xu,{minH:"100vh",children:[(0,r.jsx)(b,{children:"Skip to Main Content"}),(0,r.jsxs)(i.kC,{flexDir:"column",padding:"2",children:[(0,r.jsx)(j._g,{}),(0,r.jsx)(i.iz,{}),(0,r.jsx)(i.kC,{children:(0,r.jsx)(i.xu,{as:"main",w:"100%",mx:"auto",children:(0,r.jsxs)(i.xu,{display:{md:"flex"},children:[(0,r.jsx)(i.xu,{display:{base:"none",md:"block"},overflow:"auto",maxH:a,pr:"8",ml:"4",children:(0,r.jsx)(j.Hy,{})}),(0,r.jsxs)(i.xu,{flex:"1",minW:"0",overflow:"auto",maxH:a,children:[(0,r.jsxs)(i.xu,{minH:o,children:[(0,r.jsx)(k,{}),e.children]}),(0,r.jsx)(i.xu,{pt:"20",children:(0,r.jsx)(j.$_,{})})]}),e.tableOfContents&&(0,r.jsx)(O,{tableOfContents:e.tableOfContents})]})})})]})]})};function P(e){return function(n){return(0,r.jsxs)(w,{children:[(0,r.jsx)(a.default,{children:(0,r.jsxs)("title",{children:["Player - ",e.title]})}),(0,r.jsx)(i.kC,{alignItems:"center",children:(0,r.jsx)(i.W2,{maxW:"container.lg",children:(0,r.jsx)(o.Zo,{components:l.tl,children:n.children})})})]})}}},37373:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return u}});t(2784);var r=t(30876),s=t(43857);function a(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i,o=(i="PlatformTabs",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",Object.assign({},e))}),l={},p=(0,s.Z)({title:"Expression",platform:"react,core,ios,android",tableOfContents:[{text:"Expression Plugin",id:"expression-plugin",level:1},{text:"Usage",id:"usage",level:2},{text:"CocoaPods",id:"cocoapods",level:3},{text:"Swift Usage",id:"swift-usage",level:3},{text:"Arguments",id:"arguments",level:4},{text:"Usage",id:"usage",level:2}]});function u(e){var n=e.components,t=a(e,["components"]);return(0,r.kt)(p,Object.assign({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",Object.assign({},{id:"expression-plugin"}),(0,r.kt)("a",Object.assign({parentName:"h1"},{href:"#expression-plugin"}),"Expression Plugin")),(0,r.kt)("p",null,"This plugin assists with exposing custom expressions to Player content."),(0,r.kt)("h2",Object.assign({},{id:"usage"}),(0,r.kt)("a",Object.assign({parentName:"h2"},{href:"#usage"}),"Usage")),(0,r.kt)(o,{mdxType:"PlatformTabs"},(0,r.kt)("core",null,(0,r.kt)("p",null,"Define handlers for the expressions you wish to add:"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"import { ExpressionHandler, ExpressionContext } from '@player-ui/expression-plugin';\n\nconst customExpressionHandler: ExpressionHandler = (ctx: ExpressionContext) => {\n  return 'Hello World!'\n}\n")),(0,r.kt)("p",null,"Register with Player. Subsequent registrations of an expression with the same name will override previous values."),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"import { Player } from '@player-ui/player';\nimport { ExpressionPlugin } from '@player-ui/expression-plugin';\n\nconst player = new Player({\n  plugins: [\n    new ExpressionPlugin([\n      ['myCustomFunction', customExpressionHandler]\n    ])\n  ]\n})\n")),(0,r.kt)("p",null,"Any calls to ",(0,r.kt)("inlineCode",{parentName:"p"},"myCustomFunction()")," within the flow will utilize the newly registered expression:"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "asset": {\n    "id": "sample",\n    "type": "text",\n    "value": "@[ myCustomFunction() ]@"\n  }\n}\n'))),(0,r.kt)("ios",null,(0,r.kt)("h3",Object.assign({},{id:"cocoapods"}),(0,r.kt)("a",Object.assign({parentName:"h3"},{href:"#cocoapods"}),"CocoaPods")),(0,r.kt)("p",null,"Add the subspec to your ",(0,r.kt)("inlineCode",{parentName:"p"},"Podfile")),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"pod 'PlayerUI/ExpressionPlugin'\n")),(0,r.kt)("h3",Object.assign({},{id:"swift-usage"}),(0,r.kt)("a",Object.assign({parentName:"h3"},{href:"#swift-usage"}),"Swift Usage")),(0,r.kt)("p",null,"The ExpressionPlugin lets you register custom expressions to run native code:"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "id": "textAsset",\n  "type": "text",\n  "value": "@[ myExpression() ]@"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),'let expressionPlugin = ExpressionPlugin(expressions: [\n  "myExpression": { _ in\n        return "Some Value"\n    }\n])\n')),(0,r.kt)("h4",Object.assign({},{id:"arguments"}),(0,r.kt)("a",Object.assign({parentName:"h4"},{href:"#arguments"}),"Arguments")),(0,r.kt)("p",null,"Arguments can be passed to custom expressions, and your handler receives the arguments as an array of Any:"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "id": "textAsset",\n  "type": "text",\n  "value": "@[ myExpression(\'world\') ]@"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),'let expressionPlugin = ExpressionPlugin(expressions: [\n  "myExpression": { (args: [Any]) -> Any? in\n        guard let string = args.first as? String else { return nil }\n        return "Hello " + string\n    }\n])\n'))),(0,r.kt)("android",null,(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ExpressionPlugin")," enables consumers to register custom expressions in native JVM code. Simply supply a map of expression name to handler on instantiation, and the expressions will be available within the content. Handlers receive arguments are as a ",(0,r.kt)("inlineCode",{parentName:"p"},"List<Any?>")," and are permitted to return ",(0,r.kt)("inlineCode",{parentName:"p"},"Any?"),"."),(0,r.kt)("h2",Object.assign({},{id:"usage-1"}),(0,r.kt)("a",Object.assign({parentName:"h2"},{href:"#usage-1"}),"Usage")),(0,r.kt)("p",null,"In build.gradle"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-kotlin"}),'implementation "com.intuit.player.plugins:expression:$PLAYER_VERSION"\n')),(0,r.kt)("p",null,"In Player constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-kotlin"}),'import com.intuit.player.plugins.expression.ExpressionPlugin\n\nval expressionPlugin = ExpressionPlugin(\n     "hello" to { args: List<Any?> ->\n        when (val name = args.firstOfNull()) {\n            null -> "goodbye"\n            else -> "hello $name"\n        }\n    }\n)\nAndroidPlayer(expressionPlugin)\n')),(0,r.kt)("p",null,"In Player content"),(0,r.kt)("pre",null,(0,r.kt)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "id": "hello-world-text",\n  "type": "text",\n  "value": "@[hello(\'world\')]@"\n}\n')))),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("a",Object.assign({parentName:"p"},{href:"https://github.dev/player-ui/player/blob/main/docs/site/pages/plugins/expression.mdx"}),"Help to improve this page")))}u.isMDXComponent=!0}},function(e){e.O(0,[6525,7882,3832,9774,2888,179],(function(){return n=44415,e(e.s=n);var n}));var n=e.O();_N_E=n}]);