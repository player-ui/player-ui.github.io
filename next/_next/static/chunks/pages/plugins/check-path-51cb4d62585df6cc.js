(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6330],{30876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"===typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=c(n),d=r,g=h["".concat(o,".").concat(d)]||h[d]||u[d]||i;return n?a.createElement(g,l(l({ref:t},p),{},{components:n})):a.createElement(g,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var i=n.length,l=new Array(i);l[0]=h;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"===typeof e?e:r,l[1]=s;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},70220:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/plugins/check-path",function(){return n(14447)}])},43857:function(e,t,n){"use strict";n.d(t,{Z:function(){return N}});var a=n(52322),r=n(2784),i=n(97729),l=n(64033),s=n(30876),o=n(21925),c=n(76808),p=n(55165),u=n(63637),h=n.n(u);function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function g(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}var m=["id"],f=["id"],k="chakra-skip-nav",b={userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",_focus:{clip:"auto",width:"auto",height:"auto"}},y=(0,c.Gp)((function(e,t){var n=(0,c.mq)("SkipLink",e),a=(0,c.Lr)(e),i=a.id,l=void 0===i?k:i,s=g(a,m),o=h()({},b,n);return r.createElement(c.m$.a,d({},s,{ref:t,href:"#"+l,__css:o}))}));p.Ts&&(y.displayName="SkipNavLink");var x=(0,c.Gp)((function(e,t){var n=e.id,a=void 0===n?k:n,i=g(e,f);return r.createElement(c.m$.div,d({ref:t,id:a,tabIndex:-1,style:{outline:0}},i))}));p.Ts&&(x.displayName="SkipNavContent");var P=n(46977),j=n(55002),v=function(e){var t;return(0,a.jsxs)(l.xu,{display:{base:"none",xl:"block"},children:["Table Of Contents",(0,a.jsx)(l.GS,{spacing:1,ml:"0",mt:"4",styleType:"none",children:null===(t=e.tableOfContents)||void 0===t?void 0:t.map((function(e){return(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"#".concat(e.id),children:e.text})},e.text)}))})]})},O=function(e){var t=r.useContext(P.Il).bannerExpanded,n="72px",i="calc(100vh - 88px - ".concat(t?n:"0px",")"),s="calc(100vh - 88px - 105px - ".concat(t?n:"0px",")");return(0,a.jsxs)(l.xu,{minH:"100vh",children:[(0,a.jsx)(y,{children:"Skip to Main Content"}),(0,a.jsxs)(l.kC,{flexDir:"column",padding:"2",children:[(0,a.jsx)(j._g,{}),(0,a.jsx)(l.iz,{}),(0,a.jsx)(l.kC,{children:(0,a.jsx)(l.xu,{as:"main",w:"100%",mx:"auto",children:(0,a.jsxs)(l.xu,{display:{md:"flex"},children:[(0,a.jsx)(l.xu,{display:{base:"none",md:"block"},overflow:"auto",maxH:i,pr:"8",ml:"4",children:(0,a.jsx)(j.Hy,{})}),(0,a.jsxs)(l.xu,{flex:"1",minW:"0",overflow:"auto",maxH:i,children:[(0,a.jsxs)(l.xu,{minH:s,children:[(0,a.jsx)(x,{}),e.children]}),(0,a.jsx)(l.xu,{pt:"20",children:(0,a.jsx)(j.$_,{})})]}),e.tableOfContents&&(0,a.jsx)(v,{tableOfContents:e.tableOfContents})]})})})]})]})};function N(e){return function(t){return(0,a.jsxs)(O,{children:[(0,a.jsx)(i.default,{children:(0,a.jsxs)("title",{children:["Player - ",e.title]})}),(0,a.jsx)(l.kC,{alignItems:"center",children:(0,a.jsx)(l.W2,{maxW:"container.lg",children:(0,a.jsx)(s.Zo,{components:o.tl,children:t.children})})})]})}}},14447:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return p}});n(2784);var a=n(30876),r=n(43857);function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l,s=(l="PlatformTabs",function(e){return console.warn("Component "+l+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",Object.assign({},e))}),o={},c=(0,r.Z)({title:"Check Path Plugin",platform:"react,core,android",tableOfContents:[{text:"Check Path Plugin",id:"check-path-plugin",level:1},{text:"Usage",id:"usage",level:2},{text:"CocoaPods",id:"cocoapods",level:3},{text:"Swift Usage",id:"swift-usage",level:3},{text:"API",id:"api",level:2},{text:"Query",id:"query",level:3},{text:"getParent",id:"getparent",level:3},{text:"getParentProp",id:"getparentprop",level:3},{text:"hasParentContext",id:"hasparentcontext",level:3},{text:"hasChildContext",id:"haschildcontext",level:3},{text:"Example",id:"example",level:2},{text:"Swift Usage",id:"swift-usage",level:3}]});function p(e){var t=e.components,n=i(e,["components"]);return(0,a.kt)(c,Object.assign({},o,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",Object.assign({},{id:"check-path-plugin"}),(0,a.kt)("a",Object.assign({parentName:"h1"},{href:"#check-path-plugin"}),"Check Path Plugin")),(0,a.kt)("p",null,"The Check Path Plugin enables users to query segments of the view tree for contextual rendering or behavior.\nThis is best suited to be referenced during the UI rendering phase, where one can make decisions about the rendering of an asset based on where it lies in the tree."),(0,a.kt)("h2",Object.assign({},{id:"usage"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#usage"}),"Usage")),(0,a.kt)(s,{mdxType:"PlatformTabs"},(0,a.kt)("core",null,(0,a.kt)("p",null,"Install the plugin:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"yarn add @player-ui/check-path-plugin\n")),(0,a.kt)("p",null,"Add it to Player:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"import CheckPathPlugin from '@player-ui/check-path-plugin';\n\nconst checkPathPlugin = new CheckPathPlugin();\nconst player = new Player({ plugins: [checkPathPlugin] });\n\n// Start your flow\nplayer.start(myFlow);\n")),(0,a.kt)("p",null,"Then use the plugin to query the view:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"const isCustomThing = checkPathPlugin.hasParentContext('my-asset-id', [\n  'input',\n  'myCustomViewType',\n]);\n"))),(0,a.kt)("react",null,(0,a.kt)("p",null,"Install the plugin:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"yarn add @player-ui/check-path-plugin-react\n")),(0,a.kt)("p",null,"6474792156\nAdd it to Player:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"import { ReactPlayer } from '@player-ui/react';\nimport { CheckPathPlugin } from '@player-ui/check-path-plugin-react';\n\nconst rp = new ReactPlayer({\n  plugins: [new CheckPathPlugin()],\n});\n")),(0,a.kt)("p",null,"This will automatically create the underlying ",(0,a.kt)("em",{parentName:"p"},"core")," version of the ",(0,a.kt)("inlineCode",{parentName:"p"},"CheckPathPlugin")," to be made available via ",(0,a.kt)("inlineCode",{parentName:"p"},"React")," Context for the hooks.")),(0,a.kt)("ios",null,(0,a.kt)("h3",Object.assign({},{id:"cocoapods"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#cocoapods"}),"CocoaPods")),(0,a.kt)("p",null,"Add the subspec to your ",(0,a.kt)("inlineCode",{parentName:"p"},"Podfile")),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"pod 'PlayerUI/SwiftUICheckPathPlugin'\n")),(0,a.kt)("h3",Object.assign({},{id:"swift-usage"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#swift-usage"}),"Swift Usage")),(0,a.kt)("p",null,"This plugin takes no parameters, and the configuration comes from content, it can just be added to the plugin array:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),"var body: some View {\n    SwiftUIPlayer(\n        flow: flow,\n        plugins: [\n          SwiftUICheckPathPlugin()\n        ],\n        result: $resultBinding\n    )\n}\n"))),(0,a.kt)("android",null,"In build.gradle",(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-kotlin"}),'implementation "com.intuit.player.plugins:check-path:$PLAYER_VERSION"\n')),(0,a.kt)("p",null,"In Player constructor"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-kotlin"}),"import com.intuit.player.plugins.checkpath.CheckPathPlugin\n\nval plugins = listOf(CheckPathPlugin())\nAndroidPlayer(plugins)\n")))),(0,a.kt)("h2",Object.assign({},{id:"api"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#api"}),"API")),(0,a.kt)(s,{mdxType:"PlatformTabs"},(0,a.kt)("core",null,(0,a.kt)("h3",Object.assign({},{id:"query"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#query"}),"Query")),(0,a.kt)("p",null,"In most of the methods, the ",(0,a.kt)("inlineCode",{parentName:"p"},"Query")," type is referenced.\nThis can either be a ",(0,a.kt)("inlineCode",{parentName:"p"},"function"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),", or an ",(0,a.kt)("inlineCode",{parentName:"p"},"object"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"string")," - an alias for ",(0,a.kt)("inlineCode",{parentName:"li"},"{ type: '<string>' }")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"object")," - uses a partial-object match to query the object"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"function")," - a filter that gets passed an object, and returns a boolean")),(0,a.kt)("p",null,"There are a few different functions exposed by the plugin you can use:"),(0,a.kt)("h3",Object.assign({},{id:"getparent"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#getparent"}),"getParent")),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"function getParent(id: string, query: Query | Query[]): Asset | undefined\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"getParent")," method allows you to query up the tree, and return the first parent that matches the given query, or ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined"),".\nIf an array is passed, the tree is parsed matching on each query item from left to right. The parent object that matches the last query item is returned."),(0,a.kt)("hr",null),(0,a.kt)("h3",Object.assign({},{id:"getparentprop"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#getparentprop"}),"getParentProp")),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"function getParentProp(id: string): string | undefined\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"getParentProp")," method returns the property on the parent object that the current object falls under.\nFor example, an ",(0,a.kt)("inlineCode",{parentName:"p"},"input")," with a ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," asset as the label, will return ",(0,a.kt)("inlineCode",{parentName:"p"},"label")," for the parentProp of the ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," asset."),(0,a.kt)("hr",null),(0,a.kt)("h3",Object.assign({},{id:"hasparentcontext"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#hasparentcontext"}),"hasParentContext")),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"function hasParentContext(id: string, query: Query | Query[]): boolean\n")),(0,a.kt)("p",null,"Similar to ",(0,a.kt)("inlineCode",{parentName:"p"},"getParent"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"hasParentContext")," method responds with the ",(0,a.kt)("em",{parentName:"p"},"existence")," of a parent with the given context."),(0,a.kt)("hr",null),(0,a.kt)("h3",Object.assign({},{id:"haschildcontext"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#haschildcontext"}),"hasChildContext")),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"function hasChildContext(id: string, query: Query | Query[]): boolean\n")),(0,a.kt)("p",null,"The compliment of ",(0,a.kt)("inlineCode",{parentName:"p"},"hasParentContext"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"hasChildContext")," traverses ",(0,a.kt)("em",{parentName:"p"},"down")," the tree for ",(0,a.kt)("em",{parentName:"p"},"any")," path from the given node that satisfies the context requirements.")),(0,a.kt)("react",null,(0,a.kt)("p",null,"The API for the ",(0,a.kt)("inlineCode",{parentName:"p"},"React")," version of the ",(0,a.kt)("inlineCode",{parentName:"p"},"CheckPathPlugin")," is similar to the ",(0,a.kt)("em",{parentName:"p"},"core")," version, just exposed through ",(0,a.kt)("inlineCode",{parentName:"p"},"React")," hooks for easy use in custom assets:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"function useGetParent(id: string, query: Query | Query[]): Asset | undefined;\nfunction useGetParentProp(id: string): string | undefined;\nfunction useHasParentContext(id: string, query: Query | Query[]): boolean;\nfunction useHasChildContext(id: string, query: Query | Query[]): boolean;\n")),(0,a.kt)("h2",Object.assign({},{id:"example"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#example"}),"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-tsx"}),"import { useHasParentContext } from '@player-ui/check-path-plugin-react';\n\nexport const MyAsset = ({ id }) => {\n  // If the asset is rendered within a form, render as a select instead of a radio button\n  const isInForm = useHasParentContext(id, 'form');\n  return isInForm ? <Select /> : <RadioGroup />;\n}\n"))),(0,a.kt)("ios",null,(0,a.kt)("h3",Object.assign({},{id:"swift-usage-1"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#swift-usage-1"}),"Swift Usage")),(0,a.kt)("p",null,"The SwiftUICheckPathPlugin attaches the ",(0,a.kt)("inlineCode",{parentName:"p"},"BaseCheckPathPlugin"),"  named ",(0,a.kt)("inlineCode",{parentName:"p"},"checkPath")," to the root of the SwiftUI view tree as an environment value, so when included any asset can use that environment value to access the base functionality"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-swift"}),'\nstruct MyAsset: View {\n    @ObservedObject var viewModel: AssetViewModel<AssetData>\n    @Environment(\\.checkPath) var checkPath\n\n    var body: some View {\n       let isInForm = checkPath?.hasParentContext(id: viewModal.data.id, query: "form")\n       if isInForm {\n         SelectChoice()\n       } else {\n         RadioGroup()\n    }\n}\n\n'))),(0,a.kt)("android",null,(0,a.kt)("p",null,"The JVM CheckPathPlugin API contains partial functionality in comparison to the core plugin, ideally this should not be used, and all logic where pathing is concerned should be handled in transforms\nIf the situation arises and this plugin is absolutely necessary, the API from the following source are available at the moment. This is subject to change in future releases:"),(0,a.kt)("p",null,(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://github.com/player-ui/player/blob/main/plugins/check-path/jvm/src/main/kotlin/CheckPathPlugin.kt"}),"CheckPathPlugin")))),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://github.dev/player-ui/player/blob/main/docs/site/pages/plugins/check-path.mdx"}),"Help to improve this page")))}p.isMDXComponent=!0}},function(e){e.O(0,[6525,7882,3832,9774,2888,179],(function(){return t=70220,e(e.s=t);var t}));var t=e.O();_N_E=t}]);