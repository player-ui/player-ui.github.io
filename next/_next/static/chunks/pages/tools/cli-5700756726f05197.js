(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1393],{30876:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return f}});var i=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"===typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(t),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||r;return t?i.createElement(m,l(l({ref:n},p),{},{components:t})):i.createElement(m,l({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"===typeof e||a){var r=t.length,l=new Array(r);l[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"===typeof e?e:a,l[1]=o;for(var c=2;c<r;c++)l[c]=t[c];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},56925:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tools/cli",function(){return t(9132)}])},43857:function(e,n,t){"use strict";t.d(n,{Z:function(){return C}});var i=t(52322),a=t(2784),r=t(97729),l=t(64033),o=t(30876),s=t(21925),c=t(76808),p=t(55165),u=t(63637),d=t.n(u);function f(){return(f=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)}function m(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}var h=["id"],g=["id"],y="chakra-skip-nav",v={userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",_focus:{clip:"auto",width:"auto",height:"auto"}},k=(0,c.Gp)((function(e,n){var t=(0,c.mq)("SkipLink",e),i=(0,c.Lr)(e),r=i.id,l=void 0===r?y:r,o=m(i,h),s=d()({},v,t);return a.createElement(c.m$.a,f({},o,{ref:n,href:"#"+l,__css:s}))}));p.Ts&&(k.displayName="SkipNavLink");var b=(0,c.Gp)((function(e,n){var t=e.id,i=void 0===t?y:t,r=m(e,g);return a.createElement(c.m$.div,f({ref:n,id:i,tabIndex:-1,style:{outline:0}},r))}));p.Ts&&(b.displayName="SkipNavContent");var x=t(46977),O=t(55002),j=function(e){var n;return(0,i.jsxs)(l.xu,{display:{base:"none",xl:"block"},children:["Table Of Contents",(0,i.jsx)(l.GS,{spacing:1,ml:"0",mt:"4",styleType:"none",children:null===(n=e.tableOfContents)||void 0===n?void 0:n.map((function(e){return(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"#".concat(e.id),children:e.text})},e.text)}))})]})},N=function(e){var n=a.useContext(x.Il).bannerExpanded,t="72px",r="calc(100vh - 88px - ".concat(n?t:"0px",")"),o="calc(100vh - 88px - 105px - ".concat(n?t:"0px",")");return(0,i.jsxs)(l.xu,{minH:"100vh",children:[(0,i.jsx)(k,{children:"Skip to Main Content"}),(0,i.jsxs)(l.kC,{flexDir:"column",padding:"2",children:[(0,i.jsx)(O._g,{}),(0,i.jsx)(l.iz,{}),(0,i.jsx)(l.kC,{children:(0,i.jsx)(l.xu,{as:"main",w:"100%",mx:"auto",children:(0,i.jsxs)(l.xu,{display:{md:"flex"},children:[(0,i.jsx)(l.xu,{display:{base:"none",md:"block"},overflow:"auto",maxH:r,pr:"8",ml:"4",children:(0,i.jsx)(O.Hy,{})}),(0,i.jsxs)(l.xu,{flex:"1",minW:"0",overflow:"auto",maxH:r,children:[(0,i.jsxs)(l.xu,{minH:o,children:[(0,i.jsx)(b,{}),e.children]}),(0,i.jsx)(l.xu,{pt:"20",children:(0,i.jsx)(O.$_,{})})]}),e.tableOfContents&&(0,i.jsx)(j,{tableOfContents:e.tableOfContents})]})})})]})]})};function C(e){return function(n){return(0,i.jsxs)(N,{children:[(0,i.jsx)(r.default,{children:(0,i.jsxs)("title",{children:["Player - ",e.title]})}),(0,i.jsx)(l.kC,{alignItems:"center",children:(0,i.jsx)(l.W2,{maxW:"container.lg",children:(0,i.jsx)(o.Zo,{components:s.tl,children:n.children})})})]})}}},9132:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return s}});t(2784);var i=t(30876),a=t(43857);function r(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l={},o=(0,a.Z)({title:"CLI",tableOfContents:[{text:"CLI",id:"cli",level:1},{text:"Config",id:"config",level:2},{text:"Plugins",id:"plugins",level:2},{text:"Commands",id:"commands",level:1}]});function s(e){var n=e.components,t=r(e,["components"]);return(0,i.kt)(o,Object.assign({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",Object.assign({},{id:"cli"}),(0,i.kt)("a",Object.assign({parentName:"h1"},{href:"#cli"}),"CLI")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"CLI")," package is a simple way for users to interact with some of the build/validation tooling. As new capabilities are added to the ecosystem, they may be exposed via this cli to use of use for developers. "),(0,i.kt)("h2",Object.assign({},{id:"config"}),(0,i.kt)("a",Object.assign({parentName:"h2"},{href:"#config"}),"Config")),(0,i.kt)("p",null,"Config files are able to customize the behavior of the CLI commands without requiring args. Behavior specific to execution can leverage ",(0,i.kt)("inlineCode",{parentName:"p"},"plugins"),", which can be composed together using ",(0,i.kt)("inlineCode",{parentName:"p"},"presets"),". Full configs can also be shared using ",(0,i.kt)("inlineCode",{parentName:"p"},"extensions"),"."),(0,i.kt)("p",null,"To resolve a full configuration, the ",(0,i.kt)("inlineCode",{parentName:"p"},"extension")," is taken as the base, the ",(0,i.kt)("inlineCode",{parentName:"p"},"presets")," are applied in order, then local ",(0,i.kt)("inlineCode",{parentName:"p"},"plugins"),".\nThe format is similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"eslint"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"babel")," and other .rc/json/js based approaches."),(0,i.kt)("p",null,"Config files are searched using cosmiconfig, which will look for:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a ",(0,i.kt)("inlineCode",{parentName:"li"},"player")," property in package.json"),(0,i.kt)("li",{parentName:"ul"},"a ",(0,i.kt)("inlineCode",{parentName:"li"},".playerrc")," file in JSON or YAML format"),(0,i.kt)("li",{parentName:"ul"},"a ",(0,i.kt)("inlineCode",{parentName:"li"},".player.json"),", ",(0,i.kt)("inlineCode",{parentName:"li"},".playerrc.yaml"),", ",(0,i.kt)("inlineCode",{parentName:"li"},".playerrc.yml"),", ",(0,i.kt)("inlineCode",{parentName:"li"},".playerrc.js"),", or ",(0,i.kt)("inlineCode",{parentName:"li"},".playerrc.cjs")," file"),(0,i.kt)("li",{parentName:"ul"},"a ",(0,i.kt)("inlineCode",{parentName:"li"},"player.config.js")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"player.config.cjs")," CommonJS module exporting an object")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"module.exports = {\n  extends: '@my-scope/base',\n  plugins: [\n    'plugin-npm-package',\n    ['some-plugin-with-config', { config: true }],\n    {\n      // Plugins can also be defined inline\n      handler: () => {},\n    },\n  ],\n};\n")),(0,i.kt)("p",null,"Options defined via the CLI arguments will take precedence over the config files (for things that overlap)."),(0,i.kt)("h2",Object.assign({},{id:"plugins"}),(0,i.kt)("a",Object.assign({parentName:"h2"},{href:"#plugins"}),"Plugins")),(0,i.kt)("p",null,"Plugins are the way to change runtime behavior of the CLI actions. This includes augmenting the behavior of the DSL compiler, language-service, and more."),(0,i.kt)("h1",Object.assign({},{id:"commands"}),(0,i.kt)("a",Object.assign({parentName:"h1"},{href:"#commands"}),"Commands")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",Object.assign({parentName:"li"},{href:"#player-dsl-compile"}),(0,i.kt)("inlineCode",{parentName:"a"},"player dsl compile")),"\nCompile Player DSL files into JSON after running TSC compiler against Typescript files")),(0,i.kt)("pre",null,(0,i.kt)("code",Object.assign({parentName:"pre"},{}),"USAGE\n  $ player dsl compile -i <value> [-c <value>] [-o <value>] [--skip-validation]\n\nFLAGS\n  -c, --config=<value>  Path to a specific config file to load.\n                        By default, will automatically search for an rc or config file to load\n  -i, --input=<value>   (required) An input directory to compile.\n                        Any jsx/ts/tsx files will be loaded via babel-require automatically.\n  -o, --output=<value>  [default: _out] Output directory to write results to\n  --skip-validation     Option to skip validating the generated JSON\n\nDESCRIPTION\n  Compile Player DSL files into JSON after running TSC compiler against Typescript files\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",Object.assign({parentName:"li"},{href:"#player-dsl-validate"}),(0,i.kt)("inlineCode",{parentName:"a"},"player dsl validate")),"\nRuns isolated TSC compiler on authored Player DSL Typescript files.")),(0,i.kt)("pre",null,(0,i.kt)("code",Object.assign({parentName:"pre"},{}),"USAGE\n  $ player dsl validate [-f <value>] [-c <value>] \n\nFLAGS\n  -c, --config=<value>  Path to a specific config file to load.\n                        By default, will automatically search for an rc or config file to load\n  -f, --files=<value>...  A list of files or globs to validate\n\nDESCRIPTION\n  Runs isolated TSC compiler on authored Player DSL Typescript files.\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",Object.assign({parentName:"li"},{href:"#player-json-validate"}),(0,i.kt)("inlineCode",{parentName:"a"},"player json validate")),"\nValidate Player JSON content")),(0,i.kt)("pre",null,(0,i.kt)("code",Object.assign({parentName:"pre"},{}),"USAGE\n  $ player json validate -f <value> [-c <value>]\n\nFLAGS\n  -c, --config=<value>    Path to a specific config file to load.\n                          By default, will automatically search for an rc or config file to load\n  -f, --files=<value>...  (required) A list of files or globs to validate\n\nDESCRIPTION\n  Validate Player JSON content\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",Object.assign({parentName:"li"},{href:"#player-dependency-versions-check"}),(0,i.kt)("inlineCode",{parentName:"a"},"player dependency-versions check")),"\nChecks for ",(0,i.kt)("inlineCode",{parentName:"li"},"@player-ui/@player-tools")," dependency version mismatches and issues warnings/solutions accordingly")),(0,i.kt)("pre",null,(0,i.kt)("code",Object.assign({parentName:"pre"},{}),"USAGE\n  $ player dependency-versions check [-c <value>] [-v] [-p] [-i <value>]\nFLAGS\n  -c, --config=<value>     Path to a specific config file to load.\n                           By default, will automatically search for an rc or config file to load\n  -i, --ignore=<value>...  Ignore the specified pattern(s) when outputting results. Note multiple patterns can be passed\n  -p, --path               Outputs full path to dependency\n  -v, --verbose            Give verbose description\nDESCRIPTION\n  Checks for `@player-ui/@player-tools` dependency version mismatches and issues warnings/solutions accordingly\n  Consider the following:\n  - The interpretation of TOP-LEVEL and NESTED dependencies is as follows:\n  a. TOP-LEVEL dependencies only have one 'node_modules' in their path\n  b. NESTED dependencies have more than one 'node_modules' in their path\n  - `@player-ui/@player-tools` dependencies are fetched not only from inside the 'node_modules' at the top of the repository in which it is run but also from 'node_modules' in sub-directories.\n  For example, if you have some 'node_modules' inside of a 'packages' folder that contains `@player-ui/@player-tools` dependencies, then these will also be fetched.\n  The display of such dependencies also depends on the first bullet point.\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("a",Object.assign({parentName:"p"},{href:"https://github.dev/player-ui/player/blob/main/docs/site/pages/tools/cli.mdx"}),"Help to improve this page")))}s.isMDXComponent=!0}},function(e){e.O(0,[6525,7882,3832,9774,2888,179],(function(){return n=56925,e(e.s=n);var n}));var n=e.O();_N_E=n}]);