(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4652],{30876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"===typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(o,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,s(s({ref:t},c),{},{components:n})):a.createElement(f,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"===typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"===typeof e?e:r,s[1]=l;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},69555:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/xlr/usage",function(){return n(88820)}])},43857:function(e,t,n){"use strict";n.d(t,{Z:function(){return w}});var a=n(52322),r=n(2784),i=n(97729),s=n(64033),l=n(30876),o=n(21925),p=n(76808),c=n(55165),u=n(63637),d=n.n(u);function m(){return(m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function f(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}var y=["id"],g=["id"],h="chakra-skip-nav",k={userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",_focus:{clip:"auto",width:"auto",height:"auto"}},b=(0,p.Gp)((function(e,t){var n=(0,p.mq)("SkipLink",e),a=(0,p.Lr)(e),i=a.id,s=void 0===i?h:i,l=f(a,y),o=d()({},k,n);return r.createElement(p.m$.a,m({},l,{ref:t,href:"#"+s,__css:o}))}));c.Ts&&(b.displayName="SkipNavLink");var x=(0,p.Gp)((function(e,t){var n=e.id,a=void 0===n?h:n,i=f(e,g);return r.createElement(p.m$.div,m({ref:t,id:a,tabIndex:-1,style:{outline:0}},i))}));c.Ts&&(x.displayName="SkipNavContent");var j=n(46977),O=n(55002),v=function(e){var t;return(0,a.jsxs)(s.xu,{display:{base:"none",xl:"block"},children:["Table Of Contents",(0,a.jsx)(s.GS,{spacing:1,ml:"0",mt:"4",styleType:"none",children:null===(t=e.tableOfContents)||void 0===t?void 0:t.map((function(e){return(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"#".concat(e.id),children:e.text})},e.text)}))})]})},N=function(e){var t=r.useContext(j.Il).bannerExpanded,n="72px",i="calc(100vh - 88px - ".concat(t?n:"0px",")"),l="calc(100vh - 88px - 105px - ".concat(t?n:"0px",")");return(0,a.jsxs)(s.xu,{minH:"100vh",children:[(0,a.jsx)(b,{children:"Skip to Main Content"}),(0,a.jsxs)(s.kC,{flexDir:"column",padding:"2",children:[(0,a.jsx)(O._g,{}),(0,a.jsx)(s.iz,{}),(0,a.jsx)(s.kC,{children:(0,a.jsx)(s.xu,{as:"main",w:"100%",mx:"auto",children:(0,a.jsxs)(s.xu,{display:{md:"flex"},children:[(0,a.jsx)(s.xu,{display:{base:"none",md:"block"},overflow:"auto",maxH:i,pr:"8",ml:"4",children:(0,a.jsx)(O.Hy,{})}),(0,a.jsxs)(s.xu,{flex:"1",minW:"0",overflow:"auto",maxH:i,children:[(0,a.jsxs)(s.xu,{minH:l,children:[(0,a.jsx)(x,{}),e.children]}),(0,a.jsx)(s.xu,{pt:"20",children:(0,a.jsx)(O.$_,{})})]}),e.tableOfContents&&(0,a.jsx)(v,{tableOfContents:e.tableOfContents})]})})})]})]})};function w(e){return function(t){return(0,a.jsxs)(N,{children:[(0,a.jsx)(i.default,{children:(0,a.jsxs)("title",{children:["Player - ",e.title]})}),(0,a.jsx)(s.kC,{alignItems:"center",children:(0,a.jsx)(s.W2,{maxW:"container.lg",children:(0,a.jsx)(l.Zo,{components:o.tl,children:t.children})})})]})}}},88820:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return o}});n(2784);var a=n(30876),r=n(43857);function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s={},l=(0,r.Z)({title:"Using XLR",tableOfContents:[{text:"Part 1 - Creating XLRs",id:"part-1---creating-xlrs",level:1},{text:"Exporting Base Type Definitions",id:"exporting-base-type-definitions",level:2},{text:"Exporting Plugin Capabilities",id:"exporting-plugin-capabilities",level:2},{text:"Part 2 - Using XLRs",id:"part-2---using-xlrs",level:1},{text:"SDK: Initialization",id:"sdk-initialization",level:2},{text:"SDK: Loading Types",id:"sdk-loading-types",level:2},{text:"SDK: Usage",id:"sdk-usage",level:2},{text:"Type Recall",id:"type-recall",level:3},{text:"Type Validation",id:"type-validation",level:3}]});function o(e){var t=e.components,n=i(e,["components"]);return(0,a.kt)(l,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",Object.assign({},{id:"part-1---creating-xlrs"}),(0,a.kt)("a",Object.assign({parentName:"h1"},{href:"#part-1---creating-xlrs"}),"Part 1 - Creating XLRs")),(0,a.kt)("p",null,"XLR creation is done through the Player CLI which can be added to your project like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"yarn install @player-tools/cli\n")),(0,a.kt)("h2",Object.assign({},{id:"exporting-base-type-definitions"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#exporting-base-type-definitions"}),"Exporting Base Type Definitions")),(0,a.kt)("p",null,"If you want to compile all exported interfaces/types to XLRs run the following command as part of your build"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"player xlr compile -m types <other options>\n")),(0,a.kt)("h2",Object.assign({},{id:"exporting-plugin-capabilities"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#exporting-plugin-capabilities"}),"Exporting Plugin Capabilities")),(0,a.kt)("p",null,"If you are writing a Player Plugin, you\u2019ll first need to have your plugin extend the ",(0,a.kt)("inlineCode",{parentName:"p"},"ExtendedPlayerPlugin")," interface and fill in the generics with an array of the interfaces/types for each Capability. For example, you can see how its done below in the ",(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://github.com/player-ui/player/blob/main/plugins/reference-assets/core/src/plugin.ts"}),"core reference assets plugin")),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),"export class ReferenceAssetsPlugin\n  implements\n    PlayerPlugin,\n    ExtendedPlayerPlugin<\n      [InputAsset, TextAsset, ActionAsset, InfoAsset, CollectionAsset]\n    >\n")),(0,a.kt)("p",null,"Then run the following command as part of your build"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"player xlr compile -m plugin <other options>\n")),(0,a.kt)("h1",Object.assign({},{id:"part-2---using-xlrs"}),(0,a.kt)("a",Object.assign({parentName:"h1"},{href:"#part-2---using-xlrs"}),"Part 2 - Using XLRs")),(0,a.kt)("h2",Object.assign({},{id:"sdk-initialization"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#sdk-initialization"}),"SDK: Initialization")),(0,a.kt)("p",null,"To start using the XLR SDK you\u2019ll need to install the SDK package"),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"yarn install @player-tools/xlr-sdk\n")),(0,a.kt)("p",null,"Next, import the SDK "),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),'import { XLRSDK } from "@player-tools/xlr-sdk"\n')),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"If you want to implement a custom object store, also import the ",(0,a.kt)("inlineCode",{parentName:"em"},"XLRRegistry")," interface and have your custom registry implement it.")),(0,a.kt)("p",null,"Lastly, just initialize an instance of it. "),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),'import { XLRSDK } from "@player-tools/xlr-sdk"\n\nconst sdk = new XLRSDK();\n')),(0,a.kt)("p",null,"or if you want to use your custom registry, just pass it in to the initializer. "),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),'import { XLRSDK } from "@player-tools/xlr-sdk"\nimport { customRegistry } from "./customRegistry"\n\nconst sdk = new XLRSDK(customRegistry);\n')),(0,a.kt)("h2",Object.assign({},{id:"sdk-loading-types"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#sdk-loading-types"}),"SDK: Loading Types")),(0,a.kt)("p",null,"If you want to load XLR types from disk, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"loadDefinitionsFromDisk")," function and pass it the path to parent folder of the ",(0,a.kt)("inlineCode",{parentName:"p"},"xlr")," directory."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),"const sdk = new XLRSDK();\nsdk.loadDefinitionsFromDisk('./common/static_xlrs/core');\n")),(0,a.kt)("p",null,"If you want to load XLR types from a module, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"loadDefinitionsFromModule")," function and pass it the module to load from."),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),'const sdk = new XLRSDK();\nsdk.loadDefinitionsFromModule(require("@player-ui/reference-assets-plugin").path);\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you want to filter any of the types that are being loaded, you can supply a ",(0,a.kt)("inlineCode",{parentName:"li"},"Filters")," object as the ",(0,a.kt)("em",{parentName:"li"},"second")," arguments"),(0,a.kt)("li",{parentName:"ul"},"If you want to apply any transform functions to the modules that you load, you can supply a list of ",(0,a.kt)("inlineCode",{parentName:"li"},"TransformFunction")," as the ",(0,a.kt)("em",{parentName:"li"},"third")," argument")),(0,a.kt)("h2",Object.assign({},{id:"sdk-usage"}),(0,a.kt)("a",Object.assign({parentName:"h2"},{href:"#sdk-usage"}),"SDK: Usage")),(0,a.kt)("p",null,"After the types are loaded into the SDK there are a couple ways to interact with them."),(0,a.kt)("h3",Object.assign({},{id:"type-recall"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#type-recall"}),"Type Recall")),(0,a.kt)("p",null,"To get a type back you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"getType")," function and pass the name of the type you want to retrieve. You can also use the ",(0,a.kt)("inlineCode",{parentName:"p"},"hasType")," function to check to see if the type exists before you try and access it. "),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),'const sdk = new XLRSDK();\nif(sdk.hasType("InputAsset")){\n  return sdk.getType("InputAsset")\n} else {\n  throw new Error("Oh no!")\n}\n')),(0,a.kt)("h3",Object.assign({},{id:"type-validation"}),(0,a.kt)("a",Object.assign({parentName:"h3"},{href:"#type-validation"}),"Type Validation")),(0,a.kt)("p",null,"To validate if some JSON content matches the expected type, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"validateType")," function. You will need to supply a ",(0,a.kt)("inlineCode",{parentName:"p"},"Node")," from the ",(0,a.kt)("inlineCode",{parentName:"p"},"jsonc-parser")," library. "),(0,a.kt)("pre",null,(0,a.kt)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),'import { parseTree } from \'jsonc-parser\';\nimport { XLRSDK } from \'@player-tools/xlr-sdk\'\n\nconst sdk = new XLRSDK();\n\n///... Loading XLRs\n\nconst mockAsset = parseTree(`\n    {\n      "id": 1,\n      "type": "input",\n      "binding": "some.data",\n      "label": {\n        "asset": {\n          "value": "{{input.label}}"\n        }\n      }\n    `);\n\nreturn sdk.validate(\'InputAsset\', mockAsset)\n')),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("a",Object.assign({parentName:"p"},{href:"https://github.dev/playerui/player/blob/main//home/circleci/.cache/bazel/_bazel_circleci/e8362d362e14c7d23506d1dfa3aea8b8/sandbox/processwrapper-sandbox/1485/execroot/player/docs/site/pages/xlr/usage.mdx"}),"Help to improve this page")))}o.isMDXComponent=!0}},function(e){e.O(0,[6525,7882,3832,9774,2888,179],(function(){return t=69555,e(e.s=t);var t}));var t=e.O();_N_E=t}]);