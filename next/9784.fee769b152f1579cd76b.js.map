{"version":3,"file":"9784.fee769b152f1579cd76b.js","mappings":"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","sources":["webpack://@player-ui/docs/../../node_modules/.aspect_rules_js/@mdx-js+react@1.6.22_react_18.3.1/node_modules/@mdx-js/react/dist/esm.js","webpack://@player-ui/docs/./pages/assets/dsl.mdx","webpack://@player-ui/docs/../../node_modules/.aspect_rules_js/@chakra-ui+skip-nav@2.1.0_1916995689/node_modules/@chakra-ui/skip-nav/dist/chunk-IZODFAGU.mjs","webpack://@player-ui/docs/./components/Page.tsx","webpack://@player-ui/docs/./components/Layout/MDXPageLayout.tsx"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport withLayout from '../../components/Layout/MDXPageLayout';\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = withLayout({\"title\":\"Writing DSL Components\",\"tableOfContents\":[{\"text\":\"Creating TSX Components\",\"id\":\"creating-tsx-components\",\"level\":1},{\"text\":\"Creating a Basic Component\",\"id\":\"creating-a-basic-component\",\"level\":2},{\"text\":\"Slots\",\"id\":\"slots\",\"level\":2},{\"text\":\"Creating a Complex Component\",\"id\":\"creating-a-complex-component\",\"level\":2},{\"text\":\"Components with Specially Handled Properties\",\"id\":\"components-with-specially-handled-properties\",\"level\":3},{\"text\":\"View Components\",\"id\":\"view-components\",\"level\":3}]})\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"creating-tsx-components\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#creating-tsx-components\"\n      }}>{`Creating TSX Components`}</a></h1>\n    <p>{`In order to take advantage of the auto-completion and validation of TypeScript types, asset libraries can export a component library for content authoring. Creating components isn’t much different than writing a React component for the web. The primative elements uses the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/intuit/react-json-reconciler\"\n      }}>{`react-json-reconciler`}</a>{` to create the JSON content tree, with utilities to make it quick and painless to create new asset-components.`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-basic-component\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#creating-a-basic-component\"\n      }}>{`Creating a Basic Component`}</a></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Asset`}</inlineCode>{` component from the `}<inlineCode parentName=\"p\">{`@player-tools/dsl`}</inlineCode>{` package is the quickest way to create a new component. The `}<inlineCode parentName=\"p\">{`Asset`}</inlineCode>{` component will take all the Asset’s properties and convert them to their equivalent JSON representation when serialized.`}</p>\n    <p>{`In the examples below, we’ll be creating a TSX component for the `}<inlineCode parentName=\"p\">{`action`}</inlineCode>{` asset in our reference set. `}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`action`}</inlineCode>{` asset has a `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` slot (which is typically used as a `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{` asset), a `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` (for flow transitions), and an `}<inlineCode parentName=\"p\">{`exp`}</inlineCode>{` for evaluating expressions.\nFor this example we’ll use a resemblance of this type, but in practice types should be imported directly from their asset rather than duplicating them.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import type { Asset, AssetWrapper, Expression } from '@player-ui/player';\n\nexport interface ActionAsset<AnyTextAsset extends Asset = Asset> extends Asset<'action'> {\n  /** The transition value of the action in the state machine */\n  value?: string;\n\n  /** A text-like asset for the action's label */\n  label?: AssetWrapper<AnyTextAsset>;\n\n  /** An optional expression to execute before transitioning */\n  exp?: Expression;\n}\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: The `}<inlineCode parentName=\"em\">{`Asset`}</inlineCode>{` type we’re importing here from the `}<inlineCode parentName=\"em\">{`@player-ui/player`}</inlineCode>{` package is different than the `}<inlineCode parentName=\"em\">{`Asset`}</inlineCode>{` component from the `}<inlineCode parentName=\"em\">{`@player-tools/dsl`}</inlineCode>{` package. The former is the basic TypeScript definition for what an Asset in Player is while the latter is a helper function for allowing DSL components to be created. Fundamentally they share a name to reinforce the abstraction of foundational capabilities to core libraries`}</em></p>\n    <p>{`To turn this interface into a usable component, create a new React component that `}<em parentName=\"p\">{`renders`}</em>{` an Asset:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { Asset, AssetPropsWithChildren } from '@player-tools/dsl';\n\nexport const Action = (props: AssetPropsWithChildren<ActionAsset>) => {\n  return <Asset type=\"action\" {...props} />;\n}\n`}</code></pre>\n    <p>{`This would allow users to import the `}<inlineCode parentName=\"p\">{`Action`}</inlineCode>{` component, and `}<em parentName=\"p\">{`render`}</em>{` it to JSON:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const myView = <Action value=\"next\" />\n`}</code></pre>\n    <p>{`which when compiled would look like `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": \"root\",\n    \"type\": \"action\",\n    \"value\": \"next\"\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AssetPropsWithChildren`}</inlineCode>{` type is a utility type to help convert the `}<inlineCode parentName=\"p\">{`Asset`}</inlineCode>{` type (which has a required `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` properties) to a type more suited for components. It changes the `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` to be optional, and adds a `}<inlineCode parentName=\"p\">{`applicability`}</inlineCode>{` property automatically.`}</p>\n    <h2 {...{\n      \"id\": \"slots\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#slots\"\n      }}>{`Slots`}</a></h2>\n    <p>{`Continuing the example fo the `}<inlineCode parentName=\"p\">{`ActionAsset`}</inlineCode>{`, we need a way for users to users to specify the nested `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` property, which itself is another asset. This can be accomplished using the `}<inlineCode parentName=\"p\">{`createSlot`}</inlineCode>{` utility function. The `}<inlineCode parentName=\"p\">{`createSlot`}</inlineCode>{` function also accept components to enable automatically creating `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`collection`}</inlineCode>{` assets when they aren’t specified where needed. If these components aren’t passed into the slot when used, the resulting content may be invalid. Let’s add a `}<inlineCode parentName=\"p\">{`Label`}</inlineCode>{` slot to our `}<inlineCode parentName=\"p\">{`Action`}</inlineCode>{` component to allow it to be easily authored. Lets assume we already have a `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Collection`}</inlineCode>{` component. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport { Asset, AssetPropsWithChildren, createSlot } from '@player-tools/dsl';\n\nexport const Action = (props: AssetPropsWithChildren<ActionAsset>) => {\n  return <Asset type=\"action\" {...props} />;\n}\n\nAction.Label = createSlot({\n  name: 'label',\n  wrapInAsset: true,\n  TextComp: SomeTextComponent\n  CollectionComp: SomeCollectionComponent\n})\n`}</code></pre>\n    <p>{`This adds component (`}<inlineCode parentName=\"p\">{`Action.Label`}</inlineCode>{`) that will automatically place any nested children under the `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` property of the parent asset:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const myView = (\n  <Action value=\"next\">\n    <Action.Label>\n      <Text value=\"Continue\" />\n    </Action.Label>\n  </Action>\n);\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\n\nconst myView = (\n  <Action value=\"next\">\n    <Action.Label>Continue</Action.Label>\n  </Action>\n);\n`}</code></pre>\n    <p>{`which when compiled would look like (note the auto injection of the `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` asset and corresponding Asset Wrapper):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": \"root\",\n    \"type\": \"action\",\n    \"value\": \"next\",\n    \"label\": {\n        \"asset\": {\n            \"id\": \"root-label-text\",\n            \"type\": \"text\",\n            \"value\": \"Continue\"\n        }\n    }\n}\n`}</code></pre>\n    <p>{`And if we wanted to have the `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` property to have to text assets we could write the following DSL`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const myView = (\n  <Action value=\"next\">\n    <Action.Label>\n        <Text>Some</Text>\n        <Text>Text</Text>\n    </Action.Label>\n  </Action>\n);\n`}</code></pre>\n    <p>{`which when compiled would look like the following (note the automatic insertion of the `}<inlineCode parentName=\"p\">{`Collection`}</inlineCode>{` Asset):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": \"root\",\n    \"type\": \"action\",\n    \"value\": \"next\",\n    \"label\": {\n        \"asset\": {\n            \"id\": \"root-collection\",\n            \"type\": \"text\",\n            \"values\": [\n                {\n                    \"asset\": {\n                        \"id\": \"root-collection-1-text\",\n                        \"type\": \"text\",\n                        \"value\": \"Some\"\n                    }\n                },{\n                    \"asset\": {\n                        \"id\": \"root-collection-2-text\",\n                        \"type\": \"text\",\n                        \"value\": \"Text\"\n                    }\n                }\n            ]\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"creating-a-complex-component\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#creating-a-complex-component\"\n      }}>{`Creating a Complex Component`}</a></h2>\n    <p>{`While a majority of Assets can be described simply via the base `}<inlineCode parentName=\"p\">{`Action`}</inlineCode>{` Component, there are certain cases where DSL components need to contain a bit more logic. This section aims to describe further tools that are offered in the `}<inlineCode parentName=\"p\">{`@player-tools/dsl`}</inlineCode>{` package.`}</p>\n    <h3 {...{\n      \"id\": \"components-with-specially-handled-properties\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#components-with-specially-handled-properties\"\n      }}>{`Components with Specially Handled Properties`}</a></h3>\n    <p>{`In the previous example, we covered how to create a DSL Component for our reference `}<inlineCode parentName=\"p\">{`Action`}</inlineCode>{` Asset. Our actual Action Asset however looks a little bit different. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\n\nexport const Action = (\n  props: Omit<AssetPropsWithChildren<ActionAsset>, 'exp'> & {\n    /** An optional expression to execute before transitioning */\n    exp?: ExpressionTemplateInstance;\n  }\n) => {\n  const { exp, children, ...rest } = props;\n\n  return (\n    <Asset type=\"action\" {...rest}>\n      <property name=\"exp\">{exp?.toValue()}</property>\n      {children}\n    </Asset>\n  );\n};\n`}</code></pre>\n    <p>{`Crucially, the difference is in how the `}<inlineCode parentName=\"p\">{`exp`}</inlineCode>{` property is handled. As the `}<inlineCode parentName=\"p\">{`exp`}</inlineCode>{` property is an `}<inlineCode parentName=\"p\">{`Expression`}</inlineCode>{`, if we just allowed the `}<inlineCode parentName=\"p\">{`Action`}</inlineCode>{` component to process this property, we would end up with an `}<inlineCode parentName=\"p\">{`ExpressionTemplate`}</inlineCode>{` instance `}<em parentName=\"p\">{`not`}</em>{` an `}<inlineCode parentName=\"p\">{`Expression`}</inlineCode>{` instance. While technically they are equivalent, there is no need to wrap the final string in the Expression Template tags (`}<inlineCode parentName=\"p\">{`@[]@`}</inlineCode>{`) since we know the string will be an `}<inlineCode parentName=\"p\">{`Expression`}</inlineCode>{` and it will just lead to additonal procssing at runtime. Therefore, we need to do a few things to properly construct this DSL component.`}</p>\n    <p>{`The first is to modify the type for the commponent. In the above code snippit we are using the `}<inlineCode parentName=\"p\">{`Omit`}</inlineCode>{` type to remove the base `}<inlineCode parentName=\"p\">{`exp`}</inlineCode>{` property from the source type and replacing it with an `}<inlineCode parentName=\"p\">{`exp`}</inlineCode>{` property that expects a `}<inlineCode parentName=\"p\">{`ExpressionTemplateInstance`}</inlineCode>{` which allows an DSL expression to be passed in. `}</p>\n    <p>{`The second is to extract out the `}<inlineCode parentName=\"p\">{`exp`}</inlineCode>{` property from the props and use a `}<inlineCode parentName=\"p\">{`property`}</inlineCode>{` component to manually control how that property will get serialized. This component is exposed by the underlying `}<inlineCode parentName=\"p\">{`react-json-reconciler`}</inlineCode>{` library which also supplies an `}<inlineCode parentName=\"p\">{`array`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`obj`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` component to allow full control over more complicated data structures. The `}<inlineCode parentName=\"p\">{`@player-tools/dsl`}</inlineCode>{` package also exposes the `}<inlineCode parentName=\"p\">{`toJsonProperties`}</inlineCode>{` function to process whole non-Asset objects.`}</p>\n    <h3 {...{\n      \"id\": \"view-components\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#view-components\"\n      }}>{`View Components`}</a></h3>\n    <p>{`For Assets that are intended to be Views, a `}<inlineCode parentName=\"p\">{`View`}</inlineCode>{` component is exported from the `}<inlineCode parentName=\"p\">{`@player-tools/dsl`}</inlineCode>{` package. Its usage is exactly the same as the `}<inlineCode parentName=\"p\">{`Asset`}</inlineCode>{` component, however it correctly handles the serialization of any Crossfield Validations that exist on the View.`}</p>\n    <hr></hr>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.dev/player-ui/player/blob/main/docs/site/pages/assets/dsl.mdx\"\n      }}>{`Help to improve this page`}</a></p>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;","'use client'\n\n// src/skip-nav.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar fallbackId = \"chakra-skip-nav\";\nfunction getStyles(styles) {\n  return {\n    userSelect: \"none\",\n    border: \"0\",\n    height: \"1px\",\n    width: \"1px\",\n    margin: \"-1px\",\n    padding: \"0\",\n    outline: \"0\",\n    overflow: \"hidden\",\n    position: \"absolute\",\n    clip: \"rect(0 0 0 0)\",\n    ...styles,\n    _focus: {\n      clip: \"auto\",\n      width: \"auto\",\n      height: \"auto\",\n      ...styles[\"_focus\"]\n    }\n  };\n}\nvar SkipNavLink = forwardRef(\n  function SkipNavLink2(props, ref) {\n    const styles = useStyleConfig(\"SkipLink\", props);\n    const { id = fallbackId, ...rest } = omitThemingProps(props);\n    return /* @__PURE__ */ jsx(chakra.a, { ...rest, ref, href: `#${id}`, __css: getStyles(styles) });\n  }\n);\nSkipNavLink.displayName = \"SkipNavLink\";\nvar SkipNavContent = forwardRef(\n  function SkipNavContent2(props, ref) {\n    const { id = fallbackId, ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        id,\n        tabIndex: -1,\n        style: { outline: 0 },\n        ...rest\n      }\n    );\n  }\n);\nSkipNavContent.displayName = \"SkipNavContent\";\n\nexport {\n  SkipNavLink,\n  SkipNavContent\n};\n//# sourceMappingURL=chunk-IZODFAGU.mjs.map","import { Box, Flex, Divider, OrderedList } from '@chakra-ui/react';\nimport { SkipNavContent, SkipNavLink } from '@chakra-ui/skip-nav';\nimport React from 'react';\nimport { AppContext } from './Context';\nimport { TopNavigation, SideNavigation, Footer } from './Navigation';\n\nconst TableOfContents = (props: PageProps) => {\n  return (\n    <Box display={{ base: 'none', xl: 'block' }}>\n      Table Of Contents\n      <OrderedList spacing={1} ml=\"0\" mt=\"4\" styleType=\"none\">\n        {props.tableOfContents?.map((h) => {\n          return (\n            <li key={h.text}>\n              <a href={`#${h.id}`}>{h.text}</a>\n            </li>\n          );\n        })}\n      </OrderedList>\n    </Box>\n  );\n};\n\ninterface PageProps {\n  tableOfContents?: Array<{\n    text: string;\n    id: string;\n    level: string;\n  }>;\n}\n\nexport const Page = (props: React.PropsWithChildren<PageProps>) => {\n  const { bannerExpanded } = React.useContext(AppContext);\n\n  const bannerHeight = '72px';\n  const maxH = `calc(100vh - 88px - ${bannerExpanded ? bannerHeight : '0px'})`;\n  const minH = `calc(100vh - 88px - 105px - ${\n    bannerExpanded ? bannerHeight : '0px'\n  })`;\n\n  return (\n    <Box minH=\"100vh\">\n      <SkipNavLink>Skip to Main Content</SkipNavLink>\n\n      <Flex flexDir=\"column\" padding=\"2\">\n        <TopNavigation />\n        <Divider />\n        <Flex>\n          <Box as=\"main\" w=\"100%\" mx=\"auto\">\n            <Box display={{ md: 'flex' }}>\n              <Box\n                display={{\n                  base: 'none',\n                  md: 'block',\n                }}\n                overflow=\"auto\"\n                maxH={maxH}\n                pr=\"8\"\n                ml=\"4\"\n              >\n                <SideNavigation />\n              </Box>\n              <Box flex=\"1\" minW=\"0\" overflow=\"auto\" maxH={maxH}>\n                <Box minH={minH}>\n                  <SkipNavContent />\n                  {props.children}\n                </Box>\n                <Box pt=\"20\">\n                  <Footer />\n                </Box>\n              </Box>\n              {props.tableOfContents && (\n                <TableOfContents tableOfContents={props.tableOfContents} />\n              )}\n            </Box>\n          </Box>\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n","import * as React from \"react\";\n// import Head from 'next/head';\nimport { Container, Flex } from \"@chakra-ui/react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport { MDXComponents } from \"../mdx-components\";\nimport { Page } from \"../Page\";\n\ninterface PageFrontmatter {\n  title: string;\n\n  tableOfContents: any;\n}\n\nexport default function withDocs(p: PageFrontmatter) {\n  const LayoutHome = (props: React.PropsWithChildren<unknown>) => {\n    return (\n      <Page>\n        {/* <Head>\n          <title>Player - {p.title}</title>\n        </Head> */}\n        <Flex alignItems=\"center\">\n          <Container maxW=\"container.lg\">\n            <MDXProvider components={MDXComponents}>\n              {props.children}\n            </MDXProvider>\n          </Container>\n        </Flex>\n      </Page>\n    );\n  };\n\n  return LayoutHome;\n}\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","TYPE_PROP_NAME","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","layoutProps","MDXLayout","withLayout","MDXContent","mdx","_extends","isMDXComponent","fallbackId","getStyles","styles","userSelect","border","height","width","margin","padding","outline","overflow","position","clip","_focus","SkipNavLink","id","rest","jsx","a","href","__css","SkipNavContent","div","tabIndex","style","TableOfContents","display","base","xl","spacing","ml","mt","styleType","tableOfContents","map","h","text","Page","bannerExpanded","bannerHeight","maxH","minH","flexDir","as","w","mx","md","pr","flex","minW","pt","withDocs","p","alignItems","maxW"],"sourceRoot":""}