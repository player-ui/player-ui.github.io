"use strict";(self.webpackChunk_player_ui_docs=self.webpackChunk_player_ui_docs||[]).push([[1095],{83190:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>y});var a=t(52112);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(t),g=r,y=u["".concat(s,".").concat(g)]||u[g]||m[g]||l;return t?a.createElement(y,o(o({ref:n},c),{},{components:t})):a.createElement(y,o({ref:n},c))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=g;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},31095:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});t(52112);var a=t(83190),r=t(21525);function l(){return l=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},l.apply(this,arguments)}const o=(i="PlatformTabs",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.yg)("div",e)});var i;const s={},p=(0,r.A)({title:"Shared Constants",platform:"core,react",tableOfContents:[{text:"Shared Constants Plugin",id:"shared-constants-plugin",level:1},{text:"Usage",id:"usage",level:2},{text:"Overriding Values in Content",id:"overriding-values-in-content",level:3},{text:"Fallback Values",id:"fallback-values",level:3},{text:"Examples",id:"examples",level:2},{text:"Common Types Plugin",id:"common-types-plugin",level:3}]});function c(e){let{components:n,...t}=e;return(0,a.yg)(p,l({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"shared-constants-plugin"},(0,a.yg)("a",{parentName:"h1",href:"#shared-constants-plugin"},"Shared Constants Plugin")),(0,a.yg)("p",null,"The Shared Constants Plugin enables users to define and override commonly used static values. It can be leveraged by other plugins to enable localization."),(0,a.yg)("h2",{id:"usage"},(0,a.yg)("a",{parentName:"h2",href:"#usage"},"Usage")),(0,a.yg)(o,{mdxType:"PlatformTabs"},(0,a.yg)("core",null,"Create the plugin and add it to Player:",(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},"\nimport { Player } from '@player-ui/player';\nimport { ConstantsPlugin } from '@player-ui/shared-constants-plugin';\n\nconst constantsPlugin = new ConstantsPlugin({\n  data: {\n    prop1: 'A',\n    prop2: 'B'\n  },\n  namespace: 'constants',\n  dataPath: 'data.constants'\n});\n\nconst player = new Player({\n  plugins: [ constantsPlugin ]\n});\n")),(0,a.yg)("p",null,"You can then query the plugin to get the value of a particular key:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"constantsPlugin.getConstants('prop1') // 'A'\n")))),(0,a.yg)("h3",{id:"overriding-values-in-content"},(0,a.yg)("a",{parentName:"h3",href:"#overriding-values-in-content"},"Overriding Values in Content")),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"dataPath")," configuration option enables content to override specific values for a particular flow: "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "constants": {\n      "prop1": "B"\n    }\n  }\n}\n')),(0,a.yg)("p",null,"using a similar query for ",(0,a.yg)("inlineCode",{parentName:"p"},"prop1"),", the value in the content takes precidence and would return ",(0,a.yg)("inlineCode",{parentName:"p"},"B"),"."),(0,a.yg)("h3",{id:"fallback-values"},(0,a.yg)("a",{parentName:"h3",href:"#fallback-values"},"Fallback Values")),(0,a.yg)("p",null,"Any query can also specify an optional ",(0,a.yg)("em",{parentName:"p"},"default")," value to return: "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"constantsPlugin.getConstants('prop3', 'default value') // 'default value'\n")),(0,a.yg)("h2",{id:"examples"},(0,a.yg)("a",{parentName:"h2",href:"#examples"},"Examples")),(0,a.yg)("h3",{id:"common-types-plugin"},(0,a.yg)("a",{parentName:"h3",href:"#common-types-plugin"},"Common Types Plugin")),(0,a.yg)("p",null,"The Common Types Plugin leverages this pattern to allow for global contextual message overrides. In order to override those messages you may use something like:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},"import { Player } from '@player-ui/player';\nimport { ConstantsPlugin } from '@player-ui/constants-plugion';\nimport { CommonTypesPlugin } from '@player-ui/common-types-plugin';\n\nconst player = new Player({\n  plugins: [\n    new CommonTypesPlugin(),\n    new ConstantsPlugin({\n      namespace: 'constants',\n      dataPath: 'data.constants',\n      data: {\n        validation: {\n          lengthError: {\n            minimum: 'Way too short',\n            maximum: 'Way too long',\n          }\n        }\n      }\n    })\n  ]\n});\n")),(0,a.yg)("p",null,"Any triggerd validation for the ",(0,a.yg)("inlineCode",{parentName:"p"},"length")," validation will now use the custom error messages. See the ",(0,a.yg)("a",{parentName:"p",href:"./common-types"},"Common Types Plugin")," for more information on the supported overrides and paths."),(0,a.yg)("hr",null),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.dev/player-ui/player/blob/main/docs/site/pages/plugins/shared-constants.mdx"},"Help to improve this page")))}c.isMDXComponent=!0},21525:(e,n,t)=>{t.d(n,{A:()=>O});var a=t(52112),r=t(9495),l=t(32532),o=t(83190),i=t(37766),s=t(90283),p=t(14769),c=t(63420),u=t(23013),m=t(47482),g=t(52947),y=t(53868),d=t(13516),f="chakra-skip-nav";function h(e){return{userSelect:"none",border:"0",height:"1px",width:"1px",margin:"-1px",padding:"0",outline:"0",overflow:"hidden",position:"absolute",clip:"rect(0 0 0 0)",...e,_focus:{clip:"auto",width:"auto",height:"auto",...e._focus}}}var v=(0,u.R)((function(e,n){const t=(0,m.Vl)("SkipLink",e),{id:a=f,...r}=(0,g.MN)(e);return(0,d.jsx)(y.B.a,{...r,ref:n,href:`#${a}`,__css:h(t)})}));v.displayName="SkipNavLink";var b=(0,u.R)((function(e,n){const{id:t=f,...a}=e;return(0,d.jsx)(y.B.div,{ref:n,id:t,tabIndex:-1,style:{outline:0},...a})}));b.displayName="SkipNavContent";var x=t(43298),P=t(2063);const C=e=>a.createElement(s.az,{display:{base:"none",xl:"block"}},"Table Of Contents",a.createElement(p._J,{spacing:1,ml:"0",mt:"4",styleType:"none"},e.tableOfContents?.map((e=>a.createElement("li",{key:e.text},a.createElement("a",{href:`#${e.id}`},e.text)))))),E=e=>{const{bannerExpanded:n}=a.useContext(x.BR),t="72px",l=`calc(100vh - 88px - ${n?t:"0px"})`,o=`calc(100vh - 88px - 105px - ${n?t:"0px"})`;return a.createElement(s.az,{minH:"100vh"},a.createElement(v,null,"Skip to Main Content"),a.createElement(r.s,{flexDir:"column",padding:"2"},a.createElement(P.IS,null),a.createElement(c.c,null),a.createElement(r.s,null,a.createElement(s.az,{as:"main",w:"100%",mx:"auto"},a.createElement(s.az,{display:{md:"flex"}},a.createElement(s.az,{display:{base:"none",md:"block"},overflow:"auto",maxH:l,pr:"8",ml:"4"},a.createElement(P.E1,null)),a.createElement(s.az,{flex:"1",minW:"0",overflow:"auto",maxH:l},a.createElement(s.az,{minH:o},a.createElement(b,null),e.children),a.createElement(s.az,{pt:"20"},a.createElement(P.wi,null))),e.tableOfContents&&a.createElement(C,{tableOfContents:e.tableOfContents}))))))};function O(e){return e=>a.createElement(E,null,a.createElement(r.s,{alignItems:"center"},a.createElement(l.m,{maxW:"container.lg"},a.createElement(o.xA,{components:i.Ul},e.children))))}}}]);
//# sourceMappingURL=1095.5925576639626467adf4.js.map